{
  "active": false,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Fetch volunteers",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch volunteers": {
      "main": [
        [
          {
            "node": "Volunteers with current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Volunteers without current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch current_matches": {
      "main": [
        [
          {
            "node": "Volunteers with current_matches",
            "type": "main",
            "index": 1
          },
          {
            "node": "Volunteers without current_matches",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Volunteers without current_matches": {
      "main": [
        [
          {
            "node": "Adds 0 current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adds 0 current_matches": {
      "main": [
        [
          {
            "node": "All volunteers with current_matches",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Volunteers with current_matches": {
      "main": [
        [
          {
            "node": "All volunteers with current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "All volunteers with current_matches": {
      "main": [
        [
          {
            "node": "Add is_available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add is_available": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-16T21:36:52.484Z",
  "id": "e1TTiOqlBA1tQszS",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[Database Pipeline] - volunteer_availability STG",
  "nodes": [
    {
      "parameters": {},
      "id": "185f1df9-417c-47f7-bb45-87253eafdfe1",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        140,
        680
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n\tid AS volunteer_id,\n        zendesk_user_id,\n\tavailability AS max_matches,\n\tCASE\n\t\tWHEN occupation = 'lawyer' THEN 'legal'\n\t\tELSE 'psychological'\n\tEND AS support_type,\n\t'not_found' AS support_expertise,\n\tCASE\n\t\tWHEN modality = 'online' OR modality = 'both' THEN TRUE\n\t\tELSE FALSE\n\tEND AS offers_online_support,\n\toffers_libras_support,\n\tlatitude AS lat,\n\tlongitude AS lng,\n\tcity,\n\tstate,\n\tcreated_at,\n\tupdated_at,\n        CASE\n\t\tWHEN \n\t\t\tcondition = 'disponivel'\n\t\t\tAND first_name IS NOT NULL\n\t\t\tAND first_name != 'not_found'\n\t\t\tAND register_number != 'not_found'\n\t\t\tAND phone != 'not_found'\t\t\n\t\tTHEN TRUE\n\t\tELSE FALSE\n\tEND AS previous_is_available,\n  condition\nFROM public.volunteers",
        "additionalFields": {}
      },
      "id": "54763088-3f3b-4ebe-aa6d-a85b839bca73",
      "name": "Fetch volunteers",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        460
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n   volunteer_id,\n   COUNT(*) AS current_matches\nFROM match.matches\nWHERE status IN ('waiting_contact', 'in_contact')\nAND volunteer_id IS NOT NULL\nGROUP BY volunteer_id",
        "additionalFields": {}
      },
      "id": "4682c918-7c80-479b-bf35-f7a93641b48d",
      "name": "Fetch current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        480,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "volunteer_id",
              "field2": "volunteer_id"
            }
          ]
        },
        "options": {
          "multipleMatches": "first"
        }
      },
      "id": "e8b78ce4-77e0-4ca3-bbe0-a73d124dee94",
      "name": "Volunteers with current_matches",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        900,
        480
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "volunteer_id",
              "field2": "volunteer_id"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input1",
        "options": {}
      },
      "id": "d7445416-f3ae-410b-9b4d-216910cf1302",
      "name": "Volunteers without current_matches",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        900,
        840
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  item.json.current_matches = 0;\n}\n\nreturn $input.all();"
      },
      "id": "3c607fe0-919f-468d-8482-ffcef496b2bf",
      "name": "Adds 0 current_matches",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1120,
        840
      ]
    },
    {
      "parameters": {},
      "id": "349f10ba-0b23-494e-937d-17229d2e2000",
      "name": "All volunteers with current_matches",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        1400,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n  if(item.json.previous_is_available = true && item.json.current_matches < item.json.max_matches){\n    item.json.is_available = true;\n  }\n  else {\n    item.json.is_available = false;\n  }\n}\n\nreturn $input.all();"
      },
      "id": "8a15fc91-c8ea-404a-80a4-70d73411c6ab",
      "name": "Add is_available",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1660,
        500
      ]
    },
    {
      "parameters": {
        "table": "volunteer_availability",
        "columns": "volunteer_id, max_matches, support_type, support_expertise, offers_online_support, offers_libras_support, lat, lng, city, state, created_at, updated_at, current_matches, is_available",
        "additionalFields": {}
      },
      "id": "50dc4cbd-fae7-4724-b588-11ccf1bc1cd2",
      "name": "Insert into volunteer_availability",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1840,
        500
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "6e3ce289-3e94-42db-8981-722b66230547",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "disponivel",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "3b8b8f36-6736-4483-be40-538d211ae71f",
              "leftValue": "={{ $json.is_available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e09a0cf6-c78b-45b7-9b0f-60fd50f91e5c",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1840,
        320
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-16T21:22:09.302Z",
      "updatedAt": "2024-01-16T21:22:09.302Z",
      "id": "8M37j63g33Qdgeyh",
      "name": "database pipeline"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-01-28T18:20:05.000Z",
  "versionId": "9263552f-f15c-489b-81a8-6ccfe0e3c8c9"
}