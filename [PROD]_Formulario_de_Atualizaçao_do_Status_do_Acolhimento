{
  "active": true,
  "connections": {
    "Encontrou o match?": {
      "main": [
        [
          {
            "node": "O status atual é waiting_contact?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém o transactionaId da Voluntária": {
      "main": [
        [
          {
            "node": "email Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - comunicação",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O status atual é waiting_contact?": {
      "main": [
        [
          {
            "node": "Comentário interno ticket MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Comentário interno ticket Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define ações do match",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define ações do support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define ações da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define comunicações MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define comunicações Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o current_matches?": {
      "main": [
        [
          {
            "node": "Atualiza current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Deve atualizar o status da voluntária?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém os dados": {
      "main": [
        [
          {
            "node": "Busca infos no banco de dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos no banco de dados": {
      "main": [
        [
          {
            "node": "Encontrou o match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca current_matches e status da Voluntária": {
      "main": [
        [
          {
            "node": "Deve atualizar o current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o status da voluntária?": {
      "main": [
        [
          {
            "node": "condition = disponivel",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status da Mulher = Disponivel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define ações do match": {
      "main": [
        [
          {
            "node": "Ações do match",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define ações do support_request": {
      "main": [
        [
          {
            "node": "Ações do support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define ações da Voluntária": {
      "main": [
        [
          {
            "node": "Ações da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define comunicações MSR": {
      "main": [
        [
          {
            "node": "Comunicação MSR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define comunicações Voluntária": {
      "main": [
        [
          {
            "node": "Comunicação Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações do support_request": {
      "main": [
        [
          {
            "node": "ticket MSR - aguardando match sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "support_request status = waiting_for_match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "support_request status = waived",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - MSR desistiu do atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações do match": {
      "main": [
        [
          {
            "node": "match status = in_contact",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "match status = interrupted_before_support1",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca current_matches e status da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações da Voluntária": {
      "main": [
        [
          {
            "node": "Status da Mulher = Indisponivel - Agenda",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comunicação MSR": {
      "main": [
        [
          {
            "node": "email MSR - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - comunicação",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "email MSR - nova voluntária sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - comunicação1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "email MSR - Voluntária não respondeu",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - comunicação2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Comunicação Voluntária": {
      "main": [
        [
          {
            "node": "Obtém o transactionaId da Voluntária",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "email Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - comunicação3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ticket Voluntária - Voluntária não respondeu",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ticket Voluntária - MSR desistiu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR ou Voluntária preencheu o formulário": {
      "main": [
        [
          {
            "node": "Obtém os dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-29T18:15:17.457Z",
  "id": "SUIOpTr3nKUikxUA",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] Formulário de Atualização do Status do Acolhimento",
  "nodes": [
    {
      "parameters": {
        "content": "## Atualizações do pedido de acolhimento",
        "height": 125.37595776585795,
        "width": 340.2325169896819
      },
      "id": "ddb7c8a0-3d4c-42b8-8351-a966a12bdb88",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1680,
        1760
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "dd3678ee-3ca4-4887-8696-ed25abe79551",
              "leftValue": "={{ $json.match_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3c57620c-ca26-4928-a370-e633ebedabd8",
      "name": "Encontrou o match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1120,
        1940
      ]
    },
    {
      "parameters": {
        "errorMessage": "match não encontrado"
      },
      "id": "2a62f467-5a2d-4c9c-835c-32b7317a245b",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        -880,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "Atendimento Iniciado",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento",
            "instrumental_triagem_1",
            "triagem-1-enviado"
          ]
        }
      },
      "id": "b43ca40b-7cf5-4eed-966d-7f69a5c43cf0",
      "name": "ticket Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        460,
        820
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clve8mcba01ehw7t4j7z3pswx\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\"  \n  }\n}",
        "options": {}
      },
      "id": "23645e74-2f2f-4931-8dcf-b179bce0256c",
      "name": "email MSR - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        340,
        3540
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"{{ $json.transactional_id }}\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "90678ddd-477a-45c0-8a16-6fb2e85660df",
      "name": "email Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        500,
        5140
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n\n  const supportType = item.json.support_type;\n  const transactionalId = supportType === 'legal' ? 'clve91yrh006zn5kbfmaeabcv' : 'clve9g19d00h2lk7s7uh7510h';\n\n  item.json.transactional_id = transactionalId;\n\n}\n\nreturn $input.all();"
      },
      "id": "59d34ccf-08c4-41ac-a5c6-37490ea76e4b",
      "name": "Obtém o transactionaId da Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        5140
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "Encaminhamento Interrompido",
          "status": "open",
          "tags": [
            "atualizar-data-encaminhamento"
          ]
        }
      },
      "id": "bf3a696b-16d8-40ad-9b65-896f52e9e79b",
      "name": "ticket MSR - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        460,
        1340
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"clvh3x98300621fpkx8is5zyj\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_email\": \"{{ $json.volunteer_email }}\"\n  }\n}",
        "options": {}
      },
      "id": "cf685b6c-8361-46ab-8a75-2dbed534f763",
      "name": "email Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        300,
        5520
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvjzaan500moauwib4clwqah\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\"\n  }\n}",
        "options": {}
      },
      "id": "8584b5c4-a01c-4a77-8058-5c0e5cacf384",
      "name": "email MSR - nova voluntária sem prioridade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        340,
        3980
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "indisponível_agenda"
              }
            ]
          }
        }
      },
      "id": "2ad5e750-c60e-4f4b-87e3-cc65efc87fc2",
      "name": "Status da Mulher = Indisponivel - Agenda",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        320,
        3040
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'indisponível_agenda', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'indisponível_agenda', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = FALSE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "75555fe7-aa41-4a6e-b41d-b22b169b0e53",
      "name": "Atualiza status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        320,
        3240
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "24c712a9-5da0-47cf-85ab-3b8d6795bb22",
              "leftValue": "={{ $json.current_status }}",
              "rightValue": "=waiting_contact",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a1084be6-97cd-4f97-8bf1-ecb211721f36",
      "name": "O status atual é waiting_contact?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -880,
        1920
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvldhxm001hy7b5dbbi8oprs\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "011839f0-7161-4894-97c9-70c9332b4bae",
      "name": "email MSR - Voluntária não respondeu",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        360,
        4460
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "Encaminhamento Interrompido",
          "status": "pending"
        }
      },
      "id": "97ddefc4-97ba-44a7-bddb-72bbca187c41",
      "name": "ticket Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        460,
        1520
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "jsonParameters": true,
        "updateFieldsJson": "={\n  \"status\": \"open\",\n  \"comment\": {\n    \"public\": true,\n    \"author_id\": 377511446392,\n    \"body\": \"Olá, {{ $json.volunteer_first_name }}! Como você está?!\\n\\nHá um tempo atrás enviamos o seu contato para **{{ $json.msr_first_name}}** e fomos informadas que a mesma está com dificuldade de contatá-la.\\n\\nDiante disso, estamos entrando em contato para saber se está tudo bem? Você se encontra com algum problema tecnológico? **Caso tenha alterado seus dados de contato, é imprescindível que nos mantenha informadas.**\\n\\nPedimos que nos informe se você continua disponível para o atendimento e se segue conosco no projeto. A não resposta deste e-mail será compreendida pela equipe como inatividade e seu cadastro será suspenso.\\n\\nLembramos que as acolhidas são orientadas a entrar em contato via WhatsApp (mensagem de texto ou voz) e também por meio de ligação telefônica. Esteja atenta a essas formas de contato!\\n\\nÉ muito importante contar com a sua participação na nossa rede de voluntárias, obrigada por poder contar com você <3\\n\\nAbraços,\\nEquipe do Mapa do Acolhimento\"\n  }\n}"
      },
      "id": "29743c42-ad42-4ee2-9522-a590dfa154af",
      "name": "ticket Voluntária - Voluntária não respondeu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        320,
        6060
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "31c87667-f285-4d84-8e6b-452676f4758e",
      "name": "Deve atualizar o current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        680,
        1720
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "4b15ed5d-c80b-4142-9d9f-825033bd5d73",
      "name": "Atualiza current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        940,
        1520
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR está na fila do Match Diário",
          "status": "open",
          "tags": [
            "nova-voluntaria-sem-prioridade"
          ]
        }
      },
      "id": "4395caa9-1551-4333-b23a-55663255e557",
      "name": "ticket MSR - aguardando match sem prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        320,
        2280
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "disponivel"
              }
            ]
          }
        }
      },
      "id": "eb5cfd9a-c125-4f50-9dae-dd2a59b64ee1",
      "name": "Status da Mulher = Disponivel",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1220,
        1680
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getFormAnswer(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n  \n  const formAnswer = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return formAnswer\n}\n\noutput = []\nfor (const item of $input.all()) {\n  \n  const matchId = getHiddenFieldValue(item, 'match_id');\n  const formAnswer = getFormAnswer(item);\n  const whoAnswered = item.json.body.data.formId === 'nrlEq5' ? 'Voluntária' : 'MSR'\n    \n  \n  output.push(\n    {\n      who_answered: whoAnswered,\n      form_answer: formAnswer,\n      match_id: matchId\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "653469ec-b58c-4d3c-9901-6762123eb76e",
      "name": "Obtém os dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1480,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nA {{ $json.who_answered}} respondeu o formulário: <i>\"{{ $json.form_answer }}\"</i>\n</br>\n</br>\n<strong>Nome da voluntária:</strong> {{ $json.volunteer_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n"
        }
      },
      "id": "e546c978-4858-4375-9e2a-e14502782997",
      "name": "Comentário interno ticket MSR",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        -660,
        980
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nA {{ $json.who_answered}} respondeu o formulário: <i>\"{{ $json.form_answer }}\"</i>\n</br>\n</br>\n<strong>Nome da MSR:</strong> {{ $json.msr_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>"
        }
      },
      "id": "140bd98a-724b-4d5f-85cf-822f18f67dcf",
      "name": "Comentário interno ticket Voluntária",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        -660,
        1160
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = 'in_contact', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, 'in_contact', NOW());",
        "options": {}
      },
      "id": "58cadfd7-0b55-4616-b71a-033015df29a4",
      "name": "match status = in_contact",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        460,
        460
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "Atendimento Iniciado",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento"
          ]
        }
      },
      "id": "2d964467-6cf2-464b-b4f2-524005b363be",
      "name": "ticket MSR - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        460,
        640
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = 'interrupted_before_support', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, 'interrupted_before_support', NOW());",
        "options": {}
      },
      "id": "aee6d496-15a2-4113-ba9f-f39ad62dbec8",
      "name": "match status = interrupted_before_support1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        460,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  '{{ $json.form_answer }}' AS form_answer,\n  '{{ $json.who_answered }}' AS who_answered,\n  match_id,\n  status AS current_status,\n  support_request_id,\n  support_type,\n  msr_zendesk_ticket_id,\n  volunteer_zendesk_ticket_id,\n  SUBSTRING(m.created_at::VARCHAR, 0, 11) AS match_created_at,\n  msr_id,\n  p.first_name AS msr_first_name,\n  p.email AS msr_email,\n  volunteer_id,\n  v.first_name AS volunteer_first_name,\n  zendesk_user_id AS volunteer_zendesk_user_id,\n  v.email AS volunteer_email,\n  CASE \n    WHEN support_type = 'legal' THEN 'advogada' \n    ELSE 'psicóloga' \n   END AS volunteer_type\nFROM match.matches m\nLEFT JOIN volunteers v ON id = volunteer_id\nLEFT JOIN pii_sec.msr_pii p USING(msr_id)\nWHERE match_id = {{ $json.match_id }}",
        "options": {}
      },
      "id": "30cc33a9-747e-45a5-98ad-6de1bb21b0e3",
      "name": "Busca infos no banco de dados",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        -1300,
        1940
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waiting_for_match', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waiting_for_match', NOW());",
        "options": {}
      },
      "id": "f712b34f-6fb6-46e8-bce1-208a5dde1d07",
      "name": "support_request status = waiting_for_match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        340,
        2080
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "internalNote": "MSR informou pelo formulário que escolhe não seguir com o atendimento",
          "publicReply": "=Olá {{ $json.volunteer_first_name }}​, espero que esteja bem na medida do possível!\n\nEstamos entrando em contato para informar que a acolhida {{ $json.msr_first_name }} encaminhada a você optou, neste momento, por não seguir nos atendimentos com o Mapa.\n\nInfelizmente, não é raro que haja desistência, pois o caminho para romper o ciclo da violência muitas vezes acontece a passos lentos. Esperamos que ela se cadastre novamente em breve ou que já tenha encontrado outra forma de se fortalecer.\n\nDesta forma, estamos liberando esta vaga para outra mulher que está aguardando na fila de pedidos de ajuda. Voltaremos a entrar em contato caso haja outro encaminhamento. Agradecemos pela participação e disponibilidade!\n\nForte abraço,\nEquipe do Mapa do Acolhimento <3",
          "status": "pending"
        }
      },
      "id": "8670972f-9bff-4831-9e2f-97e6b062e13a",
      "name": "ticket Voluntária - MSR desistiu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        320,
        6300
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waived', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waived', NOW());",
        "options": {}
      },
      "id": "db95a2ed-9dc6-462b-99ea-0ff742efafdd",
      "name": "support_request status = waived",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        320,
        2560
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "internalNote": "Desistência",
          "status": "pending"
        }
      },
      "id": "76d67440-1f13-4219-9f19-bcd04ce36471",
      "name": "ticket MSR - MSR desistiu do atendimento",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        320,
        2720
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    zendesk_user_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, zendesk_user_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "077f8092-30f4-4f39-bb1e-3c1178b4a921",
      "name": "Busca current_matches e status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        460,
        1720
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "bcfcd581-16f2-477b-8351-61a218c56805",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "indisponivel_sem_vagas",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "3ef0e89a-2cc6-4fbd-b6fc-8b7dc638dc68",
              "leftValue": "={{ $json.calculated_current_matches }}",
              "rightValue": "={{ $json.max_matches }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "20dea94a-5564-4689-b0b9-39bb7a6e7597",
      "name": "Deve atualizar o status da voluntária?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        940,
        1700
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "9761999a-2d1c-4812-a44c-03f13ef10a08",
      "name": "condition = disponivel",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1220,
        1500
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function getMatchAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"encaminhamento interrompido\",\n    \"Escolho não seguir com o atendimento\": \"encaminhamento interrompido\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"Não conseguirei atendê-la\": \"encaminhamento interrompido\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n\n  \n  const matchAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return matchAction\n  \n}\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const matchAction = getMatchAction(whoAnswered, formAsnwer)\n  \n  item.json.match_action = matchAction\n}\n\nreturn $input.all();"
      },
      "id": "b18c32ec-ece8-44e1-a756-69901fa94810",
      "name": "Define ações do match",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        1160
      ]
    },
    {
      "parameters": {
        "jsCode": "function getsupportRequestAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"fila do match diário\",\n    \"Escolho não seguir com o atendimento\": \"desistência\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"Não conseguirei atendê-la\": \"fila do match diário\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n\n  const supportRequestAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return supportRequestAction\n  \n}\n\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const supportRequestAction = getsupportRequestAction(whoAnswered, formAsnwer)\n  \n  item.json.support_request_action = supportRequestAction\n}\n\nreturn $input.all();"
      },
      "id": "1686e227-f1bb-49a1-b376-f4c5d0e64fd2",
      "name": "Define ações do support_request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -200,
        2420
      ]
    },
    {
      "parameters": {
        "jsCode": "function getvolunteerAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"indisponível - agenda\",\n    \"Escolho não seguir com o atendimento\": \"sem ação\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"Não conseguirei atendê-la\": \"indisponível - agenda\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n  \n  const volunteerAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return volunteerAction\n  \n}\n\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const volunteerAction = getvolunteerAction(whoAnswered, formAsnwer)\n  \n  item.json.volunteer_action = volunteerAction\n}\n\nreturn $input.all();"
      },
      "id": "c214433f-1ce3-4d0a-ac87-0e2150aa0520",
      "name": "Define ações da Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        3140
      ]
    },
    {
      "parameters": {
        "jsCode": "function getMSRComms(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"A voluntária não me respondeu\": \"voluntária não respondeu\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"fila do match diário\",\n    \"Escolho não seguir com o atendimento\": \"desistência\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"Não conseguirei atendê-la\": \"fila do match diário\",\n    \"Ela não entrou em contato comigo\": \"sem comunicação\"\n  }\n  \n  const msrComms = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return msrComms\n  \n}\n\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const msrComms = getMSRComms(whoAnswered, formAsnwer)\n  \n  item.json.msr_comms = msrComms\n}\n\nreturn $input.all();"
      },
      "id": "73ae2701-7a4b-47c2-a44c-d39ed20604cb",
      "name": "Define comunicações MSR",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -160,
        3760
      ]
    },
    {
      "parameters": {
        "jsCode": "function getVolunteerComms(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"A voluntária não me respondeu\": \"voluntária não respondeu\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"encaminhamento interrompido\",\n    \"Escolho não seguir com o atendimento\": \"desistência\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"Não conseguirei atendê-la\": \"encaminhamento interrompido\",\n    \"Ela não entrou em contato comigo\": \"sem comunicação\"\n  }\n  \n  const volunteerComms = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return volunteerComms\n  \n}\n\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const volunteerComms = getVolunteerComms(whoAnswered, formAsnwer)\n  \n  item.json.volunteer_comms = volunteerComms\n}\n\nreturn $input.all();"
      },
      "id": "5bb3ba00-99b8-401b-8240-c3a276a4a12c",
      "name": "Define comunicações Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        5400
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "fila do match diário",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "fila do match diário"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8eb67a42-b7ef-4542-9628-0bca31e3db8d",
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "desistência",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "desistência"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "sem ação",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "5520298c-67d6-4387-980d-323621125de6",
      "name": "Ações do support_request",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -20,
        2420
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "atendimento iniciado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8eb67a42-b7ef-4542-9628-0bca31e3db8d",
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "encaminhamento interrompido",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "encaminhamento interrompido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "sem ação",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "ef58e932-b8c0-41f4-ab07-fd8350c89c1b",
      "name": "Ações do match",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        40,
        1160
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.volunteer_action }}",
                    "rightValue": "indisponível - agenda",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "indisponível - agenda"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.volunteer_action }}",
                    "rightValue": "sem ação",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "b14e6161-0e07-436e-972a-9249bb9cfce9",
      "name": "Ações da Voluntária",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        0,
        3140
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.msr_comms }}",
                    "rightValue": "atendimento iniciado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.msr_comms }}",
                    "rightValue": "fila do match diário",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "fila do match diário"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "08317b2d-e81a-4cc4-b1dd-b7605baf3a08",
                    "leftValue": "={{ $json.msr_comms }}",
                    "rightValue": "voluntária não respondeu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voluntária não respondeu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd310639-99e7-4ac3-99eb-d62e269c81bf",
                    "leftValue": "={{ $json.msr_comms }}",
                    "rightValue": "sem comunicação",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem comunicação"
            }
          ]
        },
        "options": {}
      },
      "id": "850111e1-57f5-44cd-9aaf-d02c647716fa",
      "name": "Comunicação MSR",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        20,
        3760
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "MSR recebeu a <a href=\"https://app.loops.so/transactional/clve8mcba01ehw7t4j7z3pswx\">Comunicação de Atendimento Iniciado</a>"
        }
      },
      "id": "5f80aad7-c861-4fdf-8c4d-b93034b9c20d",
      "name": "ticket MSR - comunicação",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        340,
        3720
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "MSR recebeu a <a href=\"https://app.loops.so/transactional/clvjzaan500moauwib4clwqah\">Comunicação de Encaminhamento Interrompido + Fila do Match Diário</a>"
        }
      },
      "id": "249832fc-ebd5-4486-82ba-c087e195ce84",
      "name": "ticket MSR - comunicação1",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        340,
        4160
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "MSR recebeu a <a href=\"https://app.loops.so/transactional/clvldhxm001hy7b5dbbi8oprs\">Comunicação A Voluntária Não Respondeu</a>"
        }
      },
      "id": "c566fbb5-87ed-48a6-ac11-133852f3ea6b",
      "name": "ticket MSR - comunicação2",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        360,
        4640
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "Voluntária recebeu a <a href=\"https://app.loops.so/transactional/clvh3x98300621fpkx8is5zyj\">Comunicação de Encaminhamento Interrompido</a>"
        }
      },
      "id": "41f262b9-eb84-45fc-9de6-887cfa24b050",
      "name": "ticket Voluntária - comunicação3",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        300,
        5680
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=Voluntária recebeu a <a href=\"https://app.loops.so/transactional/{{ $json.transactional_id }}\">Comunicação de Atendimento Iniciado</a>"
        }
      },
      "id": "19cb3e30-384f-4c40-8265-6794ac9d45bf",
      "name": "ticket Voluntária - comunicação",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        500,
        5340
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.volunteer_comms }}",
                    "rightValue": "atendimento iniciado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.volunteer_comms }}",
                    "rightValue": "encaminhamento interrompido",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "encaminhamento interrompido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "08317b2d-e81a-4cc4-b1dd-b7605baf3a08",
                    "leftValue": "={{ $json.volunteer_comms }}",
                    "rightValue": "voluntária não respondeu",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "voluntária não respondeu"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f74d173e-f9e2-42f1-b698-f8ece0485998",
                    "leftValue": "={{ $json.volunteer_comms }}",
                    "rightValue": "desistência",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "desistência"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "dd310639-99e7-4ac3-99eb-d62e269c81bf",
                    "leftValue": "={{ $json.volunteer_comms }}",
                    "rightValue": "sem comunicação",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem comunicação"
            }
          ]
        },
        "options": {}
      },
      "id": "a41a22b9-f91a-4533-8a52-0e956a0881bc",
      "name": "Comunicação Voluntária",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        20,
        5400
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "new-atualizacao-status-acolhimento",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "85f3b50a-511a-4449-9083-3116ce79ce18",
      "name": "MSR ou Voluntária preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -1660,
        1940
      ],
      "webhookId": "6d52b3c7-e942-4595-b4b4-4ca0be2fd193",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    }
  ],
  "pinData": {
    "MSR ou Voluntária preencheu o formulário": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1502",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "34.96.41.211",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "909b51d4d563edee-LHR",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "x-forwarded-for": "34.96.41.211, 141.101.99.100",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-prod-users-gwc-3-6db8488cf7-5k6rh",
            "x-is-trusted": "yes",
            "x-real-ip": "34.96.41.211"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "bf5c683d-ccf1-4773-87bf-3f96693baf33",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2025-01-29T18:35:01.006Z",
            "data": {
              "responseId": "GMAjNO",
              "submissionId": "GMAjNO",
              "respondentId": "QABR6A",
              "formId": "nPbElx",
              "formName": "[STG] [MSR] Atualização de Status do Acolhimento",
              "createdAt": "2025-01-29T18:35:00.000Z",
              "fields": [
                {
                  "key": "question_Rd8yZ4_49a7aed9-982a-42a8-8b7f-44f8c704ba30",
                  "label": "msr_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "MSR"
                },
                {
                  "key": "question_Rd8yZ4_d400ac51-e0f1-45af-ada1-82b432d4c090",
                  "label": "match_id",
                  "type": "HIDDEN_FIELDS",
                  "value": "25678"
                },
                {
                  "key": "question_Rd8yZ4_c3679be1-7771-4343-b8d5-4148fc0611f7",
                  "label": "volunteer_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Voluntária"
                },
                {
                  "key": "question_Rd8yZ4_3734a5c1-2c35-4d35-955e-5db09e719fcf",
                  "label": "volunteer_type",
                  "type": "HIDDEN_FIELDS",
                  "value": "advogada"
                },
                {
                  "key": "question_Rd8yZ4_6db74f84-f86f-49f6-b4a8-5b009347449c",
                  "label": "match_status",
                  "type": "HIDDEN_FIELDS",
                  "value": "waiting_contact"
                },
                {
                  "key": "question_oDlL0O",
                  "label": "match_status",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "7eebc6e6-7d1a-4907-aef7-1ae3e7c0d556"
                  ],
                  "options": [
                    {
                      "id": "7eebc6e6-7d1a-4907-aef7-1ae3e7c0d556",
                      "text": "Já iniciamos o atendimento"
                    },
                    {
                      "id": "6485aa20-25af-49f6-a3c8-3643fd4d5be0",
                      "text": "A voluntária não me respondeu"
                    },
                    {
                      "id": "ff024a15-9d91-4cd5-83c8-c63243fe5608",
                      "text": "A voluntária me respondeu, mas não está disponível para me atender"
                    },
                    {
                      "id": "be2743c1-e00a-4964-986e-da55b4a11078",
                      "text": "Escolho não seguir com o atendimento"
                    }
                  ]
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/new-atualizacao-status-acolhimento",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-01-29T18:15:17.461Z",
      "updatedAt": "2025-01-29T18:15:17.461Z",
      "role": "workflow:owner",
      "workflowId": "SUIOpTr3nKUikxUA",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2025-10-20T18:46:22.000Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749493410027
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-20",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-29T20:04:58.000Z",
  "versionId": "bee75e10-3458-4ead-b107-ed520ca02413"
}