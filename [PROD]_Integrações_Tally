{
  "active": true,
  "connections": {
    "Possui match?": {
      "main": [
        [
          {
            "node": "Envia e-mail pedindo que ela entre em contato",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Descadastra a voluntária no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da voluntária no Zendesk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Envia e-mail confirmando o descadastro",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca voluntária no BD": {
      "main": [
        [
          {
            "node": "Possui match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam": {
      "main": [
        [
          {
            "node": "Busca voluntária no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voluntária deseja se descadastrar": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR jurídico": {
      "main": [
        [
          {
            "node": "ainda quer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR psicológico": {
      "main": [
        [
          {
            "node": "ainda quer1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Verifica se precisa de atendimento e qual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer1": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match4": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed8": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam2": {
      "main": [
        [
          {
            "node": "Busca support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quer continuar na fila?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o ticket no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou a MSR?": {
      "main": [
        [
          {
            "node": "Envia e-mail de Encaminhamento para Serviço Público",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request": {
      "main": [
        [
          {
            "node": "Encontrou o support_request?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o support_request?": {
      "main": [
        [
          {
            "node": "Quer continuar na fila?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca MSR": {
      "main": [
        [
          {
            "node": "Encontrou a MSR?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR preencheu o formulário": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-24T18:25:27.509Z",
  "id": "8K06c4EqVrK40A9W",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] Integrações Tally",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "8c295d83-7a45-4d59-b875-8756f37f49da",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "cae4e676-03a8-46e1-b440-c068677f7f34",
      "name": "Possui match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers \nSET condition = 'descadastrada', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }};\n\nINSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'descadastrada', NOW());\n\nUPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "5bfe1e31-146c-41f7-8219-c4ba56fd562a",
      "name": "Descadastra a voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id AS volunteer_id,\n  email,\n  first_name,\n  phone,\n  zendesk_user_id,\n  COALESCE(current_matches, 0) AS current_matches,\n  '{{ $json.unsubscription_reason }}' AS unsubscription_reason,\n  '{{ $json.unsubscription_description }}' AS unsubscription_description\nFROM volunteers\nLEFT JOIN volunteer_availability ON id = volunteer_id\nWHERE email = LOWER('{{ $json.email }}')",
        "options": {}
      },
      "id": "0bef115f-4852-4cbc-a530-1b67fec8b415",
      "name": "Busca voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1160,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "descadastrada"
              }
            ]
          }
        }
      },
      "id": "f1a9decb-512b-44a0-8084-f8a5f678eb63",
      "name": "Atualiza status da voluntária no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        1060
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8sn93v003e145jlfb9gf67\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "a5d48b6e-d588-4fcb-a3a9-978dd472a61c",
      "name": "Envia e-mail pedindo que ela entre em contato",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2120,
        100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8up5lj0005iyhgjmq7qtqi\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "686bfd99-c39b-4e0d-927c-5b913f4fbd46",
      "name": "Envia e-mail confirmando o descadastro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        840
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C06R9JPDEQN",
          "mode": "list",
          "cachedResultName": "alertas-tech-provisao"
        },
        "text": "=:no_entry_sign: Voluntária Descadastrada automaticamente pelo formulário de descadastro :no_entry_sign:\n\nvolunteer_id: {{ $json.volunteer_id }}\nemail: {{ $json.email }}\ntelefone: {{ $json.phone }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "id": "1142d983-8b10-4bbe-9cc2-79ce124631b7",
      "name": "Avisa o time de provisão de serviços",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        2100,
        1280
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "01G85hUbLT4VlY92",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_unsubscriptions (volunteer_id, unsubscription_reason, unsubscription_description, created_at, updated_at)\nVALUES ({{ $json.volunteer_id }}, '{{ $json.unsubscription_reason }}', '{{ $json.unsubscription_description }}', NOW(), NOW())",
        "options": {}
      },
      "id": "c77e3cc7-e518-4e95-9472-95fc39692eb8",
      "name": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        640
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfor (const item of $input.all()) {\n  const volunteerEmail = item.json.body.data.fields[1].value;\n  const unsubscriptionReasonValue = item.json.body.data.fields[2].value;\n\n  const unsubscriptionReasonLabel = item.json.body.data.fields[2].options.find((element) => element.id == unsubscriptionReasonValue).text;\n\n  const unsubscriptionDescription = item.json.body.data.fields[3].value;\n  \n  output.push(\n    {\n      \"email\": volunteerEmail,\n      \"unsubscription_reason\": unsubscriptionReasonLabel,\n      \"unsubscription_description\": unsubscriptionDescription\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "8dcf2052-33d2-4cd9-b153-3fc289d65f94",
      "name": "Filtra apenas as infos que importam",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        340
      ]
    },
    {
      "parameters": {
        "content": "## Descadastro de Voluntárias"
      },
      "id": "42071478-8e74-4a03-b1fd-cf2344a67028",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "volunteer-unsubscribe",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "9e00ddf6-63d8-4377-85e7-e490ed7ba9d4",
      "name": "Voluntária deseja se descadastrar",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        720,
        340
      ],
      "webhookId": "e02e2cdc-4241-4ea8-87c0-fcc949a437e4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const body = items[0].json.body;\n// TODO: buscar support_request_id;\nconst fields = body.data.fields;\n\nlet legalSupportRequest = null;\nlet psychologicalSupportRequest = null;\nlet legalSupportResponseText = '';\nlet psychologicalSupportResponseText = '';\nlet supportRequestId = items[0].json.support_request_id;\nlet psychological_support_request_id = items[0].json.body.data.fields[1].value;\nlet legal_support_request_id = items[0].json.body.data.fields[2].value;\n\n\nfields.forEach(field => {\n  if (field.label === 'legal_support_request' && field.value) {\n    legalSupportRequest = field.value[0];\n    const legalSupportOptions = field.options;\n    const legalSupportOption = legalSupportOptions.find(option => option.id === legalSupportRequest);\n    if (legalSupportOption) {\n      legalSupportResponseText = legalSupportOption.text;\n    }\n  }\n  if (field.label === 'psychological_support_request' && field.value) {\n    psychologicalSupportRequest = field.value[0];\n    const psychologicalSupportOptions = field.options;\n    const psychologicalSupportOption = psychologicalSupportOptions.find(option => option.id === psychologicalSupportRequest);\n    if (psychologicalSupportOption) {\n      psychologicalSupportResponseText = psychologicalSupportOption.text;\n    }\n  }\n});\n\nreturn [\n  {\n    json: {\n      legal_support_request_id,\n      psychological_support_request_id,\n      legalSupportRequest,\n      legalSupportResponseText,\n      psychologicalSupportRequest,\n      psychologicalSupportResponseText,\n      supportRequestId,\n    },\n  },\n];\n"
      },
      "id": "d11c3282-9051-4f11-bd1a-45b26a60ae46",
      "name": "Verifica se precisa de atendimento e qual",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        2880
      ]
    },
    {
      "parameters": {
        "content": "## Verifica quais MSRs de 2022/2021 irão para fila do Match Diário\n",
        "height": 124.36523996505218,
        "width": 340.2325169896819
      },
      "id": "b40b9de8-d53b-41d6-8b1e-2ec31708f16a",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        2640
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas juridico",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "b70959f4-cc3a-4c3d-bd72-c613b38aeda0",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3500
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um juridico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "49360371-b80b-47aa-9b92-492dc0ea1338",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3200
      ]
    },
    {
      "parameters": {
        "content": "\n\nCasos de testes",
        "height": 80,
        "width": 340.2325169896819,
        "color": 6
      },
      "id": "e22f8d45-bca7-4a8f-9f79-6b9d21dc38ad",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3080
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas psi",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "6fdc3936-ca90-4363-9f5f-3a36628a3f3b",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3600
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer nenhum",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "297e3fdd-12bd-42bb-99e0-55ad9485a52f",
      "name": "Sticky Note36",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3700
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.legal_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7b32e856-fc27-4e1e-897d-67713119547b",
      "name": "Tem SR jurídico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1160,
        2780
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.psychological_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "75bd11b5-7fee-4ecc-a004-2407fd8031f4",
      "name": "Tem SR psicológico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1180,
        3080
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6c236e14-2adb-4e84-8e18-ab9a5313c52a",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "47bebfdf-476b-4585-8505-d9c5f5d9fa26",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        740,
        2880
      ],
      "webhookId": "38300697-7606-4b14-8a18-51e03caf7777",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.legalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "761b2b90-8c48-4bfc-a633-cfc4fe054988",
      "name": "ainda quer",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1400,
        2620
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.psychologicalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a1a86124-7c10-4d4b-aa07-2ecbd52e3219",
      "name": "ainda quer1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        3040
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.legal_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.legal_support_request_id}};\n\n",
        "options": {}
      },
      "id": "35b4035b-d5d3-4d55-bab6-c4434026d3ea",
      "name": "Atualiza status para waiting_for_match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1760,
        2460
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "8ebca3d5-5bc3-45bc-bffd-d7de735fb841",
      "name": "status: Aguardando Match: Sem Prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1940,
        2460
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\nUPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.psychological_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.psychological_support_request_id}};\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "74e28ff8-6122-48f1-94bb-b2fe15a21dbc",
      "name": "Atualiza status para waiting_for_match4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1760,
        3020
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "c92de72c-ca2d-4bba-a8ee-a62fff839843",
      "name": "status: Aguardando Match: Sem Prioridade4",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1960,
        3020
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento psicológico",
          "status": "solved"
        }
      },
      "id": "c40eac03-5acf-4842-9def-94f80b640844",
      "name": "Atualizar ticket para solicitação encerrada",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1960,
        3240
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "45235406-9297-47c9-ba68-80411d74e2d0",
      "name": "Atualiza support_request para closed",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1780,
        3240
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento jurídico",
          "status": "solved"
        }
      },
      "id": "9084341f-1d15-44e3-bdc3-23a807221846",
      "name": "Atualizar ticket para solicitação encerrada8",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1960,
        2660
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "50eb4123-cc73-4aa3-b393-48a77d36199d",
      "name": "Atualiza support_request para closed8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1760,
        2660
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "\nPsicológico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "af8ee93d-22b9-419b-90ef-bf8d96bc3690",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2300,
        3160
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um psicológico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "5ed80560-5d86-4f81-919b-a8de5f848880",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3300
      ]
    },
    {
      "parameters": {},
      "id": "c8566d18-9b38-4197-a050-c88846c83979",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1460,
        2800
      ]
    },
    {
      "parameters": {},
      "id": "639015d9-c4db-433c-bf44-e500318265cf",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1440,
        3300
      ]
    },
    {
      "parameters": {
        "content": "\nJurídico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "b1fda8bf-1156-4221-89c4-bcbf4808e079",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2280,
        2560
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer os dois",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "7cdce888-a576-4e01-9963-f009e7902e13",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        3400
      ]
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfunction getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getContinueInQueue(item){\n  const continueInQueueField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'continue_in_queue'\n  );\n\n  if(!continueInQueueField.value) return null\n  \n  const continueInQueueText = continueInQueueField.options.find(\n    (element) => element.id == continueInQueueField.value\n  ).text;\n\n  const shouldContinueInQueue = continueInQueueText === \"Não, prefiro não seguir com o atendimento\" ? false : true\n\n  return shouldContinueInQueue\n}\n\nfor (const item of $input.all()) {\n  \n  const supportResquestId = getHiddenFieldValue(item, 'support_request_id');\n  const shouldContinueInQueue = getContinueInQueue(item);\n  \n  output.push(\n    {\n      \"support_request_id\": supportResquestId,\n      \"should_continue_in_queue\": shouldContinueInQueue,\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "dde28715-fe35-470b-9d35-901245aa0eda",
      "name": "Filtra apenas as infos que importam2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        4820
      ]
    },
    {
      "parameters": {
        "content": "## Formulário para MSRs indicarem se querem continuar na fila",
        "width": 415.2146730852694
      },
      "id": "b9b53136-63c2-4088-85eb-a6fcebab703c",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        4600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "e6b63e14-7e39-444b-a44a-68a042efa1a8",
              "leftValue": "={{ $json.should_continue_in_queue }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "fa276333-ffd8-4e91-b61c-74a8b544a207",
      "name": "Quer continuar na fila?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        4800
      ]
    },
    {
      "parameters": {},
      "id": "f260a47b-745d-4cff-a5d3-693d76cb8687",
      "name": "No Operation, do nothing6",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1880,
        4540
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0f96e552-d3ed-48e2-90f3-ed6b021d69ad",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "040084fc-d139-40e4-98a8-58743461cf88",
      "name": "Encontrou a MSR?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2080,
        4820
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  support_request_id,\n  msr_id,\n  zendesk_ticket_id,\n  {{ $json.should_continue_in_queue }} AS should_continue_in_queue\nFROM match.support_requests\nWHERE support_request_id = {{ $json.support_request_id }}",
        "options": {}
      },
      "id": "fd7f986a-3e95-4df3-95b7-0d7586146df3",
      "name": "Busca support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1140,
        4820
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "f7f74bcf-9b9f-444b-8838-fd09b810b055",
              "leftValue": "={{ $json.support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "46b5dece-1a38-446a-8154-15a2132fd98f",
      "name": "Encontrou o support_request?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        4820
      ]
    },
    {
      "parameters": {
        "errorMessage": "support_request não encontrado"
      },
      "id": "b6438cf1-3538-4128-99bf-505d563b7183",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1560,
        5160
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  first_name,\n  email\nFROM pii_sec.msr_pii\nWHERE msr_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "18cbaae5-3efe-4192-9bc8-064e2a3b7aa4",
      "name": "Busca MSR",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1880,
        4820
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"cm0pd0w0y00xdz6kfjbbd7cfn\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "4d41702b-2b77-49f1-942d-df2505752b25",
      "name": "Envia e-mail de Encaminhamento para Serviço Público",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2380,
        4800
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'public_service'\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'public_service', NOW())",
        "options": {}
      },
      "id": "624da66a-e871-46cd-a8f7-e31678637660",
      "name": "Atualiza o support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1880,
        5060
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.zendesk_ticket_id }}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__realizado_para_serviço_público"
              }
            ]
          },
          "internalNote": "<strong>Formulário \"Você quer continuar na fila?\"</strong>\n</br>\n</br>\nMSR sinalizou pelo formulário que não quer continuar na fila e foi encaminhada para Serviço Público."
        }
      },
      "id": "a853b1bd-b777-499d-b920-f043c8d07bed",
      "name": "Atualiza o ticket no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1880,
        5300
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "MSR não encontrada"
      },
      "id": "e9645b87-2b13-4adf-b934-bb9da95fee08",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2380,
        5040
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "msr-daily-match-queue",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "1efed7ca-ba63-4aa4-ab50-0c0ec4ece305",
      "name": "MSR preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        700,
        4820
      ],
      "webhookId": "85a30c72-b875-4395-acb8-ca10777baa9b",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    }
  ],
  "pinData": {
    "Voluntária deseja se descadastrar": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1391",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "baggage": "sentry-environment=production,sentry-public_key=6af4b6673f1648edaa8fef3f2ca43405,sentry-trace_id=cab807f1848945cb80cb6f76d704b649",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "34.96.41.110",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "8c8daf47064393f1-LHR",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sentry-trace": "cab807f1848945cb80cb6f76d704b649-8ac4992c6fa05af4",
            "x-forwarded-for": "34.96.41.110, 172.70.162.32",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-5d4997895f-4g2dm",
            "x-is-trusted": "yes",
            "x-real-ip": "34.96.41.110"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "3a78e3e9-3a61-4f7e-8b5c-5a420d14a92c",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2024-09-25T20:15:09.817Z",
            "data": {
              "responseId": "6zpdWO",
              "submissionId": "6zpdWO",
              "respondentId": "4Avg75",
              "formId": "w48PJr",
              "formName": "Descadastro de Voluntárias",
              "createdAt": "2024-09-25T20:15:09.000Z",
              "fields": [
                {
                  "key": "question_vX4q98_cdbd7ca0-1bf2-4ae1-8729-509c836c6871",
                  "label": "email",
                  "type": "HIDDEN_FIELDS",
                  "value": ""
                },
                {
                  "key": "question_dbjpDA",
                  "label": "email",
                  "type": "INPUT_TEXT",
                  "value": "Luana.bonassi@hotmail.com"
                },
                {
                  "key": "question_YjYgMd",
                  "label": "unsubscribe_reason",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "19a95c2a-2449-404b-8d16-85eeab76f033"
                  ],
                  "options": [
                    {
                      "id": "19a95c2a-2449-404b-8d16-85eeab76f033",
                      "text": "Estou sem tempo no momento"
                    },
                    {
                      "id": "fd4d1db2-9b8a-4d28-ac30-e1b67e7f147e",
                      "text": "Não me identifico mais com o projeto"
                    },
                    {
                      "id": "5f4284c3-c3dc-4eff-8874-f5a9afbca416",
                      "text": "O voluntariado não atendeu às minhas expectativas"
                    },
                    {
                      "id": "e28829fc-a06f-4ee9-9fbf-fe73c9ed004a",
                      "text": "Nunca recebi um atendimento pelo Mapa do Acolhimento"
                    },
                    {
                      "id": "731d6bee-0f75-4b4e-9e97-d741c4be0543",
                      "text": "Não tive uma boa experiência"
                    },
                    {
                      "id": "f32e8953-37c0-4ce8-bae7-a76c34d22c1d",
                      "text": "Os casos recebidos pelo Mapa do Acolhimento são muito complexos e não me sinto preparada para atendê-los"
                    }
                  ]
                },
                {
                  "key": "question_rDEWxl",
                  "label": "describe_unsubscribe_reason",
                  "type": "TEXTAREA",
                  "value": null
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/volunteer-unsubscribe",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "shared": [
    {
      "createdAt": "2024-07-24T18:25:27.510Z",
      "updatedAt": "2024-07-24T18:25:27.510Z",
      "role": "workflow:owner",
      "workflowId": "8K06c4EqVrK40A9W",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2025-10-23T12:53:28.000Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749493410027
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-10-23",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2025-01-29T20:20:55.000Z",
  "versionId": "e2243abf-5286-4291-b1da-25ab4b28b726"
}