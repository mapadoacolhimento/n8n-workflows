{
  "active": true,
  "connections": {
    "Capitais - busca disponibilidade": {
      "main": [
        [
          {
            "node": "Capitais - constroi mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Disponibilidade total - busca disponibilidade": {
      "main": [
        [
          {
            "node": "Une as mensagens",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Capitais - constroi mensagens": {
      "main": [
        [
          {
            "node": "Une as mensagens",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Une as mensagens": {
      "main": [
        [
          {
            "node": "Une as mensagens1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cidades com mais match online": {
      "main": [
        [
          {
            "node": "Cidades com mais MSRs aguardando match - constroi mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Disponibilidade total - busca disponibilidade",
            "type": "main",
            "index": 0
          },
          {
            "node": "Capitais - busca disponibilidade",
            "type": "main",
            "index": 0
          },
          {
            "node": "Cidades com mais match online",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cidades com mais MSRs aguardando match - constroi mensagem": {
      "main": [
        [
          {
            "node": "Une as mensagens1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Une as mensagens1": {
      "main": [
        [
          {
            "node": "Envia mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Disponibilidade total - busca disponibilidade",
            "type": "main",
            "index": 0
          },
          {
            "node": "Capitais - busca disponibilidade",
            "type": "main",
            "index": 0
          },
          {
            "node": "Cidades com mais match online",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-06-25T18:28:46.607Z",
  "id": "9DFMBnRuNVh2gCNm",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] Monitoramento da disponibilidade de Voluntárias",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH capital_nao_capital AS (\n    SELECT\n        city_value AS city,\n        state,\n        CASE\n            WHEN state IN ('AM', 'PA', 'AC', 'RR', 'RO', 'AP', 'TO') THEN 'norte'\n            WHEN state IN ('MA', 'PI', 'CE', 'RN', 'PB', 'PE', 'AL', 'SE', 'BA') THEN 'nordeste'\n            WHEN state IN ('SP', 'RJ', 'MG', 'ES') THEN 'sudeste'\n            WHEN state IN ('MT', 'MS', 'GO', 'DF') THEN 'centro-oeste'\n            WHEN state IN ('PR', 'SC', 'RS') THEN 'sul'\n            ELSE 'não encontrado'\n        END AS region,\n        CASE \n            WHEN city_value = 'RIO BRANCO' AND state = 'AC' THEN 'capital'\n            WHEN city_value = 'MACEIO' AND state = 'AL' THEN 'capital'\n            WHEN city_value = 'MACAPA' AND state = 'AP' THEN 'capital'\n            WHEN city_value = 'MANAUS' AND state = 'AM' THEN 'capital'\n            WHEN city_value = 'SALVADOR' AND state = 'BA' THEN 'capital'\n            WHEN city_value = 'FORTALEZA' AND state = 'CE' THEN 'capital'\n            WHEN city_value = 'BRASILIA' AND state = 'DF' THEN 'capital'\n            WHEN city_value = 'VITORIA' AND state = 'ES' THEN 'capital'\n            WHEN city_value = 'GOIANIA' AND state = 'GO' THEN 'capital'\n            WHEN city_value = 'SAO LUIS' AND state = 'MA' THEN 'capital'\n            WHEN city_value = 'CUIABA' AND state = 'MT' THEN 'capital'\n            WHEN city_value = 'CAMPO GRANDE' AND state = 'MS' THEN 'capital'\n            WHEN city_value = 'BELO HORIZONTE' AND state = 'MG' THEN 'capital'\n            WHEN city_value = 'BELEM' AND state = 'PA' THEN 'capital'\n            WHEN city_value = 'JOAO PESSOA' AND state = 'PB' THEN 'capital'\n            WHEN city_value = 'CURITIBA' AND state = 'PR' THEN 'capital'\n            WHEN city_value = 'RECIFE' AND state = 'PE' THEN 'capital'\n            WHEN city_value = 'TERESINA' AND state = 'PI' THEN 'capital'\n            WHEN city_value = 'RIO DE JANEIRO' AND state = 'RJ' THEN 'capital'\n            WHEN city_value = 'NATAL' AND state = 'RN' THEN 'capital'\n            WHEN city_value = 'PORTO ALEGRE' AND state = 'RS' THEN 'capital'\n            WHEN city_value = 'PORTO VELHO' AND state = 'RO' THEN 'capital'\n            WHEN city_value = 'BOA VISTA' AND state = 'RR' THEN 'capital'\n            WHEN city_value = 'FLORIANOPOLIS' AND state = 'SC' THEN 'capital'\n            WHEN city_value = 'SAO PAULO' AND state = 'SP' THEN 'capital'\n            WHEN city_value = 'ARACAJU' AND state = 'SE' THEN 'capital'\n            WHEN city_value = 'PALMAS' AND state = 'TO' THEN 'capital'\n        ELSE 'não capital'\n        END AS capital\n    FROM cities\n),\navailable_volunteers AS (\n    SELECT\n        volunteer_id,\n        support_type,\n        city,\n        state\n    FROM volunteer_availability\n    WHERE\n        is_available = TRUE\n)\nSELECT \n    INITCAP(region) AS region,\n    INITCAP(city) AS city,\n    state,\n    SUM(CASE WHEN support_type = 'psychological' THEN 1 ELSE 0 END) AS available_psychologists,\n    SUM(CASE WHEN support_type = 'legal' THEN 1 ELSE 0 END) AS available_lawyers\nFROM capital_nao_capital\nLEFT JOIN available_volunteers USING(city, state)\nWHERE \n    capital = 'capital'\nGROUP BY region, city, state\nORDER BY region, city, state",
        "options": {}
      },
      "id": "6ae1660d-b06c-4a42-a510-c41f8381a40e",
      "name": "Capitais - busca disponibilidade",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1260,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH month_year AS (\n  SELECT\n    DATE_PART('day', CURRENT_DATE) AS day,\n    DATE_PART('month', CURRENT_DATE) AS month,\n    DATE_PART('year', CURRENT_DATE) AS year\n),\navailable_volunteers AS (\n  SELECT \n    SUM(CASE WHEN support_type = 'psychological' THEN 1 ELSE 0 END) AS available_psychologists,\n    SUM(CASE WHEN support_type = 'psychological' THEN (max_matches - current_matches) ELSE 0 END) AS psychological_availability,\n  SUM(CASE WHEN support_type = 'legal' THEN 1 ELSE 0 END) AS available_lawyers,\n  SUM(CASE WHEN support_type = 'legal' THEN (max_matches - current_matches) ELSE 0 END) AS legal_availability\n  FROM volunteer_availability \n  WHERE is_available = TRUE\n),\nidle_volunteers AS (\n  SELECT\n    SUM(CASE WHEN support_type = 'psychological' AND current_matches = 0 THEN 1 ELSE 0 END) AS idle_psychologists, \n    SUM(CASE WHEN support_type = 'legal' AND current_matches = 0 THEN 1 ELSE 0 END) AS idle_lawyers\n  FROM volunteer_availability\n  WHERE is_available = TRUE\n),\nnew_volunteers AS (\n  SELECT\n    SUM(CASE WHEN support_type = 'psychological' THEN 1 ELSE 0 END) AS new_psychologists, \n    SUM(CASE WHEN support_type = 'legal' THEN 1 ELSE 0 END) AS new_lawyers\n  FROM\n    volunteer_availability\n  WHERE created_at >= CURRENT_DATE - INTERVAL '30 DAY'\n    \n),\nnew_available_volunteers AS (\n  SELECT\n    COALESCE(SUM(CASE WHEN support_type = 'psychological' THEN 1 ELSE 0 END), 0) AS new_available_psychologists, \n    COALESCE(SUM(CASE WHEN support_type = 'legal' THEN 1 ELSE 0 END), 0) AS new_available_lawyers\n  FROM\n    volunteer_availability\n  WHERE created_at >= CURRENT_DATE - INTERVAL '30 DAY'\n    AND is_available = TRUE\n),\nnew_support_requests AS (\n  SELECT\n    SUM(CASE WHEN support_type = 'psychological' THEN 1 ELSE 0 END) AS psychological_support_requests,\n    SUM(CASE WHEN support_type = 'legal' THEN 1 ELSE 0 END) AS legal_support_requests\n  FROM match.support_requests\n  WHERE created_at >= CURRENT_DATE - INTERVAL '30 DAY'\n),\nunsubscripted_volunteers AS (\n  SELECT\n    SUM(CASE WHEN occupation = 'psychologist' THEN 1 ELSE 0 END) AS unsubscripted_psychologists,\n    SUM(CASE WHEN occupation = 'lawyer' THEN 1 ELSE 0 END) AS unsubscripted_lawyers\n  FROM volunteers\n  WHERE \n    condition = 'descadastrada'\n    AND updated_at >= CURRENT_DATE - INTERVAL '30 DAY'\n),\nvolunteers_that_finished_training AS (\n    SELECT \n        COUNT(DISTINCT CASE WHEN occupation = 'lawyer' THEN volunteer_id ELSE NULL END) AS lawyers_finished_training,\n        COUNT(DISTINCT CASE WHEN occupation = 'psychologist' THEN volunteer_id ELSE NULL END) AS psychologists_finished_training\n    FROM volunteer_status_history h\n    INNER JOIN volunteers v ON v.id = h.volunteer_id\n    WHERE \n        h.status = 'aprovada'\n        AND h.created_at >= CURRENT_DATE - INTERVAL '30 DAY'\n)\nSELECT *\nFROM month_year\nCROSS JOIN available_volunteers\nCROSS JOIN idle_volunteers\nCROSS JOIN new_volunteers\nCROSS JOIN new_support_requests\nCROSS JOIN new_available_volunteers\nCROSS JOIN volunteers_that_finished_training\nCROSS JOIN unsubscripted_volunteers",
        "options": {}
      },
      "id": "ebe83a9e-04d8-4152-91dd-d52ae5d152e6",
      "name": "Disponibilidade total - busca disponibilidade",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1260,
        0
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const output = [];\n\nlet psychologistsMessage = \"*1. Capitais com menos de 10 psicólogas disponíveis* :trident: \\n\";\n\nlet lawyersMessage = \"*2. Capitais com menos de 10 advogadas disponíveis* :scales: \\n\";\n\nvar lawyersRegions = {\n  \"Norte\": \"\", \n  \"Nordeste\": \"\", \n  \"Centro-Oeste\": \"\", \n  \"Sudeste\": \"\",\n  \"Sul\": \"\"\n}\n\nvar psychologistRegions = {\n  \"Norte\": \"\", \n  \"Nordeste\": \"\", \n  \"Centro-Oeste\": \"\", \n  \"Sudeste\": \"\",\n  \"Sul\": \"\"\n}\n\nfor (const item of $input.all()) {\n\n  const region = item.json.region;\n  const city = item.json.city;\n  const state = item.json.state;\n  const availableLawyers = item.json.available_lawyers;\n  const availablePsychologists = item.json.available_psychologists;\n  \n  if (availableLawyers < 10) {\n    lawyersRegions[region] += city + \" (\" + state + \"), \";\n  }\n\n  if (availablePsychologists < 10) {\n    psychologistRegions[region] += city + \" (\" + state + \"), \";\n  }\n}\n\nfor (const [region, value] of Object.entries(lawyersRegions)) {\n  \n  lawyersMessage += \"> *\" + region + \"*: \" \n  \n    if(!!value) {\n      lawyersMessage += value + \"\\n\"\n    }\n    else {\n      lawyersMessage += \"- \\n\"\n    }\n}\n\nfor (const [region, value] of Object.entries(psychologistRegions)) {\n  \n  psychologistsMessage += \"> *\" + region + \"*: \" \n  \n    if(!!value) {\n      psychologistsMessage += value + \"\\n\"\n    }\n    else {\n      psychologistsMessage += \"- \\n\"\n    }\n}\n  \n\noutput.push({\n  capitals_lawyers_message: lawyersMessage,\n  capitals_psychologists_message: psychologistsMessage\n})\n\nreturn output;"
      },
      "id": "75dd7bb7-1a9d-4bd1-a8ad-e07f73478bfa",
      "name": "Capitais - constroi mensagens",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        420
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "ad4fda84-f89f-4997-bca0-45987c197e71",
      "name": "Une as mensagens",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1760,
        20
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C079UQQUNF7",
          "mode": "list",
          "cachedResultName": "monitoramento-voluntarias"
        },
        "text": "=:chart_with_upwards_trend: *MONITORAMENTO MENSAL DA DISPONIBILIDADE DE VOLUNTÁRIAS* :chart_with_upwards_trend: \n\n\nOlá! :wave:\nEssa é a visão geral da disponibilidade de Voluntárias em *{{ $json.day }}/{{ $json.month }}/{{ $json.year }}*\n\n\n\n*Voluntárias Disponíveis :white_check_mark:*\n- {{ $json.available_psychologists }} psicólogas / {{ $json.psychological_availability }} vagas para match\n- {{ $json.available_lawyers }} advogadas / {{ $json.legal_availability }} vagas para match\n\n\n*Pedidos de acolhimento recebidos no último mês :point_up:*\n- {{ $json.psychological_support_requests }} psicológicos\n- {{ $json.legal_support_requests }} jurídicos\n\n\n*Novos cadastros de Voluntárias no último mês :writing_hand:*\n- {{ $json.new_psychologists }} novas psicólogas\n- {{ $json.new_lawyers }} novas advogadas\n\n\n*Voluntárias que concluíram a Capacitação no último mês :mortar_board:*\n- {{ $json.psychologists_finished_training }} psicólogas\n- {{ $json.lawyers_finished_training }} advogadas\n\n\n*Descadastro de Voluntárias no último mês :no_entry_sign:*\n- {{ $json.unsubscripted_psychologists }} psicólogas\n- {{ $json.unsubscripted_lawyers }} advogadas\n\n\n\n*Territórios prioritários para captação de Voluntárias :earth_americas: *\n\n\n{{ $json.capitals_psychologists_message }}\n\n{{ $json.capitals_lawyers_message }}\n\n{{ $json.cities_with_online_match }}\n\n",
        "otherOptions": {}
      },
      "id": "3649ceb0-2a8e-4b52-93db-d4d558fd92d7",
      "name": "Envia mensagem",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        2360,
        340
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "01G85hUbLT4VlY92",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    INITCAP(city) AS city,\n    state,\n    COUNT(*)\nFROM match.support_requests\nWHERE status IN ('waiting_for_match', 'waiting_for_match_with_priority', 'waiting_for_confirmation')\nGROUP BY city, state\nORDER BY 3 DESC\nLIMIT 10",
        "options": {}
      },
      "id": "701c34b2-966b-4e86-9dcd-2c467165f995",
      "name": "Cidades com mais match online",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1260,
        700
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "multiplex",
        "options": {}
      },
      "id": "9be3e8bb-415c-4126-83e8-31de69157ed7",
      "name": "Une as mensagens1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2120,
        340
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                1
              ],
              "triggerAtHour": 9
            }
          ]
        }
      },
      "id": "e09dfcf8-710a-4269-a8fe-68a1a8153cd9",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        740,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "const output = [];\n\nlet message = \"*3. Cidades com mais MSRs aguardando match :rotating_light: * \\n\";\n\nfor (const item of $input.all()) {\n\n  const city = item.json.city;\n  const state = item.json.state;\n  const count = item.json.count;\n\n  if(!!count) {\n    message += \"> \" + city + \" (\" +  state + \"): \" + count +  \"\\n\";\n  }\n  \n  \n}\n\noutput.push({\n  cities_with_online_match: message,\n})\n\nreturn output;"
      },
      "id": "85b421cd-4925-4430-b9d2-1300e3d056c6",
      "name": "Cidades com mais MSRs aguardando match - constroi mensagem",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1460,
        700
      ]
    },
    {
      "parameters": {},
      "id": "494c0367-0dfd-49cf-9539-a8a54f728f9c",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        740,
        700
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "shared": [
    {
      "createdAt": "2024-06-25T18:28:46.611Z",
      "updatedAt": "2024-06-25T18:28:46.611Z",
      "role": "workflow:owner",
      "workflowId": "9DFMBnRuNVh2gCNm",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2025-09-28T23:13:49.000Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749493410027
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-28",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": [
        46
      ],
      "recurrenceRules": [
        50
      ]
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-09-16T11:52:22.000Z",
  "versionId": "48681eaa-3715-491b-ad46-82facbfa7ee4"
}