{
  "active": false,
  "connections": {
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Busca MSRs na solidarity_users",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca cities",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca MSRs na solidarity_users": {
      "main": [
        [
          {
            "node": "Remove emails duplicados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request": {
      "main": [
        [
          {
            "node": "MSRs sem support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "MSRs com support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Padroniza cep": {
      "main": [
        [
          {
            "node": "MSRs sem support_request",
            "type": "main",
            "index": 1
          },
          {
            "node": "MSRs com support_request",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Busca cities": {
      "main": [
        [
          {
            "node": "MSRs com cidades válidas",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "MSRs sem support_request": {
      "main": [
        [
          {
            "node": "MSRs com cidades válidas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSRs com cidades válidas": {
      "main": [
        [
          {
            "node": "Adiciona city e state not_found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona city e state not_found": {
      "main": [
        [
          {
            "node": "Está desabilitada?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Está desabilitada?": {
      "main": [
        [
          {
            "node": "Insere na tabela msr.msrs1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Combina dados do Zendesk",
            "type": "main",
            "index": 1
          },
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca user no Zendesk": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Combina dados do Zendesk": {
      "main": [
        [
          {
            "node": "Encontrou o user?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Seleciona campos do Zendesk",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Busca user no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seleciona campos do Zendesk": {
      "main": [
        [
          {
            "node": "Combina dados do Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o user?": {
      "main": [
        [
          {
            "node": "Insere na tabela msr.msrs3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Seta lat lng",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Insere na tabela msr.msrs2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seta lat lng": {
      "main": [
        [
          {
            "node": "Busca ticket na solidarity_tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca ticket na solidarity_tickets": {
      "main": [
        [
          {
            "node": "Cria support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem match?": {
      "main": [
        [
          {
            "node": "Cria match",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSRs com support_request": {
      "main": [
        [
          {
            "node": "Insere na tabela msr.msrs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cria support_request": {
      "main": [
        [
          {
            "node": "Tem match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove emails duplicados": {
      "main": [
        [
          {
            "node": "Seleciona campos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Seleciona campos": {
      "main": [
        [
          {
            "node": "Padroniza cep",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-07-15T18:13:14.141Z",
  "id": "R4izeInVeyLotzRY",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] Pipeline de dados msr.msrs",
  "nodes": [
    {
      "parameters": {},
      "id": "f3aac180-ff6c-4617-955e-558b016a5408",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        660,
        440
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT\n    user_id AS msr_id,\n    email,\n    'not_found' AS gender,\n    CASE \n      WHEN cor = 'amarela'  THEN 'yellow'\n      WHEN cor = 'branca'  THEN 'white'\n      WHEN cor = 'indigena'  THEN 'indigenous'\n      WHEN cor = 'parda'  THEN 'brown'\n      WHEN cor = 'preta'  THEN 'black'\n      ELSE 'not_found'\n    END AS race_color,\n    NULL AS has_disability,\n    TRUE AS accepts_online_support,\n    REGEXP_REPLACE(cep, '-', '', 'g') AS zipcode,\n    CASE \n      WHEN LENGTH(INITCAP(REGEXP_REPLACE(fields::TEXT, '\\\\u0000', '', 'g')::json->6->>'value'::TEXT)) > 100 THEN 'not_found'\n      ELSE COALESCE(INITCAP(REGEXP_REPLACE(fields::TEXT, '\\\\u0000', '', 'g')::json->6->>'value'::TEXT), 'not_found')\n  END AS neighborhood,\n  \nBTRIM(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(UPPER(city), 'À|Á|Â|Ã|Ä|Å', 'A', 'g'), 'È|É|Ê|Ë', 'E', 'g'), 'Í|Ì|Î|Ĩ|Ï ', 'I', 'g'), 'Ò|Ó|Ô|Õ|Ö', 'O', 'g'),'Ù|Ú|Û|Ü', 'U', 'g'), 'Ç', 'C', 'g')) AS city,\n    BTRIM(UPPER(state)) AS state,\n    CASE\n        WHEN condition = 'inscrita' THEN 'registered'\n        ELSE 'unregistered'\n    END AS status,\n    COALESCE(u.created_at, NOW()) AS created_at,\n    COALESCE(u.updated_at, NOW()) AS updated_at\nFROM solidarity_users u\nLEFT JOIN form_entries f ON u.external_id = f.id\nWHERE \n  organization_id = 360273031591\n  AND email IS NOT NULL\n  AND email != ''\n  AND (f.created_at IS NULL OR f.created_at < '2024-07-22T16:22:30.449000+00:00')",
        "options": {}
      },
      "id": "11b19716-3fb5-4440-b81f-87821bfc7b5f",
      "name": "Busca MSRs na solidarity_users",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        940,
        440
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT\n  msr_id,\n  city AS support_request_city,\n  state AS support_request_state\nFROM match.support_requests",
        "options": {}
      },
      "id": "a998c7bc-8138-47a9-8944-ac1e9ca0855b",
      "name": "Busca support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        920,
        0
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "msr_id",
              "field2": "msr_id"
            }
          ]
        },
        "options": {}
      },
      "id": "ea710fc1-ec40-47e3-9ee7-9877df28855c",
      "name": "MSRs com support_request",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2020,
        20
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "msr_id",
              "field2": "msr_id"
            }
          ]
        },
        "joinMode": "keepNonMatches",
        "outputDataFrom": "input2",
        "options": {}
      },
      "id": "dbc0eaa8-ab1b-4e75-87ad-605959068889",
      "name": "MSRs sem support_request",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        2020,
        420
      ]
    },
    {
      "parameters": {
        "jsCode": "let output = [];\n\nfor (const item of $input.all()) {\n  const zipcodeIsNull = !item.json.zipcode;\n  const zipcodeHasIncorrectLength = item.json.zipcode ? item.json.zipcode.length !== 8 : true;\n  const zipcodeIsNotANumber = isNaN(item.json.zipcode)\n  \n  if(zipcodeIsNull || zipcodeHasIncorrectLength || zipcodeIsNotANumber){\n    item.json.zipcode = \"not_found\";\n  }\n  \n}\n\nreturn $input.all();"
      },
      "id": "bcb6f028-2249-4773-b27c-a1718fb03cdf",
      "name": "Padroniza cep",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        1580,
        440
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "cf4a3ac8-5a6e-439b-bcff-5d85f156e112",
              "leftValue": "={{ $json.status }}",
              "rightValue": "unregistered",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0b0fd18a-8a64-432d-88f5-011aa3f5b214",
      "name": "Está desabilitada?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2760,
        440
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "msr",
          "mode": "list",
          "cachedResultName": "msr"
        },
        "table": {
          "__rl": true,
          "value": "msrs",
          "mode": "list",
          "cachedResultName": "msrs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "has_disability": "={{ $json.has_disability }}",
            "accepts_online_support": "={{ $json.accepts_online_support }}",
            "msr_id": "={{ $json.msr_id }}",
            "gender": "={{ $json.gender }}",
            "race_color": "={{ $json.race_color }}",
            "zipcode": "={{ $json.zipcode }}",
            "neighborhood": "={{ $json.neighborhood }}",
            "city": "={{ $json.support_request_city }}",
            "state": "={{ $json.support_request_state }}",
            "status": "={{ $json.status }}",
            "created_at": "={{ $json.created_at }}",
            "updated_at": "={{ $json.updated_at }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "msr_id",
              "displayName": "msr_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "cis_woman",
                  "value": "cis_woman"
                },
                {
                  "name": "trans_woman",
                  "value": "trans_woman"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "race_color",
              "displayName": "race_color",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "black",
                  "value": "black"
                },
                {
                  "name": "brown",
                  "value": "brown"
                },
                {
                  "name": "indigenous",
                  "value": "indigenous"
                },
                {
                  "name": "yellow",
                  "value": "yellow"
                },
                {
                  "name": "white",
                  "value": "white"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "has_disability",
              "displayName": "has_disability",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "accepts_online_support",
              "displayName": "accepts_online_support",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "zipcode",
              "displayName": "zipcode",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "neighborhood",
              "displayName": "neighborhood",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "state",
              "displayName": "state",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "registered",
                  "value": "registered"
                },
                {
                  "name": "unregistered",
                  "value": "unregistered"
                }
              ]
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {
          "replaceEmptyStrings": true
        }
      },
      "id": "08ceb265-0f4b-4f1a-8fe1-5f854cd92c75",
      "name": "Insere na tabela msr.msrs",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2240,
        20
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT city_value, state\nFROM public.cities",
        "additionalFields": {}
      },
      "id": "3f5c1747-6118-47de-a591-8f52625eef5d",
      "name": "Busca cities",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        940,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "city",
              "field2": "city_value"
            },
            {
              "field1": "state",
              "field2": "state"
            }
          ]
        },
        "joinMode": "enrichInput1",
        "options": {}
      },
      "id": "7fb5ae95-d539-4790-997b-df7ae7e33e88",
      "name": "MSRs com cidades válidas",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [
        2320,
        440
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  const city_value = item.json.city_value;\n\n  if (!city_value){\n    item.json.city = 'not_found';\n    item.json.state = 'not_found';\n  }\n  \n}\n\nreturn $input.all();"
      },
      "id": "409539dd-3a4f-4dff-8791-4647ec8df927",
      "name": "Adiciona city e state not_found",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2540,
        440
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "msr",
          "mode": "list",
          "cachedResultName": "msr"
        },
        "table": {
          "__rl": true,
          "value": "msrs",
          "mode": "list",
          "cachedResultName": "msrs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "has_disability": "={{ $json.has_disability }}",
            "accepts_online_support": "={{ $json.accepts_online_support }}",
            "msr_id": "={{ $json.msr_id }}",
            "gender": "={{ $json.gender }}",
            "race_color": "={{ $json.race_color }}",
            "zipcode": "={{ $json.zipcode }}",
            "neighborhood": "={{ $json.neighborhood }}",
            "city": "={{ $json.city }}",
            "state": "={{ $json.state }}",
            "status": "={{ $json.status }}",
            "created_at": "={{ $json.created_at }}",
            "updated_at": "={{ $json.updated_at }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "msr_id",
              "displayName": "msr_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "cis_woman",
                  "value": "cis_woman"
                },
                {
                  "name": "trans_woman",
                  "value": "trans_woman"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "race_color",
              "displayName": "race_color",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "black",
                  "value": "black"
                },
                {
                  "name": "brown",
                  "value": "brown"
                },
                {
                  "name": "indigenous",
                  "value": "indigenous"
                },
                {
                  "name": "yellow",
                  "value": "yellow"
                },
                {
                  "name": "white",
                  "value": "white"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "has_disability",
              "displayName": "has_disability",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "accepts_online_support",
              "displayName": "accepts_online_support",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "zipcode",
              "displayName": "zipcode",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "neighborhood",
              "displayName": "neighborhood",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "state",
              "displayName": "state",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "registered",
                  "value": "registered"
                },
                {
                  "name": "unregistered",
                  "value": "unregistered"
                }
              ]
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "ca19ae12-f733-433f-8faf-ab5fa5c3b3fc",
      "name": "Insere na tabela msr.msrs1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3040,
        160
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "get",
        "id": "={{ $json.msr_id }}"
      },
      "id": "90026a14-0500-4e31-adf6-f4c1c9edc143",
      "name": "Busca user no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3820,
        480
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "c940c284-9067-4227-87bc-4f25c184e97c",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b11837d2-315b-4c85-a348-846af58b4ad0",
      "name": "Encontrou o user?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4480,
        900
      ]
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "msr",
          "mode": "list",
          "cachedResultName": "msr"
        },
        "table": {
          "__rl": true,
          "value": "msrs",
          "mode": "list",
          "cachedResultName": "msrs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "has_disability": "={{ $json.has_disability }}",
            "accepts_online_support": "={{ $json.accepts_online_support }}",
            "msr_id": "={{ $json.msr_id }}",
            "gender": "={{ $json.gender }}",
            "race_color": "={{ $json.race_color }}",
            "zipcode": "={{ $json.zipcode }}",
            "neighborhood": "={{ $json.neighborhood }}",
            "city": "={{ $json.city }}",
            "state": "={{ $json.state }}",
            "status": "=unregistered",
            "created_at": "={{ $json.created_at }}",
            "updated_at": "={{ $json.updated_at }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "msr_id",
              "displayName": "msr_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "cis_woman",
                  "value": "cis_woman"
                },
                {
                  "name": "trans_woman",
                  "value": "trans_woman"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "race_color",
              "displayName": "race_color",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "black",
                  "value": "black"
                },
                {
                  "name": "brown",
                  "value": "brown"
                },
                {
                  "name": "indigenous",
                  "value": "indigenous"
                },
                {
                  "name": "yellow",
                  "value": "yellow"
                },
                {
                  "name": "white",
                  "value": "white"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "has_disability",
              "displayName": "has_disability",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "accepts_online_support",
              "displayName": "accepts_online_support",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "zipcode",
              "displayName": "zipcode",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "neighborhood",
              "displayName": "neighborhood",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "state",
              "displayName": "state",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "registered",
                  "value": "registered"
                },
                {
                  "name": "unregistered",
                  "value": "unregistered"
                }
              ]
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "2fd58b34-db1f-4fcb-80b9-47d383075239",
      "name": "Insere na tabela msr.msrs2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        4760,
        1060
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "mergeByFields": {
          "values": [
            {
              "field1": "id",
              "field2": "msr_id"
            }
          ]
        },
        "options": {}
      },
      "id": "2d0e298f-8adc-4238-b879-406584d55457",
      "name": "Combina dados do Zendesk",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        4260,
        900
      ]
    },
    {
      "parameters": {
        "batchSize": 100,
        "options": {}
      },
      "id": "6ceeab16-4fb5-4b38-ba80-e530ec5da72e",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        3440,
        460
      ]
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "574c85c5-e7f1-432b-a283-f95a52da8484",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3640,
        480
      ],
      "webhookId": "b685517f-b3fd-4971-b2d4-95871e65ad8a"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "120c9bbe-6ac6-4a0e-9790-bcf7d1799b38",
              "name": "id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f3822028-3bdc-46e6-b5c7-e1748bc364cb",
              "name": "email",
              "value": "={{ $json.email }}",
              "type": "string"
            },
            {
              "id": "96a590fb-25e9-4811-a2a8-c4a9767a17de",
              "name": "external_id",
              "value": "={{ $json.external_id }}",
              "type": "string"
            },
            {
              "id": "8d03294a-29d2-48a3-b9a3-64c4b94c6483",
              "name": "user_fields",
              "value": "={{ $json.user_fields }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "id": "75d2477e-4e58-4ada-8163-d1ef0abc4449",
      "name": "Seleciona campos do Zendesk",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        3920,
        340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT DISTINCT\n  {{ $json.msr_id }} AS msr_id,\n  CASE \n    WHEN raw_subject LIKE '%Psicológico%' THEN 'psychological'\n    WHEN raw_subject LIKE '%Jurídico%' THEN 'legal'\n  END AS support_type,\n  ticket_id AS zendesk_ticket_id,\n  CASE \n    WHEN status_acolhimento IN ('encaminhamento__realizado', 'atendimento__concluído', 'atendimento__iniciado', 'atendimento__interrompido', 'encaminhamento_interrompido', 'atendimento_triagem_1', 'atendimento_triagem_2', 'atendimento_acompanhamento_1', 'atendimento_acompanhamento_2') THEN 'matched'\n    WHEN status_acolhimento = 'solicitação_recebida' THEN 'open'\n    WHEN status_acolhimento = 'encaminhamento__realizado_para_serviço_público' THEN 'public_service'\n    WHEN status_acolhimento = 'solicitação_repetida' THEN 'duplicated'\n    ELSE 'closed'\n  END AS support_request_status,\n  CASE \n     WHEN status_acolhimento = 'encaminhamento__realizado' THEN 'expired'\n     WHEN status_acolhimento = 'encaminhamento_interrompido' THEN 'interrupted_before_support'\n     WHEN status_acolhimento = 'atendimento__interrompido' THEN 'interrupted_after_support'\n     WHEN status_acolhimento = 'atendimento__concluído' THEN 'completed'\n     WHEN status_acolhimento IN ('atendimento__iniciado', 'atendimento_triagem_1', 'atendimento_triagem_2', 'atendimento_acompanhamento_1', 'atendimento_acompanhamento_2') THEN 'in_contact'\n     ELSE NULL\n  END AS match_status,\n  {{ $json.lat }} AS lat,\n  {{ $json.lng }} AS lng,\n  '{{ $json.city }}' AS city,\n  '{{ $json.state }}' AS state,\n  COALESCE(created_at, NOW()) AS created_at,\n  COALESCE(updated_at, NOW()) AS updated_at\nFROM solidarity_tickets\nWHERE organization_id = 360273031591\nAND SUBSTRING(raw_subject, '\\[(.+)\\]') IN ('Psicológico', 'Jurídico')\nAND raw_subject NOT LIKE '%Re:%'\nAND tags::text NOT LIKE '%msr-fora-do-perfil%'\nAND requester_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "2bc28d28-b846-40e3-bddb-615c457f58f9",
      "name": "Busca ticket na solidarity_tickets",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        5100,
        720
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "value": "msr",
          "mode": "list",
          "cachedResultName": "msr"
        },
        "table": {
          "__rl": true,
          "value": "msrs",
          "mode": "list",
          "cachedResultName": "msrs"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "has_disability": "={{ $json.has_disability }}",
            "accepts_online_support": "={{ $json.accepts_online_support }}",
            "msr_id": "={{ $json.msr_id }}",
            "gender": "={{ $json.gender }}",
            "race_color": "={{ $json.race_color }}",
            "zipcode": "={{ $json.zipcode }}",
            "neighborhood": "={{ $json.neighborhood }}",
            "city": "={{ $json.city }}",
            "state": "={{ $json.state }}",
            "status": "=registered",
            "created_at": "={{ $json.created_at }}",
            "updated_at": "={{ $json.updated_at }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "msr_id",
              "displayName": "msr_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "cis_woman",
                  "value": "cis_woman"
                },
                {
                  "name": "trans_woman",
                  "value": "trans_woman"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "race_color",
              "displayName": "race_color",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "black",
                  "value": "black"
                },
                {
                  "name": "brown",
                  "value": "brown"
                },
                {
                  "name": "indigenous",
                  "value": "indigenous"
                },
                {
                  "name": "yellow",
                  "value": "yellow"
                },
                {
                  "name": "white",
                  "value": "white"
                },
                {
                  "name": "not_found",
                  "value": "not_found"
                }
              ]
            },
            {
              "id": "has_disability",
              "displayName": "has_disability",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "accepts_online_support",
              "displayName": "accepts_online_support",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "boolean",
              "canBeUsedToMatch": true
            },
            {
              "id": "zipcode",
              "displayName": "zipcode",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "neighborhood",
              "displayName": "neighborhood",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "city",
              "displayName": "city",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "state",
              "displayName": "state",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "status",
              "displayName": "status",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "options",
              "canBeUsedToMatch": true,
              "options": [
                {
                  "name": "registered",
                  "value": "registered"
                },
                {
                  "name": "unregistered",
                  "value": "unregistered"
                }
              ]
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ]
        },
        "options": {}
      },
      "id": "beef9387-96de-402a-a726-779ece955b7e",
      "name": "Insere na tabela msr.msrs3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        4760,
        500
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field\n// called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  const lat = item.json.user_fields.latitude;\n  const lng = item.json.user_fields.longitude;\n  \n  if(!lat || !lng)\n  {\n    item.json.lat = null;\n    item.json.lng = null;\n  }\n  else {\n    \n    const isLatitudeNotANumber = isNaN(lat);\n    const isLongitudeNotANumber = isNaN(lng);\n\n    if(isLatitudeNotANumber || isLongitudeNotANumber)\n    {\n      item.json.lat = null;\n      item.json.lng = null;\n    }\n    else {\n      \n      const isLatitudeNotInRange = lat < -90 \n      || lat > 90;\n    const isLongitudeNotInRange = lng < -180 \n      || lng > 180;\n\n      if(isLatitudeNotInRange || isLongitudeNotInRange)\n      {\n        item.json.lat = null;\n        item.json.lng = null;\n      }\n      else {\n        \n        item.json.lat = parseFloat(lat);\n        item.json.lng = parseFloat(lng);\n      }\n      \n    }\n  }\n}\n\nreturn $input.all();"
      },
      "id": "336430ad-f2b6-4735-9e56-472855e7e8a2",
      "name": "Seta lat lng",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4840,
        720
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "770eb3af-9622-44f3-90ec-45c7d322c813",
              "leftValue": "={{ $json.match_status }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "59588ea0-e8c7-4957-9606-58c660b51eda",
      "name": "Tem match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        5580,
        720
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches AS (\n  INSERT INTO match.matches (support_request_id, msr_id, volunteer_id, msr_zendesk_ticket_id, volunteer_zendesk_ticket_id, support_type, match_type, match_stage, status, created_at, updated_at)\n  VALUES ({{ $json.support_request_id }}, {{ $json.msr_id }}, NULL, {{ $json.msr_zendesk_ticket_id }}, NULL, '{{ $json.support_type }}', 'old', 'old', '{{ $json.match_status }}', '{{ $json.created_at }}', '{{ $json.updated_at }}')\n  RETURNING match_id\n)\nINSERT INTO match.match_status_history (match_id, status, created_at)\nSELECT matches.match_id, '{{ $json.match_status }}', NOW()\nFROM matches\n",
        "options": {}
      },
      "id": "79566beb-1c4b-440b-a2fa-1d3cedb23cd5",
      "name": "Cria match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        5820,
        700
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH support_requests AS (\n  INSERT INTO match.support_requests (msr_id, zendesk_ticket_id, support_type, support_expertise, priority, has_disability, requires_libras, accepts_online_support, lat, lng, city, state, status, created_at, updated_at)\n  VALUES ({{ $json.msr_id }}, {{ $json.zendesk_ticket_id }}, '{{ $json.support_type }}', NULL, NULL, NULL, NULL, TRUE, {{ $json.lat }}, {{ $json.lng }}, '{{ $json.city }}', '{{ $json.state }}', '{{ $json.support_request_status }}', '{{ $json.created_at }}', '{{ $json.updated_at }}')\n  RETURNING support_request_id\n)\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nSELECT support_requests.support_request_id, '{{ $json.support_request_status }}', NOW()\nFROM support_requests\nRETURNING \n  support_request_id, \n  {{ $json.msr_id }} AS msr_id, \n  {{ $json.zendesk_ticket_id }} AS msr_zendesk_ticket_id, \n  '{{ $json.support_type }}' AS support_type,\n  '{{ $json.match_status }}' AS match_status,\n  '{{ $json.created_at }}' AS created_at,\n  '{{ $json.updated_at }}' AS updated_at\n\n",
        "options": {}
      },
      "id": "0680fc0c-092b-4d6c-9127-72b0be9ab2f1",
      "name": "Cria support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        5360,
        720
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "compare": "selectedFields",
        "fieldsToCompare": "email",
        "options": {}
      },
      "id": "1f9b7894-f0fb-4bd9-b615-4810a848989d",
      "name": "Remove emails duplicados",
      "type": "n8n-nodes-base.removeDuplicates",
      "typeVersion": 1,
      "position": [
        1140,
        440
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a65aa96-45a3-4497-8188-48775abcecde",
              "name": "msr_id",
              "value": "={{ $json.msr_id }}",
              "type": "string"
            },
            {
              "id": "df3f7fa8-03b3-4332-80e5-fc592436c049",
              "name": "gender",
              "value": "={{ $json.gender }}",
              "type": "string"
            },
            {
              "id": "d0f3f4e3-8e0e-4575-a6c3-b766d59b49df",
              "name": "race_color",
              "value": "={{ $json.race_color }}",
              "type": "string"
            },
            {
              "id": "a01283b4-1149-4201-924c-07eac212c38e",
              "name": "has_disability",
              "value": "={{ $json.has_disability }}",
              "type": "boolean"
            },
            {
              "id": "cf98a380-6741-49fe-8caa-b581c0132472",
              "name": "accepts_online_support",
              "value": "={{ $json.accepts_online_support }}",
              "type": "boolean"
            },
            {
              "id": "d1f7a462-5ae3-4867-9ab4-354e545bb031",
              "name": "zipcode",
              "value": "={{ $json.zipcode }}",
              "type": "string"
            },
            {
              "id": "d7ed259d-31a9-4ec3-b57d-bdfcaa8f0d0f",
              "name": "neighborhood",
              "value": "={{ $json.neighborhood }}",
              "type": "string"
            },
            {
              "id": "a3c669cc-3019-4e3c-8ed9-a8825a34d515",
              "name": "city",
              "value": "={{ $json.city }}",
              "type": "string"
            },
            {
              "id": "7a26bef8-f6ab-420a-8212-96951c1b6a68",
              "name": "state",
              "value": "={{ $json.state }}",
              "type": "string"
            },
            {
              "id": "a290ca63-a8a9-49a9-94bc-8bfbb361ccf1",
              "name": "status",
              "value": "={{ $json.status }}",
              "type": "string"
            },
            {
              "id": "30aa5159-d8c5-45d9-b49d-75b1c4c9e8a5",
              "name": "created_at",
              "value": "={{ $json.created_at }}",
              "type": "string"
            },
            {
              "id": "17ee8c52-7649-4424-a63f-46bcd239e0d7",
              "name": "updated_at",
              "value": "={{ $json.updated_at }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "bd2520e4-9a30-463b-ae74-d18fc0e454a8",
      "name": "Seleciona campos",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.3,
      "position": [
        1340,
        440
      ]
    },
    {
      "parameters": {
        "content": "MSR com support_request na tabela atual",
        "height": 80,
        "width": 315.47600588636936,
        "color": 4
      },
      "id": "928cb6bb-3900-4b8f-ab12-23b461f5ceb0",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2040,
        -80
      ]
    },
    {
      "parameters": {
        "content": "MSR sem support_request na tabela atual",
        "height": 80,
        "width": 393.57283904097176,
        "color": 4
      },
      "id": "6276b8fe-0efa-42eb-b8cc-f4ceff0cdb88",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2020,
        320
      ]
    }
  ],
  "pinData": {
    "When clicking \"Test workflow\"": [
      {
        "json": {}
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2024-07-15T18:13:14.144Z",
      "updatedAt": "2024-07-15T18:13:14.144Z",
      "role": "workflow:owner",
      "workflowId": "R4izeInVeyLotzRY",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "icon": null,
        "description": null,
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2025-09-25T13:19:06.000Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1749493410027
                },
                "easyAIWorkflowOnboarded": true
              },
              "disabled": false,
              "mfaEnabled": false,
              "lastActiveAt": "2025-09-25",
              "isPending": false
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-07-23T17:58:52.000Z",
  "versionId": "5cbc42b0-e793-4a65-8e80-c7acdf60fa57"
}