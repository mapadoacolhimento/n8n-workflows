{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and support_request_status": {
      "main": [
        [
          {
            "node": "Fetch support_request_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch support_request_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?": {
      "main": [
        [
          {
            "node": "Update support_request status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch matches that should be expired today",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch matches that should be expired today": {
      "main": [
        [
          {
            "node": "Update MSR Zendesk ticket",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Volunteer Zendesk ticket",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch previous volunteer_availability and volunteer_status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Expire matches in database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch previous volunteer_availability and volunteer_status": {
      "main": [
        [
          {
            "node": "Should update volunteer status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer status?": {
      "main": [
        [
          {
            "node": "Update volunteer_availability and volunteer status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update zendesk Status da Mulher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check current_matches": {
      "main": [
        [
          {
            "node": "Should update current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update current_matches?": {
      "main": [
        [
          {
            "node": "Update current_matches1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Expire matches in database": {
      "main": [
        [
          {
            "node": "Check current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update is_available?": {
      "main": [
        [
          {
            "node": "Update is_available",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should update volunteer condition?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update is_available": {
      "main": [
        [
          {
            "node": "Should update volunteer condition?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer condition?": {
      "main": [
        [
          {
            "node": "Update volunteer condition",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert into volunteer_status_history",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch match_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is match interrupted or completed?": {
      "main": [
        [
          {
            "node": "Fetch previous volunteer_availability and volunteer_status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and support_request_status1": {
      "main": [
        [
          {
            "node": "Fetch match_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?1": {
      "main": [
        [
          {
            "node": "Is match interrupted or completed?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update match status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check current_matches1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer status?1": {
      "main": [
        [
          {
            "node": "Update volunteer_availability and volunteer status1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update zendesk Status da Mulher1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch previous volunteer_availability and volunteer_status1": {
      "main": [
        [
          {
            "node": "Should update volunteer status?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check current_matches1": {
      "main": [
        [
          {
            "node": "Should update current_matches?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update current_matches?1": {
      "main": [
        [
          {
            "node": "Update current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should update is_available?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-10T15:17:23.968Z",
  "id": "gOnJ9OT9JnzUcWDW",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] [Zendesk Integration] Atualizações pedido de acolhimento",
  "nodes": [
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-support-request",
        "options": {}
      },
      "id": "925959b8-87b6-4555-83fe-d1b1f309040e",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        300,
        260
      ],
      "webhookId": "79aa3f88-502d-4171-aca9-040b24e9b319",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const zendesk_ticket_id = item.json.body.id;\n  let status;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  const tags = item.json.body.tags\n  \n\n  if(item.json.body.status_acolhimento === \"solicitação_recebida\" && tags.includes(\"nova-voluntaria-com-prioridade\")){\n     \n    status = \"special_case\";\n  \n  }\n  else {\n    const status_lookup = {\n      \"solicitação_recebida\": \"open\",\n      \"encaminhamento__realizado_para_serviço_público\": \"public_service\",\n      \"encaminhamento__realizado\": \"matched\",\n      \"encaminhamento__assistente_social\": \"social_worker\",\n      \"encaminhamento__servico_publico_com_assistente_social\": \"public_service_with_social_worker\"\n    }\n\n    status = status_lookup[status_acolhimento]\n    \n  }\n\n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "efffec30-778b-426b-959e-b97231764c01",
      "name": "Extracts zendesk_ticket_id and support_request_status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        520,
        260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tsupport_request_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status\nFROM match.support_requests\nWHERE zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "d6d1cd00-5406-4321-953e-9dd06fc830bd",
      "name": "Fetch support_request_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        760,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "509226b4-9996-48b4-8a2c-cc24f5005553",
      "name": "Is it a new status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        980,
        260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE support_request_id = {{$json[\"support_request_id\"]}};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json[\"support_request_id\"]}}, '{{$json[\"new_status\"]}}', NOW());",
        "additionalFields": {}
      },
      "id": "f2eb231a-f7c9-450f-aab3-c0c0a8928724",
      "name": "Update support_request status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1280,
        240
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "4021fafc-c629-4520-a85f-ef69c124d968",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1280,
        480
      ]
    },
    {
      "parameters": {
        "content": "updates support_request",
        "height": 80,
        "width": 200.46763117115643
      },
      "id": "f3f10eb4-9600-496d-81b3-61b6d7d1d46d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        160
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "id": "d58bea69-41d0-416b-b81a-9227b525889b",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        280,
        1420
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n   match_id,\n   msr_id,\n   msr_zendesk_ticket_id,\n   volunteer_id,\n   volunteer_zendesk_ticket_id\nFROM match.matches\nWHERE\n   status = 'waiting_contact'\n   AND created_at >= '2024-01-25'\n   AND created_at < CURRENT_DATE - INTERVAL '30 DAY'",
        "additionalFields": {}
      },
      "id": "7858e8b6-92c7-4a3e-ac15-00dfc1c6cbf7",
      "name": "Fetch matches that should be expired today",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        640,
        1420
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"msr_zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__expirado"
              }
            ]
          },
          "publicReply": "Olá, {{ticket.requester.first_name}}!\n\nEspero que esteja bem na medida do possível.\n\nEstamos aqui para informá-la que hoje completam 30 dias do seu encaminhamento. Dessa forma, como não recebemos uma devolutiva acerca do início do atendimento entre você e a profissional indicada, sua vaga será liberada para uma outra mulher que necessite de ajuda.\n\nCaso, em algum outro momento, você deseje novamente receber nossa ajuda, é só escrever para o atendimento@mapadoacolhimento.org que te encaminharemos o contato de uma outra profissional disponível ou do serviço público mais próximo.\n\nConte conosco e nos escreva em caso de dúvidas. Estamos aqui para ajudá-la no que for possível <3.\n\nForte abraço,\nEquipe do Mapa do Acolhimento"
        }
      },
      "id": "cb4d570f-c410-423a-bd44-e582d4a58f2b",
      "name": "Update MSR Zendesk ticket",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        960,
        1680
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"volunteer_zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__expirado"
              }
            ]
          },
          "publicReply": "Olá, {{ticket.requester.first_name}}! Esperamos que você esteja bem! \n\nEstamos aqui para informá-la que hoje completam 30 dias desde o encaminhamento da {{ticket.ticket_field_360016681971}} mulher que precisa de ajuda. Dessa forma, como não recebemos uma devolutiva acerca do início do atendimento entre você e ela, estamos liberando sua vaga para um novo pedido de ajuda.\n\nNo entanto, se a {{ticket.ticket_field_360016681971}} te contactar, mesmo depois do tempo previsto, pedimos por favor que nos avise por e-mail ou por WhatsApp. Assim, poderemos garantir que ela receba o apoio que precisa e atualizar a sua disponibilidade no nosso sistema.\n\nVocê é parte essencial da nossa rede de apoio <3. Qualquer dúvida nos escreva.\n\nAbraços,\nEquipe do Mapa do Acolhimento"
        }
      },
      "id": "5862a91b-267f-4ec0-8d7e-594d9f2aa56e",
      "name": "Update Volunteer Zendesk ticket",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        960,
        1940
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   volunteer_id,\n   zendesk_user_id, \n   current_matches,\n   max_matches,  \n   is_available,\n   condition\nFROM public.volunteer_availability\nLEFT JOIN public.volunteers ON volunteer_id = id\nWHERE volunteer_id = \t{{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "32caf459-bf0a-4a33-92fe-9fe2733b787f",
      "name": "Fetch previous volunteer_availability and volunteer_status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        980,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"condition\"]}}",
              "value2": "indisponivel_sem_vagas"
            }
          ]
        }
      },
      "id": "f1a16bea-ab6e-4d7c-b8d3-ec3b441d4be1",
      "name": "Should update volunteer status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1420,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET  is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "440b1c20-106a-45bf-933b-781f46b8811e",
      "name": "Update volunteer_availability and volunteer status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1680,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{$json[\"zendesk_user_id\"]}}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "Disponível"
              }
            ]
          }
        }
      },
      "id": "e1ab2de1-da4d-4964-8b74-dad2cd03a165",
      "name": "Update zendesk Status da Mulher",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1700,
        940
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "3643a41f-1408-41d4-a5ef-cc975a22f725",
      "name": "Check current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1220,
        1460
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "6a21e226-4070-4c30-aba2-94f26839caa4",
      "name": "Should update current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        1460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "cf6fae47-5992-44af-94f6-88045aa97ba7",
      "name": "Update current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1660,
        1440
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.matches\nSET status = 'expired', updated_at = NOW()\nWHERE match_id = {{$json[\"match_id\"]}};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{$json[\"match_id\"]}}, 'expired', NOW());\n\nSELECT volunteer_id\nFROM match.matches\nWHERE match_id = {{$json[\"match_id\"]}};",
        "options": {}
      },
      "id": "962b1b6a-4944-42a3-a295-45cd584d43e5",
      "name": "Expire matches in database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        980,
        1460
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "expires matches",
        "height": 80,
        "width": 233.26349637113265
      },
      "id": "626eb943-50bb-41e9-9327-826f7796925a",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.matches\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE match_id = {{$json[\"match_id\"]}};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{$json[\"match_id\"]}}, '{{$json[\"new_status\"]}}', NOW());\n\n\n",
        "additionalFields": {}
      },
      "id": "5e0ddd4c-eb27-49d9-acd9-64a69c1f3881",
      "name": "Update match status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3080,
        -100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "53a6dfc0-564c-46c6-ba31-a373e2b718ac",
              "leftValue": "={{ $json.calculated_current_matches }}",
              "rightValue": "={{ $json.max_matches }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "5328fa5a-9c77-4411-9460-7321f1a5b2aa",
      "name": "Should update is_available?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4200,
        880
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "21c4173e-463f-4bd6-bc75-7fef1f492f13",
      "name": "Update is_available",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4540,
        860
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fa143aea-49de-479a-9acd-2a188df0b168",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "disponivel",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d83ca1c6-1db3-4c38-937f-5eeb63c4a132",
      "name": "Should update volunteer condition?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4820,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers\nSET condition = 'indisponivel_sem_vagas', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "97e7f74d-ebb6-4db2-b1bd-e4fef9741b50",
      "name": "Update volunteer condition",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5320,
        940
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'indisponivel_sem_vagas', NOW())",
        "options": {}
      },
      "id": "b6f8d477-24e9-406f-9dd5-4be67c7d2c8f",
      "name": "Insert into volunteer_status_history",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5300,
        1140
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tmatch_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status,\n    volunteer_id \nFROM match.matches\nWHERE volunteer_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT \nOR msr_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nORDER BY created_at DESC\nLIMIT 1",
        "options": {}
      },
      "id": "cc3fd289-66bb-4b6d-9786-fe99d14e513a",
      "name": "Fetch match_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2580,
        500
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_before_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_after_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "completed"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "cf825ccc-efd6-4a5e-9c91-78fa352e13a8",
      "name": "Is match interrupted or completed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3080,
        420
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-match",
        "options": {}
      },
      "id": "780f613f-79c3-41ee-ae05-5973a6675a6a",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        2120,
        500
      ],
      "webhookId": "2e8d877f-e88c-4856-a866-639812e65d01",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const status_lookup = {\n      \"encaminhamento__realizado\": \"waiting_contact\",\n      \"encaminhamento_interrompido\": \"interrupted_before_support\",\n      \"atendimento__iniciado\": \"in_contact\",\n      \"atendimento__concluído\": \"completed\",\n      \"atendimento__interrompido\": \"interrupted_after_support\" \n  }\n \n  const zendesk_ticket_id = item.json.body.id;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  \n  const status = status_lookup[status_acolhimento]\n    \n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "01c076d8-803d-435e-bc2a-62e0aa6513eb",
      "name": "Extracts zendesk_ticket_id and support_request_status1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2360,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "7502bc1a-264d-4aba-83f6-4772cf9f0775",
      "name": "Is it a new status?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2800,
        500
      ]
    },
    {
      "parameters": {},
      "id": "4c5186dd-5790-48fa-951b-02591012c0da",
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2960,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"condition\"]}}",
              "value2": "indisponivel_sem_vagas"
            }
          ]
        }
      },
      "id": "fa38de21-735a-40a5-a9dc-0cf3919cb252",
      "name": "Should update volunteer status?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3580,
        400
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   volunteer_id,\n   zendesk_user_id, \n   current_matches,\n    max_matches,  \n   is_available,\n   condition\nFROM public.volunteer_availability\nLEFT JOIN public.volunteers ON volunteer_id = id\nWHERE volunteer_id = \t{{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "49124108-94ab-4ef4-b3b3-2d325ced3ee5",
      "name": "Fetch previous volunteer_availability and volunteer_status1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3360,
        400
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "104a0c23-534c-4785-b760-c8e041fc9ec6",
      "name": "Update volunteer_availability and volunteer status1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3820,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{$json[\"zendesk_user_id\"]}}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "Disponível"
              }
            ]
          }
        }
      },
      "id": "2d769f27-f680-4691-843b-d00d0ccb7be4",
      "name": "Update zendesk Status da Mulher1",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3820,
        120
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "a025d771-5835-4fad-a4d9-26bbbe3e9505",
      "name": "Check current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3460,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "bab744da-fe7d-48d8-b38c-8226e41d2c6d",
      "name": "Should update current_matches?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        820
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "527d0961-c8b7-4a1c-a6cc-c0261df30015",
      "name": "Update current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4200,
        660
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "updates match",
        "height": 80,
        "width": 238.13661201650135
      },
      "id": "ec51aa88-2d74-4ab5-88cd-f714c5aa7340",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2140,
        300
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-09T22:32:23.916Z",
      "updatedAt": "2024-01-09T22:32:23.916Z",
      "id": "JnlufCPRnot361zL",
      "name": "zendesk integration"
    }
  ],
  "triggerCount": 3,
  "updatedAt": "2024-04-10T15:49:13.000Z",
  "versionId": "bdc83845-ac73-4e83-9cc9-cfdc6c1021af"
}