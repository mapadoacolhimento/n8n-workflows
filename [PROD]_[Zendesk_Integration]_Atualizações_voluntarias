{
  "active": true,
  "connections": {
    "Extracts zendesk_user_id and is_available": {
      "main": [
        [
          {
            "node": "Fetch volunteer_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch volunteer_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extracts zendesk_user_id and is_available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?1": {
      "main": [
        [
          {
            "node": "Update volunteer status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and survey_type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch match_id": {
      "main": [
        [
          {
            "node": "Fetch past survey",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and survey_type": {
      "main": [
        [
          {
            "node": "Fetch match_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch past survey": {
      "main": [
        [
          {
            "node": "Is it a new survey?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new survey?": {
      "main": [
        [
          {
            "node": "Insert into match_surveys",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-10T15:12:34.855Z",
  "id": "e6Zjg1Mil9gzsS1f",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD] [Zendesk Integration] Atualizações voluntárias",
  "nodes": [
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const zendesk_user_id = item.json.body.volunteer_user_id;\n  const status = item.json.body.volunteer_status;\n  \n  const is_available = status === 'disponivel' ? 1 : 0;\n    \n  const newItem = {\n    \"zendesk_user_id\": zendesk_user_id,\n    \"status\": status,\n    \"is_available\": is_available\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "17ba78b8-1749-43d4-8fb4-4a381db78a8d",
      "name": "Extracts zendesk_user_id and is_available",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -320,
        720
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tid AS volunteer_id, \n\tcondition AS current_status,\n    '{{$json[\"status\"]}}' AS new_status,\n    {{$json[\"is_available\"]}} AS is_available \nFROM public.volunteers\nWHERE zendesk_user_id = {{$json[\"zendesk_user_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "91c708d8-7bfa-47c6-9f6b-576aeeb9f2ec",
      "name": "Fetch volunteer_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -100,
        720
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, '{{$json[\"new_status\"]}}', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = {{$json[\"is_available\"]}}::boolean, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}};",
        "additionalFields": {}
      },
      "id": "3fce4837-dd3e-49c9-93ae-2dd5ff9efeb0",
      "name": "Update volunteer status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        420,
        700
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "update-volunteer-status",
        "authentication": "basicAuth",
        "options": {}
      },
      "id": "9876c1e0-20c1-4f64-9573-826a19d90579",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -560,
        720
      ],
      "webhookId": "67bf1f60-bd30-4c10-b84e-b09c184c27ba",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "c87a72f1-bf70-42b2-889f-c3d523e3837c",
      "name": "Is it a new status?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        120,
        720
      ]
    },
    {
      "parameters": {},
      "id": "17e868c5-15f9-419b-b8dc-153c36ef8c67",
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        420,
        900
      ]
    },
    {
      "parameters": {
        "content": "updates volunteer status\n",
        "height": 80,
        "width": 201.2686034032215
      },
      "id": "9af6a44e-dcb9-44e9-aaa4-16835620a1d4",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -580,
        620
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "create-match-survey",
        "authentication": "basicAuth",
        "options": {}
      },
      "id": "fff5e22f-14bf-4d6a-ba10-38d78ffb6b92",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -600,
        1280
      ],
      "webhookId": "9d744de2-fa09-49fe-909e-a3a86e3154a1",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tmatch_id, \n    '{{$json[\"survey_type\"]}}' AS survey_type\nFROM match.matches\nWHERE volunteer_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "ab4be411-5ba3-4b73-a129-ca1e1b4347f2",
      "name": "Fetch match_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -160,
        1280
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const status_lookup = {\n      \"atendimento_triagem_1\": \"triagem_1\",\n      \"atendimento_triagem_2\": \"triagem_2\",\n      \"atendimento_acompanhamento_1\": \"acompanhamento_1\",\n      \"atendimento_acompanhamento_2\": \"acompanhamento_2\"\n  }\n \n  const zendesk_ticket_id = item.json.body.id;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  \n  const survey_type = status_lookup[status_acolhimento]\n    \n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"survey_type\": survey_type\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "f066a751-5e90-4861-b545-3896d9d365cd",
      "name": "Extracts zendesk_ticket_id and survey_type",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -380,
        1280
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=INSERT INTO match.match_surveys (match_id, survey_type, created_at, updated_at)\nVALUES ({{$node[\"Fetch match_id\"].json[\"match_id\"]}}, '{{$node[\"Fetch match_id\"].json[\"survey_type\"]}}', NOW(), NOW());",
        "additionalFields": {}
      },
      "id": "f6aa8970-07ef-4dfb-9b53-534572102d35",
      "name": "Insert into match_surveys",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        520,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   match_survey_id,\n   {{$json[\"match_id\"]}} AS match_id,\n   '{{$json[\"survey_type\"]}}' AS survey_type\nFROM match.match_surveys\nWHERE match_id = {{$json[\"match_id\"]}}\nAND survey_type = '{{$json[\"survey_type\"]}}'",
        "additionalFields": {}
      },
      "id": "d63cfab6-4454-4805-967d-29298c7d79e1",
      "name": "Fetch past survey",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        60,
        1280
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{$json[\"match_survey_id\"]}}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "d7b138e6-cdf4-471f-8a1f-40e10f9059fd",
      "name": "Is it a new survey?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        300,
        1280
      ]
    },
    {
      "parameters": {},
      "id": "8f8d8b35-cf03-4eaa-8259-1edb1ee18a0e",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        520,
        1520
      ]
    },
    {
      "parameters": {
        "content": "creates match_survey",
        "height": 80,
        "width": 199.30187017656982
      },
      "id": "e58c37e1-867b-42f8-83ff-7176195fe7bb",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -600,
        1160
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-24T01:51:54.592Z",
      "updatedAt": "2024-01-24T01:51:54.592Z",
      "id": "9qHi7Mg3P0urkBHm",
      "name": "volunteer"
    },
    {
      "createdAt": "2024-01-09T22:32:23.916Z",
      "updatedAt": "2024-01-09T22:32:23.916Z",
      "id": "JnlufCPRnot361zL",
      "name": "zendesk integration"
    }
  ],
  "triggerCount": 2,
  "updatedAt": "2024-06-18T13:59:39.000Z",
  "versionId": "8bec1a7f-0166-47ba-b8c0-6b9ffacc2cc4"
}