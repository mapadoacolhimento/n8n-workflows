{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca voluntária no Zendesk": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Busca voluntária  no BD": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Compara as informações da voluntária no BD com as informações no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Monta  query de atualização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara as informações da voluntária no BD com as informações no Zendesk": {
      "main": [
        [
          {
            "node": "Tem alguma alteração?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "As informações de endereço mudaram?": {
      "main": [
        [
          {
            "node": "Busca as coordenadas do endereço",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Monta  query de atualização",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca as coordenadas do endereço": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Tem alguma alteração?": {
      "main": [
        [
          {
            "node": "As informações de endereço mudaram?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Monta  query de atualização": {
      "main": [
        [
          {
            "node": "Atualiza voluntária no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Compara o endereço da MSr no Zendesk com o endereço no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca MSR no Zendesk": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Compara o endereço da MSr no Zendesk com o endereço no BD": {
      "main": [
        [
          {
            "node": "O endereço mudou?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O endereço mudou?": {
      "main": [
        [
          {
            "node": "Busca as coordenadas do endereço1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca as coordenadas do endereço1": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Monta  query de atualização1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Monta  query de atualização1": {
      "main": [
        [
          {
            "node": "Atualiza support_request no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request no BD": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Busca support_request no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca MSR no Zendesk",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca voluntária  no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca voluntária no Zendesk",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca voluntária  no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca voluntária no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-03-05T14:08:20.238Z",
  "id": "W8P17vvHrpE6Eem8",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[PROD]  Integração Zendesk/BD",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ticket-updated",
        "options": {}
      },
      "id": "a515d9a2-549b-4dc6-a0ba-b1b3d486b939",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        -620,
        640
      ],
      "webhookId": "effea0ce-7edb-4a48-b8e5-3e1ad57df510"
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "get",
        "id": "={{ $json.body.ticket.requester_id }}"
      },
      "id": "19c0ba15-9fea-4e7a-9190-1a4e9af7dd83",
      "name": "Busca voluntária no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        -120,
        960
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from volunteers v\nwhere zendesk_user_id = {{$node[\"Webhook\"].json[\"body\"][\n\"ticket\"][\"requester_id\"]}}",
        "additionalFields": {}
      },
      "id": "7343036f-1559-49d2-8b4c-52d4507d64bc",
      "name": "Busca voluntária  no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -40,
        700
      ],
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "747b8cc9-eaca-4b47-8321-112afddc7442",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        220,
        960
      ]
    },
    {
      "parameters": {},
      "id": "d84a93de-e5b0-4c36-94cb-f0da0de00ee1",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1580,
        540
      ]
    },
    {
      "parameters": {},
      "id": "d4120d1a-a38c-4480-85c4-0596b7bbc5a0",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1020,
        1180
      ]
    },
    {
      "parameters": {
        "jsCode": "volunteer_bd = {\n  \"first_name\":  items[0].json.first_name, \n  \"last_name\":  items[0].json.last_name,\n  \"availability\": items[0].json.availability,\n  \"city\": items[0].json.city,\n  \"state\": items[0].json.state,\n  \"neighborhood\": items[0].json.neighborhood,\n  \"zipcode\": items[0].json.zipcode,\n  \"phone\": items[0].json.phone,\n  \"register_number\": items[0].json.register_number\n}\n\nconst nameV =  items[1].json.name\nvolunteer_zendesk = {\n  \"first_name\":  nameV.substring(0,nameV.indexOf(' ')), \n  \"last_name\":  nameV.substring(nameV.indexOf(' ') + 1),\n  \"availability\": Number(items[1].json.user_fields.disponibilidade_de_atendimentos),\n  \"city\": items[1].json.user_fields.city\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .replace(\"'\", \" \")\n    .replace(/ *\\([^)]*\\) */g, \"\").toUpperCase(),\n  \"state\": items[1].json.user_fields.state.toUpperCase(),\n  \"zipcode\": items[1].json.user_fields.cep,\n  \"phone\": items[1].json.phone,\n  \"register_number\": items[1].json.user_fields.registration_number\n}\n\nlet fields = Object.keys(volunteer_zendesk);\nlet diference = {};\nfields.forEach((field) => {\n  if (volunteer_zendesk[field] != volunteer_bd[field]) {\n    diference[field] = volunteer_zendesk[field];\n  }\n});\n\nreturn {\"updated_fields\": diference, \"volunteer_id\": items[0].json.id};"
      },
      "id": "0f479549-3baf-42b5-9e7c-f3c1f55ae71d",
      "name": "Compara as informações da voluntária no BD com as informações no Zendesk",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        540,
        960
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "2b84eba0-acaa-470b-b279-8edca556fb44",
              "leftValue": "={{ $json.updated_fields.city }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "bbb95351-37ac-4568-a930-df238660897f",
              "leftValue": "={{ $json.updated_fields.state }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "ec0b47a6-958d-4bc3-b2ff-acbd9e2ceca7",
              "leftValue": "={{ $json.updated_fields.zipcode }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "ae52ae36-f913-4170-9a2c-6119c6c859f2",
      "name": "As informações de endereço mudaram?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1000,
        920
      ]
    },
    {
      "parameters": {
        "url": "=https://novoqueroacolher.staging.bonde.org/address/?zipcode={{ $json[\"updated_fields\"][\"zipcode\"] }}",
        "options": {}
      },
      "id": "581ffa23-3c34-4ce5-90b6-f814bf9dc8d9",
      "name": "Busca as coordenadas do endereço",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1420,
        820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "42bd8ac1-280e-44a6-b602-bd0396e1deda",
              "leftValue": "={{ $json.updated_fields }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "2401b7d1-d0d3-43c5-b980-e772857700df",
      "name": "Tem alguma alteração?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        740,
        960
      ]
    },
    {
      "parameters": {
        "jsCode": "let updateSQL = \"\"\n\nlet fields = Object.entries(items[0].json.updated_fields)\nupdateSQL = updateSQL +  fields.map( ([key, val] = entry) => {\n  if (typeof val === \"string\") {\n      return `${key} = '${val}'`;\n    }  else{\n      return `${key} = ${val}`;\n    }\n    \n});\nif (items[1]) {\n  updateSQL = updateSQL + \n     \n     `,latitude = ${items[1].json.coordinates.lat.toFixed(3)},` +\n     `longitude = ${items[1].json.coordinates.lng.toFixed(3)},` +\n     `neighborhood = '${items[1].json.neighborhood}'`\n  if (items[1].json.street){\n    updateSQL = updateSQL + `,street = '${items[1].json.street}'` \n  }\n}\n\nupdateSQL = 'UPDATE volunteers set ' + updateSQL + `, updated_at = now() where id = ${items[0].json.volunteer_id}`\n\nreturn {\"update_sql\": updateSQL };"
      },
      "id": "c74bd28f-7489-4638-b6c1-f15ff91bf7ac",
      "name": "Monta  query de atualização",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1720,
        940
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{ $('Monta  query de atualização').item.json[\"update_sql\"] }}",
        "additionalFields": {}
      },
      "id": "851d9b15-0c6e-459d-bcef-176e52b93bdf",
      "name": "Atualiza voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1940,
        940
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "get",
        "id": "={{ $json.body.ticket.requester_id }}"
      },
      "id": "a9ef5159-24de-409c-b121-4584b9f54ad5",
      "name": "Busca MSR no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        -40,
        320
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {},
      "id": "3431b87f-d258-46c1-8f56-3a8ad3a55c63",
      "name": "Merge2",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        300,
        180
      ]
    },
    {
      "parameters": {
        "url": "=https://novoqueroacolher.staging.bonde.org/address/",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "city",
              "value": "={{ $json.updated_fields.city }}"
            },
            {
              "name": "state",
              "value": "={{ $json.updated_fields.state }}"
            }
          ]
        },
        "options": {}
      },
      "id": "7f1eed3f-ac72-4eeb-848f-47608d689adc",
      "name": "Busca as coordenadas do endereço1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1280,
        260
      ]
    },
    {
      "parameters": {
        "jsCode": "support_request_bd = {\n  \"city\": items[0].json.city,\n  \"state\": items[0].json.state,\n\n}\n\nmsr_zendesk = {\n\n  \"city\": items[1].json.user_fields.city\n    .normalize(\"NFD\")\n    .replace(/[\\u0300-\\u036f]/g, \"\")\n    .replace(\"'\", \" \")\n    .replace(/ *\\([^)]*\\) */g, \"\").toUpperCase(),\n  \"state\": items[1].json.user_fields.state.toUpperCase(),\n\n}\n\nlet fields = Object.keys(msr_zendesk);\nlet diference = {};\nfields.forEach((field) => {\n  if (msr_zendesk[field] != support_request_bd[field]) {\n    diference[field] = msr_zendesk[field];\n  }\n});\n\nreturn {\"updated_fields\": diference, \"support_request_id\": items[0].json.support_request_id};"
      },
      "id": "cb87a32d-8b59-4844-a50e-94edc3a88850",
      "name": "Compara o endereço da MSr no Zendesk com o endereço no BD",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        180
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "42bd8ac1-280e-44a6-b602-bd0396e1deda",
              "leftValue": "={{ $json.updated_fields }}",
              "rightValue": "",
              "operator": {
                "type": "object",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "83c2e037-2466-4313-bd80-f303cca2d202",
      "name": "O endereço mudou?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        780,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "let updateSQL = \"\"\n\nlet fields = Object.entries(items[0].json.updated_fields)\nupdateSQL = updateSQL +  fields.map( ([key, val] = entry) => {\n  if (typeof val === \"string\") {\n      return `${key} = '${val}'`;\n    }  else{\n      return `${key} = ${val}`;\n    }\n    \n});\nif (items[1]) {\n  updateSQL = updateSQL + \n     \n     `,lat = '${items[1].json.coordinates.lat.toFixed(3)}',` +\n     `lng = '${items[1].json.coordinates.lng.toFixed(3)}'`\n  if (items[1].json.street){\n    updateSQL = updateSQL + `,street = '${items[1].json.street}'` \n  }\n}\n\nupdateSQL = 'UPDATE match.support_requests set ' + updateSQL + `, updated_at = now() where support_request_id = ${items[0].json.support_request_id}`\n\nreturn {\"update_sql\": updateSQL };"
      },
      "id": "77ade633-7b2e-4125-8995-9d6066fed633",
      "name": "Monta  query de atualização1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1660,
        120
      ]
    },
    {
      "parameters": {},
      "id": "f5a12e3f-007c-4159-abb4-6d8582d6c2fd",
      "name": "Merge3",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        1440,
        0
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "={{ $('Monta  query de atualização1').item.json[\"update_sql\"] }}",
        "additionalFields": {}
      },
      "id": "59ea8d4f-a443-42eb-9a02-5b7abf5eefdf",
      "name": "Atualiza support_request no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1860,
        120
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=select * from match.support_requests where zendesk_ticket_id = {{$node[\"Webhook\"].json[\"body\"][\n\"ticket\"][\"id\"]}}",
        "additionalFields": {}
      },
      "id": "fd0e0bf2-8642-4764-9b92-4b58089fc304",
      "name": "Busca support_request no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -40,
        120
      ],
      "alwaysOutputData": false,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "a7fedb1d-8c0a-4e5f-a187-c3d23d9fe4ee",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1020,
        380
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.body.ticket.organization_id }}",
                    "rightValue": 360273031591,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MSR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "bfae5951-c72c-4899-aa29-a0118c3fb13a",
                    "leftValue": "={{ $json.body.ticket.organization_id }}",
                    "rightValue": 360269610652,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Advogada"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "0f6be240-f6f5-41d2-a856-04544f633b38",
                    "leftValue": "={{ $json.body.ticket.organization_id }}",
                    "rightValue": 360282119532,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Psicologa"
            }
          ]
        },
        "options": {}
      },
      "id": "3f92c1b8-7532-4f34-abd9-dfe7f89cc5d0",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -380,
        640
      ]
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "x-request-id": "98e6fd1d-a120-4ece-a6ea-095c0bb40981",
            "x-real-ip": "216.198.2.195",
            "x-forwarded-for": "216.198.2.195",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-scheme": "https",
            "x-scheme": "https",
            "content-length": "315",
            "user-agent": "Zendesk Webhook",
            "authorization": "Basic ZGV2QG1hcGEub3JnLmJyOkJQYlFFY1hrc3cyejhX",
            "content-type": "application/json; charset=utf-8",
            "traceparent": "00-0000000000000000261efe3cb86eb4ef-261efe3cb86eb4ef-00",
            "tracestate": "dd=s:-1",
            "x-zendesk-account-id": "9040899",
            "x-zendesk-webhook-id": "01HQNDS3MVX30JXB22GHD6JNDJ",
            "x-zendesk-webhook-invocation-id": "test_webhook:fake_event:85c2a6752cc71d57-GIG",
            "x-zendesk-webhook-signature": "wy+gHyZfcUP+bTJZUaTDm/laSc3mdDCxuBvDwJinQHs=",
            "x-zendesk-webhook-signature-timestamp": "2024-02-27T18:56:52Z"
          },
          "params": {},
          "query": {},
          "body": {
            "ticket": {
              "id": 81068,
              "priority": "low",
              "status": "new",
              "subject": "psi teste prod",
              "description": "-",
              "fields": [],
              "requester_id": 417544904932,
              "organization_id": 360282119532,
              "tags": []
            }
          }
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-03-05T14:10:07.000Z",
  "versionId": "da7d8dad-8d25-4dcd-98e2-5f9f36d0cd76"
}