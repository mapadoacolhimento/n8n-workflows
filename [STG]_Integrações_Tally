{
  "active": false,
  "connections": {
    "Filtra apenas as infos que importam": {
      "main": [
        [
          {
            "node": "Busca voluntária no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Possui match?": {
      "main": [
        [
          {
            "node": "Envia e-mail pedindo que ela entre em contato",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Descadastra a voluntária no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da voluntária no Zendesk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Envia e-mail confirmando o descadastro",
            "type": "main",
            "index": 0
          },
          {
            "node": "Avisa o time de provisão de serviços",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca voluntária no BD": {
      "main": [
        [
          {
            "node": "Possui match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voluntária deseja se descadastrar": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca match": {
      "main": [
        [
          {
            "node": "Encontrou o match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o match?": {
      "main": [
        [
          {
            "node": "O status atual é waiting_contact?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém o transactionaId da Voluntária": {
      "main": [
        [
          {
            "node": "email Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ticket MSR - encaminhamento interrompido": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "ticket MSR - solicitação recebida",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca support_request_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária": {
      "main": [
        [
          {
            "node": "email MSR - nova voluntária sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "email Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status da Mulher = Indisponivel - Agenda",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária1": {
      "main": [
        [
          {
            "node": "email MSR - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "Obtém o transactionaId da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam1": {
      "main": [
        [
          {
            "node": "Deve seguir?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O status atual é waiting_contact?": {
      "main": [
        [
          {
            "node": "Devemos atualizar o status?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Devemos atualizar o status?": {
      "main": [
        [
          {
            "node": "Atualiza status do match",
            "type": "main",
            "index": 0
          },
          {
            "node": "Qual o novo status?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca infos da MSR e da Voluntária2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qual o novo status?": {
      "main": [
        [
          {
            "node": "ticket Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - atendimento iniciado2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca infos da MSR e da Voluntária1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ticket MSR - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca infos da MSR e da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária2": {
      "main": [
        [
          {
            "node": "email MSR - Voluntária não respondeu",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - Voluntária não respondeu",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - observação interna",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - observação interna",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request_id": {
      "main": [
        [
          {
            "node": "Atualiza support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca current_matches": {
      "main": [
        [
          {
            "node": "Deve atualizar o current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o current_matches?": {
      "main": [
        [
          {
            "node": "Atualiza current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve seguir?": {
      "main": [
        [
          {
            "node": "Busca match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR ou Voluntária preencheu o formulário": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-03-25T18:42:56.185Z",
  "id": "KsVSUbQgGiUd5U1m",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[STG] Integrações Tally",
  "nodes": [
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfor (const item of $input.all()) {\n  const volunteerEmail = item.json.body.data.fields[1].value;\n  const unsubscriptionReasonValue = item.json.body.data.fields[2].value;\n\n  const unsubscriptionReasonLabel = item.json.body.data.fields[2].options.find((element) => element.id == unsubscriptionReasonValue).text;\n\n  const unsubscriptionDescription = item.json.body.data.fields[3].value;\n  \n  output.push(\n    {\n      \"email\": volunteerEmail,\n      \"unsubscription_reason\": unsubscriptionReasonLabel,\n      \"unsubscription_description\": unsubscriptionDescription\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "5c1bc8c7-7add-4b31-83ea-a9e04548d6a8",
      "name": "Filtra apenas as infos que importam",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        940,
        340
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "8c295d83-7a45-4d59-b875-8756f37f49da",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "1803e4f8-a9ea-4b00-9dfe-7ef47c0ba33b",
      "name": "Possui match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers \nSET condition = 'descadastrada', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }};\n\nINSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'descadastrada', NOW());\n\nUPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "859eabed-5197-47b0-a5dd-ee79a5cf0f8e",
      "name": "Descadastra a voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id AS volunteer_id,\n  email,\n  first_name,\n  phone,\n  zendesk_user_id,\n  COALESCE(current_matches, 0) AS current_matches,\n  '{{ $json.unsubscription_reason }}' AS unsubscription_reason,\n  '{{ $json.unsubscription_description }}' AS unsubscription_description\nFROM volunteers\nLEFT JOIN volunteer_availability ON id = volunteer_id\nWHERE email = '{{ $json.email }}'",
        "options": {}
      },
      "id": "7d74cd4d-378c-4219-a096-ed0715c82bfe",
      "name": "Busca voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1160,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "descadastrada"
              }
            ]
          }
        }
      },
      "id": "5fa7bc69-646d-4879-9820-34849cc99adb",
      "name": "Atualiza status da voluntária no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        1060
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8sn93v003e145jlfb9gf67\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "161117ab-be21-494c-8121-18a8910fa05f",
      "name": "Envia e-mail pedindo que ela entre em contato",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2120,
        100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8up5lj0005iyhgjmq7qtqi\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "4c2d91c5-9759-4ef2-8110-c44ccadec867",
      "name": "Envia e-mail confirmando o descadastro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        840
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C06R9JPDEQN",
          "mode": "list",
          "cachedResultName": "alertas-tech-provisao"
        },
        "text": "=:no_entry_sign: Voluntária Descadastrada automaticamente pelo formulário de descadastro :no_entry_sign:\n\nvolunteer_id: {{ $json.volunteer_id }}\nemail: {{ $json.email }}\ntelefone: {{ $json.phone }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "id": "1760aaca-c9c0-4301-8aba-fcd0ead8ce85",
      "name": "Avisa o time de provisão de serviços",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        2100,
        1280
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "01G85hUbLT4VlY92",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_unsubscriptions (volunteer_id, unsubscription_reason, unsubscription_description, created_at, updated_at)\nVALUES ({{ $json.volunteer_id }}, '{{ $json.unsubscription_reason }}', '{{ $json.unsubscription_description }}', NOW(), NOW())",
        "options": {}
      },
      "id": "2871c0fd-1121-475c-bd15-d14c9f4a8b9a",
      "name": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        640
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "## Descadastro de Voluntárias"
      },
      "id": "7c71fcd7-574a-4dbf-82b3-e0d3d949e7eb",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        720,
        140
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "volunteer-unsubscribe-test",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "c2608960-015e-4971-b93d-dfb5495a0b12",
      "name": "Voluntária deseja se descadastrar",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        720,
        340
      ],
      "webhookId": "b540b2fd-8c69-4b91-be68-dd44229eb4f7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "content": "## Atualizações do pedido de acolhimento",
        "height": 125.37595776585795,
        "width": 340.2325169896819
      },
      "id": "8c3cddb6-d721-4af8-8657-d489e7413d2d",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        460,
        2680
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = '{{ $json.new_status }}', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, '{{ $json.new_status }}', NOW());",
        "options": {}
      },
      "id": "74d3c9cf-3e6d-4615-a59c-d32357daebb1",
      "name": "Atualiza status do match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2380,
        2600
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  match_id,\n  support_request_id,\n  support_type,\n  msr_id,\n  volunteer_id,\n  first_name AS volunteer_first_name,\n  zendesk_user_id AS volunteer_zendesk_user_id,\n  email AS volunteer_email,\n  msr_zendesk_ticket_id,\n  volunteer_zendesk_ticket_id,\n  status AS current_status,\n  '{{ $json.match_status }}' AS new_status\nFROM match.matches\nLEFT JOIN volunteers ON id = volunteer_id\nWHERE match_id = {{ $json.match_id }}",
        "options": {}
      },
      "id": "59a4503e-a914-4481-af47-7a605dea6c63",
      "name": "Busca match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1020,
        2840
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dd3678ee-3ca4-4887-8696-ed25abe79551",
              "leftValue": "={{ $json.match_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "23dd87e1-8e09-4c7b-9d72-53f46426f4c2",
      "name": "Encontrou o match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1220,
        2840
      ]
    },
    {
      "parameters": {
        "errorMessage": "match não encontrado"
      },
      "id": "7d9a29ae-8cf7-41d0-8026-5cf760e961f8",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1500,
        3020
      ]
    },
    {
      "parameters": {},
      "id": "8ac9b48c-6fd3-45ba-92d9-693f017c29cd",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1920,
        3040
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "Fomos informadas pelo formulário que o atendimento foi iniciado.",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento",
            "instrumental_triagem_1",
            "triagem-1-enviado"
          ]
        }
      },
      "id": "e12be172-1670-4ddf-9f19-2247e25cb432",
      "name": "ticket Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3060,
        2260
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "Fomos informadas pelo formulário que o atendimento foi iniciado.",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento"
          ]
        }
      },
      "id": "ddf1aac7-6d3b-4853-8d62-d227accee956",
      "name": "ticket MSR - atendimento iniciado2",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3060,
        2060
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clve8mcba01ehw7t4j7z3pswx\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "28a44a3f-3224-4907-9dab-aa5ba5f08c53",
      "name": "email MSR - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3360,
        2260
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"{{ $json.transactional_id }}\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "34f9f099-ba7f-47dc-a71a-01ca673fbc23",
      "name": "email Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3620,
        2500
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n\n  const supportType = item.json.support_type;\n  const transactionalId = supportType === 'legal' ? 'clve91yrh006zn5kbfmaeabcv' : 'clve9g19d00h2lk7s7uh7510h';\n\n  item.json.transactional_id = transactionalId;\n\n}\n\nreturn $input.all();"
      },
      "id": "a94ec2ae-a62b-49cb-9000-a743b51bab82",
      "name": "Obtém o transactionaId da Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3360,
        2500
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "Fomos informadas pelo formulário que o encaminhamento foi interrompido",
          "status": "open",
          "tags": [
            "atualizar-data-encaminhamento"
          ]
        }
      },
      "id": "ce18f3d1-31c9-476b-af40-3caa7eb19f11",
      "name": "ticket MSR - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3060,
        3040
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"clvh3x98300621fpkx8is5zyj\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_email\": \"{{ $json.volunteer_email }}\"\n  }\n}",
        "options": {}
      },
      "id": "2f16a772-33e9-4e9d-b3f9-089d6003613e",
      "name": "email Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3620,
        3780
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {},
      "id": "40fe11fe-58a4-4acb-a44d-e10c84be22da",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3320,
        3040
      ],
      "webhookId": "81756717-b55e-4931-8c96-cdb8b400e111"
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_recebida"
              }
            ]
          },
          "internalNote": "MSR está aguardando um novo match",
          "status": "open",
          "tags": [
            "nova-voluntaria-sem-prioridade"
          ]
        }
      },
      "id": "75dc78d8-3a5a-4bda-811c-d8b05c000592",
      "name": "ticket MSR - solicitação recebida",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3600,
        2880
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvjzaan500moauwib4clwqah\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "681b889b-54d8-4a35-9f5b-26d6cc2e5450",
      "name": "email MSR - nova voluntária sem prioridade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3620,
        3540
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    {{ $json.volunteer_id }} AS volunteer_id,\n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    '{{ $json.support_type }}' AS support_type\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "a70a840a-fe9d-43f1-a446-cf34c8193d44",
      "name": "Busca infos da MSR e da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3080,
        3540
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    '{{ $json.support_type }}' AS support_type\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "e1ef6e55-d71b-46b4-9649-060f0c2213d9",
      "name": "Busca infos da MSR e da Voluntária1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3060,
        2500
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "indisponível_agenda"
              }
            ]
          }
        }
      },
      "id": "494d8ecf-c859-4dd9-a8da-d81ff406acb4",
      "name": "Status da Mulher = Indisponivel - Agenda",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3620,
        4080
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'indisponível_agenda', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'indisponível_agenda', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = FALSE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "dc2571ba-1116-4141-aced-4071713c9176",
      "name": "Atualiza status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3620,
        4280
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'open', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'open', NOW());",
        "options": {}
      },
      "id": "33672c24-0a92-4b16-8e15-6dbdfff5afdd",
      "name": "Atualiza support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3820,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfunction getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getMatchStatus(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n\n  const matchStatusLookUp = {\n    \"Já iniciamos o atendimento\": \"in_contact\",\n    \"A voluntária não me respondeu\": \"waiting_contact\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"interrupted_before_support\",\n    \"Não conseguirei atendê-la\": \"interrupted_before_support\"\n  }\n  \n  const matchStatusText = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return matchStatusLookUp[matchStatusText]\n}\n\nfunction getShouldDoSomething(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n\n  const matchStatusText = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return matchStatusText === \"Ela não entrou em contato comigo\" ? false : true\n}\n\nfor (const item of $input.all()) {\n  \n  const matchId = getHiddenFieldValue(item, 'match_id');\n  const matchStatus = getMatchStatus(item);\n  const shouldDoSomething = getShouldDoSomething(item);\n  \n  output.push(\n    {\n      \"match_id\": matchId,\n      \"match_status\": matchStatus,\n      \"should_do_something\": shouldDoSomething,\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "e09ebbee-0b8e-49d7-8b08-eda480bb1add",
      "name": "Filtra apenas as infos que importam1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        2860
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "24c712a9-5da0-47cf-85ab-3b8d6795bb22",
              "leftValue": "={{ $json.current_status }}",
              "rightValue": "=waiting_contact",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "83c83996-66ab-4b9b-bfd9-3240327cf82a",
      "name": "O status atual é waiting_contact?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1500,
        2820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "592e5ea7-2949-4db7-b42a-039ded0fd25c",
              "leftValue": "={{ $json.new_status }}",
              "rightValue": "waiting_contact",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "d92e4ba5-075e-4e6e-80f7-95f10cc79bc4",
      "name": "Devemos atualizar o status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1960,
        2800
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.new_status }}",
                    "rightValue": "in_contact",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4f3fd665-2742-4831-b7d0-d005e78b34e5",
                    "leftValue": "={{ $json.new_status }}",
                    "rightValue": "interrupted_before_support",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "encaminhamento interrompido"
            }
          ]
        },
        "options": {}
      },
      "id": "15e5f1bc-f79c-4ca0-9486-875e8d70c8cc",
      "name": "Qual o novo status?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2660,
        2780
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvldhxm001hy7b5dbbi8oprs\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "38666c3f-db1e-4c55-920e-40dde4ea3245",
      "name": "email MSR - Voluntária não respondeu",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2500,
        3340
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    {{ $json.msr_zendesk_ticket_id }} AS msr_zendesk_ticket_id,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "f2b65201-17c7-4948-9453-cddd86fe8f53",
      "name": "Busca infos da MSR e da Voluntária2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2280,
        3180
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  support_request_id\nFROM match.matches\nWHERE msr_zendesk_ticket_id = {{ $json.id }}",
        "options": {}
      },
      "id": "679d1d67-dbaf-4172-9278-693bbbf6891e",
      "name": "Busca support_request_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3600,
        3080
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "Fomos informadas pelo formulário que o encaminhamento foi interrompido",
          "status": "pending"
        }
      },
      "id": "86f6040f-32f9-4801-bfff-0d0dd23046a0",
      "name": "ticket Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3060,
        3280
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "jsonParameters": true,
        "updateFieldsJson": "={\n  \"status\": \"open\",\n  \"comment\": {\n    \"public\": true,\n    \"author_id\": 377511446392,\n    \"body\": \"Olá, {{ $json.volunteer_first_name }}! Como você está?!\\n\\nHá um tempo atrás enviamos o seu contato para **{{ $json.msr_first_name}}** e fomos informadas que a mesma está com dificuldade de contatá-la.\\n\\nDiante disso, estamos entrando em contato para saber se está tudo bem? Você se encontra com algum problema tecnológico? **Caso tenha alterado seus dados de contato, é imprescindível que nos mantenha informadas.**\\n\\nPedimos que nos informe se você continua disponível para o atendimento e se segue conosco no projeto. A não resposta deste e-mail será compreendida pela equipe como inatividade e seu cadastro será suspenso.\\n\\nLembramos que as acolhidas são orientadas a entrar em contato via WhatsApp (mensagem de texto ou voz) e também por meio de ligação telefônica. Esteja atenta a essas formas de contato!\\n\\nÉ muito importante contar com a sua participação na nossa rede de voluntárias, obrigada por poder contar com você <3\\n\\nAbraços,\\nEquipe do Mapa do Acolhimento\"\n  }\n}"
      },
      "id": "f24199fc-0350-4f99-8e77-48c8766451f8",
      "name": "ticket Voluntária - Voluntária não respondeu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        3120
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    zendesk_user_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, zendesk_user_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "56acc307-f401-4e1b-b948-83a38bb79c42",
      "name": "Busca current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3620,
        4500
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "5b43e0e9-dadb-4f25-b570-795895cbe151",
      "name": "Deve atualizar o current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3840,
        4500
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "6fc00203-8ba2-4484-963c-4f0321cbf9ae",
      "name": "Atualiza current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4080,
        4480
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b457790-b9c4-40ad-87fd-f5999ca42211",
              "leftValue": "={{ $json.should_do_something }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "58057d21-8ef8-41a9-9d97-06cb47b1527f",
      "name": "Deve seguir?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        800,
        2860
      ]
    },
    {
      "parameters": {},
      "id": "3aab1ef2-6748-4655-9062-e4f2dd4b328d",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1020,
        3040
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "MSR informou pelo formulário que a Voluntária não a respondeu"
        }
      },
      "id": "6ec1cc8b-5248-48a3-86b7-55e54c95f65b",
      "name": "ticket MSR - observação interna",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        3560
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "volunteer-update-match-status",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "283bcc68-e426-49c4-a7d9-c5c8ebe9e1f8",
      "name": "MSR ou Voluntária preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        440,
        2860
      ],
      "webhookId": "2833ff82-a447-4f31-bfc4-1425f4d0f906",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "MSR informou pelo formulário que a Voluntária não a respondeu"
        }
      },
      "id": "81d57be1-6a3d-487a-b251-b21a7d72ab86",
      "name": "ticket Voluntária - observação interna",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        2920
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    }
  ],
  "pinData": {
    "MSR ou Voluntária preencheu o formulário": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1245",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, compress, deflate, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "content-type": "application/json",
            "x-forwarded-for": "35.203.251.14",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-78bdf4fd45-l2mw9",
            "x-real-ip": "35.203.251.14"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "23e5dcd3-cc75-47c0-bc95-3b58c5efcbc3",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2024-05-16T19:53:38.549Z",
            "data": {
              "responseId": "rJJWBR",
              "submissionId": "rJJWBR",
              "respondentId": "WP8k0a",
              "formId": "nrlEq5",
              "formName": "[VOLUNTÁRIA] Atualização de Status do Acolhimento",
              "createdAt": "2024-05-16T19:53:38.000Z",
              "fields": [
                {
                  "key": "question_8NR1VO_2eb88c30-c647-4421-9097-f08e5fe4ef98",
                  "label": "msr_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Camila"
                },
                {
                  "key": "question_8NR1VO_cd56fcce-ed5b-4c88-9d56-19831b1a25bb",
                  "label": "match_id",
                  "type": "HIDDEN_FIELDS",
                  "value": "66439"
                },
                {
                  "key": "question_8NR1VO_00bd48b6-575a-4139-8852-73a6733b9e1d",
                  "label": "volunteer_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Maria"
                },
                {
                  "key": "question_8NR1VO_af44ba31-1498-4665-9598-4fe7cdb154cd",
                  "label": "match_status",
                  "type": "HIDDEN_FIELDS",
                  "value": "Já iniciamos o atendimento"
                },
                {
                  "key": "question_0VDQzN",
                  "label": "match_status",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "test"
                  ],
                  "options": [
                    {
                      "id": "ae177a2c-3e4b-4527-a563-c6c0a5d05a16",
                      "text": "Já iniciamos o atendimento"
                    },
                    {
                      "id": "8c2f62de-f622-4590-934f-61eb9fc15a20",
                      "text": "Não conseguirei atendê-la"
                    },
                    {
                      "id": "a449c23a-5301-4ff8-ad79-c28078161f1c",
                      "text": "Ela não entrou em contato comigo"
                    },
                    {
                      "id": "test",
                      "text": "A voluntária não me respondeu"
                    }
                  ]
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/volunteer-update-match-status",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 2,
  "updatedAt": "2024-05-22T17:02:27.000Z",
  "versionId": "749b035a-e598-489d-af91-754ac0586c66"
}