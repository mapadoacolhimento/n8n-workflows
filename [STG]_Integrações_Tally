{
  "active": false,
  "connections": {
    "Possui match?": {
      "main": [
        [
          {
            "node": "Envia e-mail pedindo que ela entre em contato",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Descadastra a voluntária no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da voluntária no Zendesk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Envia e-mail confirmando o descadastro",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca voluntária no BD": {
      "main": [
        [
          {
            "node": "Possui match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam": {
      "main": [
        [
          {
            "node": "Busca voluntária no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o match?": {
      "main": [
        [
          {
            "node": "O status atual é waiting_contact?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém o transactionaId da Voluntária": {
      "main": [
        [
          {
            "node": "email Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O status atual é waiting_contact?": {
      "main": [
        [
          {
            "node": "Comentário interno ticket MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Comentário interno ticket Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Ações da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define ações do match",
            "type": "main",
            "index": 0
          },
          {
            "node": "Define ações do support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária2": {
      "main": [
        [
          {
            "node": "email MSR - Voluntária não respondeu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voluntária deseja se descadastrar": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o current_matches?": {
      "main": [
        [
          {
            "node": "Atualiza current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Deve atualizar o status da voluntária?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR jurídico": {
      "main": [
        [
          {
            "node": "ainda quer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR psicológico": {
      "main": [
        [
          {
            "node": "ainda quer1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Verifica se precisa de atendimento e qual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer1": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match4": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed8": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam2": {
      "main": [
        [
          {
            "node": "Busca support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quer continuar na fila?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o ticket no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou a MSR?": {
      "main": [
        [
          {
            "node": "Envia e-mail de Encaminhamento para Serviço Público",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request": {
      "main": [
        [
          {
            "node": "Encontrou o support_request?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o support_request?": {
      "main": [
        [
          {
            "node": "Quer continuar na fila?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca MSR": {
      "main": [
        [
          {
            "node": "Encontrou a MSR?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR preencheu o formulário": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém os dados": {
      "main": [
        [
          {
            "node": "Busca infos no banco de dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR ou Voluntária preencheu o formulário": {
      "main": [
        [
          {
            "node": "Obtém os dados",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos no banco de dados": {
      "main": [
        [
          {
            "node": "Encontrou o match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações do match": {
      "main": [
        [
          {
            "node": "match status = in_contact",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "match status = interrupted_before_support1",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca current_matches e status da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações do support_request": {
      "main": [
        [
          {
            "node": "ticket MSR - aguardando match sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "support_request status = waiting_for_match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "support_request status = waived",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - MSR desistiu do atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca current_matches e status da Voluntária": {
      "main": [
        [
          {
            "node": "Deve atualizar o current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o status da voluntária?": {
      "main": [
        [
          {
            "node": "condition = disponivel",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status da Mulher = Disponivel",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ações da Voluntária": {
      "main": [
        [
          {
            "node": "Status da Mulher = Indisponivel - Agenda",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da Voluntária",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define ações do match": {
      "main": [
        [
          {
            "node": "Ações do match",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Define ações do support_request": {
      "main": [
        [
          {
            "node": "Ações do support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-28T19:50:27.710Z",
  "id": "ggcP3CaiYkl8FxUH",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[STG] Integrações Tally",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "8c295d83-7a45-4d59-b875-8756f37f49da",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "af01294b-4e98-4a13-82a7-196c1f9413f2",
      "name": "Possui match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        -560
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers \nSET condition = 'descadastrada', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }};\n\nINSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'descadastrada', NOW());\n\nUPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "750b4d1a-d538-4bea-baaa-2f92024375b9",
      "name": "Descadastra a voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        -480
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id AS volunteer_id,\n  email,\n  first_name,\n  phone,\n  zendesk_user_id,\n  COALESCE(current_matches, 0) AS current_matches,\n  '{{ $json.unsubscription_reason }}' AS unsubscription_reason,\n  '{{ $json.unsubscription_description }}' AS unsubscription_description\nFROM volunteers\nLEFT JOIN volunteer_availability ON id = volunteer_id\nWHERE email = LOWER('{{ $json.email }}')",
        "options": {}
      },
      "id": "e3463c98-cc1e-46d5-98f9-94d86c393cad",
      "name": "Busca voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1160,
        -560
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "descadastrada"
              }
            ]
          }
        }
      },
      "id": "cd90832a-de15-4982-8825-3b48c9e0d0d4",
      "name": "Atualiza status da voluntária no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        160
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8sn93v003e145jlfb9gf67\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "4b1ed303-22e9-4070-a4e4-d892c4fc3b72",
      "name": "Envia e-mail pedindo que ela entre em contato",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2120,
        -800
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8up5lj0005iyhgjmq7qtqi\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "827ca07c-932d-4191-b346-4a4f33bfdef5",
      "name": "Envia e-mail confirmando o descadastro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        -60
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C06R9JPDEQN",
          "mode": "list",
          "cachedResultName": "alertas-tech-provisao"
        },
        "text": "=:no_entry_sign: Voluntária Descadastrada automaticamente pelo formulário de descadastro :no_entry_sign:\n\nvolunteer_id: {{ $json.volunteer_id }}\nemail: {{ $json.email }}\ntelefone: {{ $json.phone }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "id": "f59d0a19-eb57-4b60-89f5-fd2bcd8491bc",
      "name": "Avisa o time de provisão de serviços",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        2100,
        380
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "01G85hUbLT4VlY92",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_unsubscriptions (volunteer_id, unsubscription_reason, unsubscription_description, created_at, updated_at)\nVALUES ({{ $json.volunteer_id }}, '{{ $json.unsubscription_reason }}', '{{ $json.unsubscription_description }}', NOW(), NOW())",
        "options": {}
      },
      "id": "fbbfeaf2-7fa2-47fa-928f-bce2cd538796",
      "name": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        -260
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfor (const item of $input.all()) {\n  const volunteerEmail = item.json.body.data.fields[1].value;\n  const unsubscriptionReasonValue = item.json.body.data.fields[2].value;\n\n  const unsubscriptionReasonLabel = item.json.body.data.fields[2].options.find((element) => element.id == unsubscriptionReasonValue).text;\n\n  const unsubscriptionDescription = item.json.body.data.fields[3].value;\n  \n  output.push(\n    {\n      \"email\": volunteerEmail,\n      \"unsubscription_reason\": unsubscriptionReasonLabel,\n      \"unsubscription_description\": unsubscriptionDescription\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "ec7886a8-6366-4b15-af3e-f24f20bf8dcd",
      "name": "Filtra apenas as infos que importam",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        -560
      ]
    },
    {
      "parameters": {
        "content": "## Atualizações do pedido de acolhimento",
        "height": 125.37595776585795,
        "width": 340.2325169896819
      },
      "id": "69ef25a3-d5a2-4f2e-a0f3-5996b5059c9e",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        2460
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "dd3678ee-3ca4-4887-8696-ed25abe79551",
              "leftValue": "={{ $json.match_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "20162e96-679a-4885-bbd6-42e51188a8fa",
      "name": "Encontrou o match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        920,
        2640
      ]
    },
    {
      "parameters": {
        "errorMessage": "match não encontrado"
      },
      "id": "7f6f215c-9f0b-479d-a591-ae4023dbb0bf",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1160,
        2980
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento",
            "instrumental_triagem_1",
            "triagem-1-enviado"
          ]
        }
      },
      "id": "8718ddc4-eb20-40d1-800f-d1ff07da81a7",
      "name": "ticket Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        1520
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clve8mcba01ehw7t4j7z3pswx\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\"  \n  }\n}",
        "options": {}
      },
      "id": "9c5a91e0-ea05-4be5-85af-6d0c174d49a9",
      "name": "email MSR - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4120,
        1740
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"{{ $json.transactional_id }}\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "baa45c38-8bb3-4939-923b-4cd2f08bb260",
      "name": "email Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4320,
        1940
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n\n  const supportType = item.json.support_type;\n  const transactionalId = supportType === 'legal' ? 'clve91yrh006zn5kbfmaeabcv' : 'clve9g19d00h2lk7s7uh7510h';\n\n  item.json.transactional_id = transactionalId;\n\n}\n\nreturn $input.all();"
      },
      "id": "30b77852-803c-4e07-9947-136d3891ece8",
      "name": "Obtém o transactionaId da Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4140,
        1940
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "status": "open",
          "tags": [
            "atualizar-data-encaminhamento"
          ]
        }
      },
      "id": "e9f8a5f3-bcbb-42f6-905c-8a7f14a02990",
      "name": "ticket MSR - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        2040
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"clvh3x98300621fpkx8is5zyj\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_email\": \"{{ $json.volunteer_email }}\"\n  }\n}",
        "options": {}
      },
      "id": "129e8ef5-d100-49bb-b3c3-73415a58e7cc",
      "name": "email Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3520,
        2940
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvjzaan500moauwib4clwqah\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\"\n  }\n}",
        "options": {}
      },
      "id": "91a60fc1-bc50-482f-9721-60a4313a32b2",
      "name": "email MSR - nova voluntária sem prioridade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4140,
        2920
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "indisponível_agenda"
              }
            ]
          }
        }
      },
      "id": "d606cee8-6226-4c23-9aa4-5f940aaaaf3c",
      "name": "Status da Mulher = Indisponivel - Agenda",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2360,
        3740
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'indisponível_agenda', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'indisponível_agenda', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = FALSE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "ad6b12df-c72d-4220-8034-7d06a84966d8",
      "name": "Atualiza status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2360,
        3940
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "24c712a9-5da0-47cf-85ab-3b8d6795bb22",
              "leftValue": "={{ $json.current_status }}",
              "rightValue": "=waiting_contact",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "fa130669-2026-467e-8e62-f5f09599cfee",
      "name": "O status atual é waiting_contact?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1160,
        2620
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvldhxm001hy7b5dbbi8oprs\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_type\": \"{{ $json.volunteer_type }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "7a420599-331c-4924-83e9-b13783bdee40",
      "name": "email MSR - Voluntária não respondeu",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        940,
        3820
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    first_name AS msr_first_name,\n    {{ $json.msr_zendesk_ticket_id }} AS msr_zendesk_ticket_id,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    INITCAP('{{ $json.volunteer_first_name }}') AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type,\n    '{{ $json.match_created_at }}' AS match_created_at,\n    '{{ $json.form_answer }}' AS form_answer,\n  CASE WHEN '{{ $json.support_type }}' = 'legal' THEN 'advogada' ELSE 'psicóloga' END AS volunteer_type\nFROM pii_sec.msr_pii\nWHERE msr_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "6c84fb32-14d2-4aff-839c-717102fc42a8",
      "name": "Busca infos da MSR e da Voluntária2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        680,
        3700
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "status": "pending"
        }
      },
      "id": "e65e099e-c341-4440-89d4-f579803d2b45",
      "name": "ticket Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        2220
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Descadastro de Voluntárias"
      },
      "id": "48b575a3-91ed-4a00-ae8f-7e5e40862401",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        -780
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ef3ac981-2f20-467f-9012-e6ff37330fa0",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "9b1c4c4d-7bc0-47e5-aaa3-8afa07987fdb",
      "name": "Voluntária deseja se descadastrar",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        720,
        -560
      ],
      "webhookId": "ef3ac981-2f20-467f-9012-e6ff37330fa0",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "jsonParameters": true,
        "updateFieldsJson": "={\n  \"status\": \"open\",\n  \"comment\": {\n    \"public\": true,\n    \"author_id\": 377511446392,\n    \"body\": \"Olá, {{ $json.volunteer_first_name }}! Como você está?!\\n\\nHá um tempo atrás enviamos o seu contato para **{{ $json.msr_first_name}}** e fomos informadas que a mesma está com dificuldade de contatá-la.\\n\\nDiante disso, estamos entrando em contato para saber se está tudo bem? Você se encontra com algum problema tecnológico? **Caso tenha alterado seus dados de contato, é imprescindível que nos mantenha informadas.**\\n\\nPedimos que nos informe se você continua disponível para o atendimento e se segue conosco no projeto. A não resposta deste e-mail será compreendida pela equipe como inatividade e seu cadastro será suspenso.\\n\\nLembramos que as acolhidas são orientadas a entrar em contato via WhatsApp (mensagem de texto ou voz) e também por meio de ligação telefônica. Esteja atenta a essas formas de contato!\\n\\nÉ muito importante contar com a sua participação na nossa rede de voluntárias, obrigada por poder contar com você <3\\n\\nAbraços,\\nEquipe do Mapa do Acolhimento\"\n  }\n}"
      },
      "id": "9a93ef20-4d07-4d60-88cc-17a6e4df2607",
      "name": "ticket Voluntária - Voluntária não respondeu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        940,
        3600
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "31553c53-7911-4c59-8da5-aae46e88dfac",
      "name": "Deve atualizar o current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2720,
        2420
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "49ca0869-ca69-4dfd-9915-87a868e160ee",
      "name": "Atualiza current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2980,
        2220
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR está na fila do Match Diário",
          "status": "open",
          "tags": [
            "nova-voluntaria-sem-prioridade"
          ]
        }
      },
      "id": "54a7a96f-e131-4629-8316-72df3d15010c",
      "name": "ticket MSR - aguardando match sem prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2360,
        2980
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const body = items[0].json.body;\n// TODO: buscar support_request_id;\nconst fields = body.data.fields;\n\nlet legalSupportRequest = null;\nlet psychologicalSupportRequest = null;\nlet legalSupportResponseText = '';\nlet psychologicalSupportResponseText = '';\nlet supportRequestId = items[0].json.support_request_id;\nlet psychological_support_request_id = items[0].json.body.data.fields[1].value;\nlet legal_support_request_id = items[0].json.body.data.fields[2].value;\n\n\nfields.forEach(field => {\n  if (field.label === 'legal_support_request' && field.value) {\n    legalSupportRequest = field.value[0];\n    const legalSupportOptions = field.options;\n    const legalSupportOption = legalSupportOptions.find(option => option.id === legalSupportRequest);\n    if (legalSupportOption) {\n      legalSupportResponseText = legalSupportOption.text;\n    }\n  }\n  if (field.label === 'psychological_support_request' && field.value) {\n    psychologicalSupportRequest = field.value[0];\n    const psychologicalSupportOptions = field.options;\n    const psychologicalSupportOption = psychologicalSupportOptions.find(option => option.id === psychologicalSupportRequest);\n    if (psychologicalSupportOption) {\n      psychologicalSupportResponseText = psychologicalSupportOption.text;\n    }\n  }\n});\n\nreturn [\n  {\n    json: {\n      legal_support_request_id,\n      psychological_support_request_id,\n      legalSupportRequest,\n      legalSupportResponseText,\n      psychologicalSupportRequest,\n      psychologicalSupportResponseText,\n      supportRequestId,\n    },\n  },\n];\n"
      },
      "id": "1d0316d2-42de-4cde-8f00-8a4c83f939a9",
      "name": "Verifica se precisa de atendimento e qual",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        6780
      ]
    },
    {
      "parameters": {
        "content": "## Verifica quais MSRs de 2022/2021 irão para fila do Match Diário\n",
        "height": 124.36523996505218,
        "width": 340.2325169896819
      },
      "id": "c8429f84-7e4e-418f-9d15-04867c1e86a8",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1020,
        6540
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas juridico",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "850dcd4f-752c-48df-985c-71ab07e09edd",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7400
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um juridico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "3577603e-27d4-4ee2-b869-c38b4cddf6f9",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7100
      ]
    },
    {
      "parameters": {
        "content": "\n\nCasos de testes",
        "height": 80,
        "width": 340.2325169896819,
        "color": 6
      },
      "id": "dfaa97c6-b199-4b14-bf9d-f6e0dd86ee52",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        6980
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas psi",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "61a8634c-1808-49af-84bf-9c909cbe1082",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7500
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer nenhum",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "dbf4f8a3-8513-4b2c-bc7c-ff2aa7f78ff5",
      "name": "Sticky Note36",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.legal_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "23012c16-276a-4119-b389-64d891362f84",
      "name": "Tem SR jurídico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1460,
        6680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.psychological_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "23e6c5da-b2cc-4ee6-8ab7-4dcc70a69bf5",
      "name": "Tem SR psicológico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1480,
        6980
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "95d8a450-7360-4866-8d4f-6059a5b833a5",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "0f1b3493-29dc-44c0-b43f-06d8b15197ae",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        1040,
        6780
      ],
      "webhookId": "95d8a450-7360-4866-8d4f-6059a5b833a5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.legalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "84814db3-5978-4bd6-aea2-f498c8e08be3",
      "name": "ainda quer",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1700,
        6520
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.psychologicalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "8600e6b5-bc1f-48de-910b-4e1e75473877",
      "name": "ainda quer1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1720,
        6940
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.legal_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.legal_support_request_id}};\n\n",
        "options": {}
      },
      "id": "29d982dd-7f1d-48f5-91c6-6f4b21aed03c",
      "name": "Atualiza status para waiting_for_match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2060,
        6360
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "2e29d748-cb40-4c22-97d4-d4e3be035e52",
      "name": "status: Aguardando Match: Sem Prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2240,
        6360
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\nUPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.psychological_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.psychological_support_request_id}};\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "c5be3cfd-a3b9-4c09-9197-078d9a24cdf1",
      "name": "Atualiza status para waiting_for_match4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2060,
        6920
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "ab5d5989-f47d-4ba4-b6c4-f7c920a27bbc",
      "name": "status: Aguardando Match: Sem Prioridade4",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2260,
        6920
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento psicológico",
          "status": "solved"
        }
      },
      "id": "5db2e4e1-d4cc-4000-8664-87582f914a93",
      "name": "Atualizar ticket para solicitação encerrada",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2260,
        7140
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "85326765-b792-4587-a801-05190b87374d",
      "name": "Atualiza support_request para closed",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2080,
        7140
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento jurídico",
          "status": "solved"
        }
      },
      "id": "ece0926a-1aaf-4e89-88a3-8c6dc62a80e2",
      "name": "Atualizar ticket para solicitação encerrada8",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2260,
        6560
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "8576b308-34b6-418e-9bbc-4a382fb1531b",
      "name": "Atualiza support_request para closed8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2060,
        6560
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "\nPsicológico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "53d4cdb6-52dc-4760-8f2e-ada5295e02ff",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2600,
        7060
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um psicológico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "b2c028a9-ae78-4f4d-a1bd-3d8f2a513ee9",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7200
      ]
    },
    {
      "parameters": {},
      "id": "1499aa21-2410-4c05-b890-5fed17e713be",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        6700
      ]
    },
    {
      "parameters": {},
      "id": "2f145312-b1b7-4230-b010-89827f72f69e",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1740,
        7200
      ]
    },
    {
      "parameters": {
        "content": "\nJurídico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "800eff0e-abe8-4b7a-ad07-26a98d4bf719",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2580,
        6460
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer os dois",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "0ac7e0c2-d919-4b2e-9b76-85f2a2c2d8e8",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        7300
      ]
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "disponivel"
              }
            ]
          }
        }
      },
      "id": "3ddd217f-e5b6-4f2b-bb9d-96ec4262252e",
      "name": "Status da Mulher = Disponivel",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3260,
        2380
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfunction getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getContinueInQueue(item){\n  const continueInQueueField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'continue_in_queue'\n  );\n\n  if(!continueInQueueField.value) return null\n  \n  const continueInQueueText = continueInQueueField.options.find(\n    (element) => element.id == continueInQueueField.value\n  ).text;\n\n  const shouldContinueInQueue = continueInQueueText === \"Não, prefiro não seguir com o atendimento\" ? false : true\n\n  return shouldContinueInQueue\n}\n\nfor (const item of $input.all()) {\n  \n  const supportResquestId = getHiddenFieldValue(item, 'support_request_id');\n  const shouldContinueInQueue = getContinueInQueue(item);\n  \n  output.push(\n    {\n      \"support_request_id\": supportResquestId,\n      \"should_continue_in_queue\": shouldContinueInQueue,\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "1b70a0dd-0123-49c2-a24e-4e20ce6e8dd2",
      "name": "Filtra apenas as infos que importam2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1220,
        8500
      ]
    },
    {
      "parameters": {
        "content": "## Formulário para MSRs indicarem se querem continuar na fila",
        "width": 415.2146730852694
      },
      "id": "6573ac7c-4014-4423-b424-2ee7420b0c94",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        980,
        8280
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "e6b63e14-7e39-444b-a44a-68a042efa1a8",
              "leftValue": "={{ $json.should_continue_in_queue }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "73cd413c-6428-468c-88ef-568d1fafbb5a",
      "name": "Quer continuar na fila?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1860,
        8480
      ]
    },
    {
      "parameters": {},
      "id": "7fea6729-01c7-4403-a9f5-19b48733f619",
      "name": "No Operation, do nothing6",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2180,
        8220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0f96e552-d3ed-48e2-90f3-ed6b021d69ad",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9aaad1f3-e4b0-4350-885f-51dc221b5257",
      "name": "Encontrou a MSR?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2380,
        8500
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  support_request_id,\n  msr_id,\n  zendesk_ticket_id,\n  {{ $json.should_continue_in_queue }} AS should_continue_in_queue\nFROM match.support_requests\nWHERE support_request_id = {{ $json.support_request_id }}",
        "options": {}
      },
      "id": "40e91c57-6125-4b70-adb6-3c8d8d5f3814",
      "name": "Busca support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1440,
        8500
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "f7f74bcf-9b9f-444b-8838-fd09b810b055",
              "leftValue": "={{ $json.support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "27abb139-110a-41d1-ac30-2eb32ed7f3dd",
      "name": "Encontrou o support_request?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1640,
        8500
      ]
    },
    {
      "parameters": {
        "errorMessage": "support_request não encontrado"
      },
      "id": "503c1fbd-e50c-4c71-947f-2d7fbc67d38f",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1860,
        8840
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  first_name,\n  email\nFROM pii_sec.msr_pii\nWHERE msr_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "a2a931d1-00e4-4113-a009-967ee4c3bc08",
      "name": "Busca MSR",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2180,
        8500
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"cm0pd0w0y00xdz6kfjbbd7cfn\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "69f56fcb-f81e-4f66-a700-83c7f0f664c4",
      "name": "Envia e-mail de Encaminhamento para Serviço Público",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2680,
        8480
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'public_service'\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'public_service', NOW())",
        "options": {}
      },
      "id": "4b491101-af5b-4df8-8a66-9f513d8e0996",
      "name": "Atualiza o support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2180,
        8740
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.zendesk_ticket_id }}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__realizado_para_serviço_público"
              }
            ]
          },
          "internalNote": "<strong>Formulário \"Você quer continuar na fila?\"</strong>\n</br>\n</br>\nMSR sinalizou pelo formulário que não quer continuar na fila e foi encaminhada para Serviço Público."
        }
      },
      "id": "79d2237a-68ec-4d25-a522-640933dd445f",
      "name": "Atualiza o ticket no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2180,
        8980
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "MSR não encontrada"
      },
      "id": "39c5773a-0641-440a-bd69-75a46a7f9563",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2680,
        8720
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "e0348de5-2d0c-4827-a705-b52255839c91",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "9a0cee79-4c5a-42af-ba16-24257c152166",
      "name": "MSR preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        1000,
        8500
      ],
      "webhookId": "e0348de5-2d0c-4827-a705-b52255839c91",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getFormAnswer(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n  \n  const formAnswer = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return formAnswer\n}\n\nfunction getsupportRequestAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"fila do match diário\",\n    \"Escolho não seguir com o atendimento\": \"desistência\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"Não conseguirei atendê-la\": \"fila do match diário\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n\n  const supportRequestAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return supportRequestAction\n  \n}\n\nfunction getvolunteerAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"indisponível - agenda\",\n    \"Escolho não seguir com o atendimento\": \"sem ação\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"Não conseguirei atendê-la\": \"indisponível - agenda\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n  \n  const volunteerAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return volunteerAction\n  \n}\n\noutput = []\nfor (const item of $input.all()) {\n  \n  const matchId = getHiddenFieldValue(item, 'match_id');\n  const formAnswer = getFormAnswer(item);\n  const whoAnswered = item.json.body.data.formId === 'nrlEq5' ? 'Voluntária' : 'MSR'\n  const supportRequestAction = getsupportRequestAction(whoAnswered, formAnswer)\n  const volunteerAction = getvolunteerAction(whoAnswered, formAnswer)\n    \n  \n  output.push(\n    {\n      who_answered: whoAnswered,\n      form_answer: formAnswer,\n      match_id: matchId,\n      support_request_action: supportRequestAction,\n      volunteer_action: volunteerAction\n      \n    }\n  )\n}\n\nreturn output;"
      },
      "id": "c67cc924-6fcb-47a8-88cf-2c465bc44522",
      "name": "Obtém os dados",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        560,
        2640
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6d52b3c7-e942-4595-b4b4-4ca0be2fd193",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "3680f946-c1fb-4d4d-bcbc-31d6a8d0b335",
      "name": "MSR ou Voluntária preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        380,
        2640
      ],
      "webhookId": "6d52b3c7-e942-4595-b4b4-4ca0be2fd193",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nA {{ $json.who_answered}} respondeu o formulário: <i>\"{{ $json.form_answer }}\"</i>\n</br>\n</br>\n<strong>Nome da voluntária:</strong> {{ $json.volunteer_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n"
        }
      },
      "id": "c5593d65-3548-4c7e-863e-31e7840c92fb",
      "name": "Comentário interno ticket MSR",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1380,
        1680
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nA {{ $json.who_answered}} respondeu o formulário: <i>\"{{ $json.form_answer }}\"</i>\n</br>\n</br>\n<strong>Nome da MSR:</strong> {{ $json.msr_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>"
        }
      },
      "id": "85886902-ac5b-4f89-ab0d-f6ebcdd5baed",
      "name": "Comentário interno ticket Voluntária",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1380,
        1860
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = 'in_contact', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, 'in_contact', NOW());",
        "options": {}
      },
      "id": "fb3172d6-2284-4b2c-bde7-d4e766450f55",
      "name": "match status = in_contact",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2500,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento"
          ]
        }
      },
      "id": "2ae70d08-172e-4b1b-9bf4-13eb7db78974",
      "name": "ticket MSR - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2500,
        1340
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = 'interrupted_before_support', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, 'interrupted_before_support', NOW());",
        "options": {}
      },
      "id": "4dd83025-cbaa-4647-bb8d-b9be4de021a5",
      "name": "match status = interrupted_before_support1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2500,
        1860
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  '{{ $json.form_answer }}' AS form_answer,\n  '{{ $json.who_answered }}' AS who_answered,\n  '{{ $json.support_request_action }}' AS support_request_action,\n  match_id,\n  status AS current_status,\n  support_request_id,\n  support_type,\n  msr_zendesk_ticket_id,\n  volunteer_zendesk_ticket_id,\n  SUBSTRING(m.created_at::VARCHAR, 0, 11) AS match_created_at,\n  msr_id,\n  p.first_name AS msr_first_name,\n  p.email AS msr_email,\n  volunteer_id,\n  v.first_name AS volunteer_first_name,\n  zendesk_user_id AS volunteer_zendesk_user_id,\n  v.email AS volunteer_email,\n  CASE \n    WHEN support_type = 'legal' THEN 'advogada' \n    ELSE 'psicóloga' \n   END AS volunteer_type\nFROM match.matches m\nLEFT JOIN volunteers v ON id = volunteer_id\nLEFT JOIN pii_sec.msr_pii p USING(msr_id)\nWHERE match_id = {{ $json.match_id }}",
        "options": {}
      },
      "id": "e5dce018-66f2-4cfe-9079-506c13229258",
      "name": "Busca infos no banco de dados",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        740,
        2640
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waiting_for_match', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waiting_for_match', NOW());",
        "options": {}
      },
      "id": "47fa690f-c91a-4812-8ccf-f2c5396d7a35",
      "name": "support_request status = waiting_for_match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2380,
        2780
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "internalNote": "MSR informou pelo formulário que escolhe não seguir com o atendimento",
          "publicReply": "=Olá {{ $json.volunteer_first_name }}​, espero que esteja bem na medida do possível!\n\nEstamos entrando em contato para informar que a acolhida {{ $json.msr_first_name }} encaminhada a você optou, neste momento, por não seguir nos atendimentos com o Mapa.\n\nInfelizmente, não é raro que haja desistência, pois o caminho para romper o ciclo da violência muitas vezes acontece a passos lentos. Esperamos que ela se cadastre novamente em breve ou que já tenha encontrado outra forma de se fortalecer.\n\nDesta forma, estamos liberando esta vaga para outra mulher que está aguardando na fila de pedidos de ajuda. Voltaremos a entrar em contato caso haja outro encaminhamento. Agradecemos pela participação e disponibilidade!\n\nForte abraço,\nEquipe do Mapa do Acolhimento <3",
          "status": "pending"
        }
      },
      "id": "4402e775-aa28-4287-ba2d-41cf21429454",
      "name": "ticket Voluntária - MSR desistiu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        4100,
        2200
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "atendimento iniciado",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8eb67a42-b7ef-4542-9628-0bca31e3db8d",
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "encaminhamento interrompido",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "encaminhamento interrompido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.match_action }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "3b064911-204f-46eb-b44e-c24d510073fa",
      "name": "Ações do match",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2080,
        1860
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "fila do match diário",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "fila do match diário"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8eb67a42-b7ef-4542-9628-0bca31e3db8d",
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "desistência",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "desistência"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.support_request_action }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "49149af2-9ee4-4af7-9d8a-2a10dddc29dd",
      "name": "Ações do support_request",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2020,
        3120
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waived', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waived', NOW());",
        "options": {}
      },
      "id": "26d1d54f-cc39-430f-96d8-02e2f441b878",
      "name": "support_request status = waived",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2360,
        3260
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "status": "pending"
        }
      },
      "id": "d5c555c5-5879-4eb8-ad44-58ca640d6bc7",
      "name": "ticket MSR - MSR desistiu do atendimento",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2360,
        3420
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    zendesk_user_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, zendesk_user_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "95b33579-d124-454d-9eb0-a652f04252c0",
      "name": "Busca current_matches e status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2500,
        2420
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "bcfcd581-16f2-477b-8351-61a218c56805",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "indisponivel_sem_vagas",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "3ef0e89a-2cc6-4fbd-b6fc-8b7dc638dc68",
              "leftValue": "={{ $json.calculated_current_matches }}",
              "rightValue": "={{ $json.max_matches }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e10f1c7c-4edf-4dfa-bf39-a93b282658d0",
      "name": "Deve atualizar o status da voluntária?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2980,
        2400
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "e45a1207-e5da-416c-9937-29eb532fdd90",
      "name": "condition = disponivel",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3260,
        2200
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.volunteer_action }}",
                    "rightValue": "indisponível - agenda",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "indisponível - agenda"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a4d1566b-73f5-4f29-a5c2-35700fbd9ef2",
                    "leftValue": "={{ $json.volunteer_action }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "sem ação"
            }
          ]
        },
        "options": {}
      },
      "id": "960feab9-6624-4ba4-917b-39595d06ffa6",
      "name": "Ações da Voluntária",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2040,
        3840
      ]
    },
    {
      "parameters": {
        "jsCode": "function getMatchAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"encaminhamento interrompido\",\n    \"Escolho não seguir com o atendimento\": \"encaminhamento interrompido\",\n    \"A voluntária não me respondeu\": null,\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"atendimento iniciado\",\n    \"Não conseguirei atendê-la\": \"encaminhamento interrompido\",\n    \"Ela não entrou em contato comigo\": null\n  }\n\n  \n  const matchAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return matchAction\n  \n}\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const matchAction = getMatchAction(whoAnswered, formAsnwer)\n  \n  item.json.match_action = matchAction\n}\n\nreturn $input.all();"
      },
      "id": "9d7f6c30-4910-4b72-a81c-4c91d8bbad59",
      "name": "Define ações do match",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1860,
        1860
      ]
    },
    {
      "parameters": {
        "jsCode": "function getsupportRequestAction(whoAnswered, formAnswer){\n  const msrAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"A voluntária não me respondeu\": \"sem ação\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"fila do match diário\",\n    \"Escolho não seguir com o atendimento\": \"desistência\"\n  }\n\n  const volunteerAnswerLookup = {\n    \"Já iniciamos o atendimento\": \"sem ação\",\n    \"Não conseguirei atendê-la\": \"fila do match diário\",\n    \"Ela não entrou em contato comigo\": \"sem ação\"\n  }\n\n  const supportRequestAction = whoAnswered == 'MSR' ? msrAnswerLookup[formAnswer] : volunteerAnswerLookup[formAnswer]\n\n  return supportRequestAction\n  \n}\n\nfor (const item of $input.all()) {\n  const whoAnswered = item.json.who_answered \n  const formAsnwer = item.json.form_answer \n\n  const matchAction = getMatchAction(whoAnswered, formAsnwer)\n  \n  item.json.match_action = matchAction\n}\n\nreturn $input.all();"
      },
      "id": "2200f0cb-dec7-44bd-adc1-229c9ed969cd",
      "name": "Define ações do support_request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        3120
      ]
    }
  ],
  "pinData": {
    "Voluntária deseja se descadastrar": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1391",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "baggage": "sentry-environment=production,sentry-public_key=6af4b6673f1648edaa8fef3f2ca43405,sentry-trace_id=cab807f1848945cb80cb6f76d704b649",
            "cdn-loop": "cloudflare; loops=1; subreqs=1",
            "cf-connecting-ip": "34.96.41.110",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "8c8daf47064393f1-LHR",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sentry-trace": "cab807f1848945cb80cb6f76d704b649-8ac4992c6fa05af4",
            "x-forwarded-for": "34.96.41.110, 172.70.162.32",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-5d4997895f-4g2dm",
            "x-is-trusted": "yes",
            "x-real-ip": "34.96.41.110"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "3a78e3e9-3a61-4f7e-8b5c-5a420d14a92c",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2024-09-25T20:15:09.817Z",
            "data": {
              "responseId": "6zpdWO",
              "submissionId": "6zpdWO",
              "respondentId": "4Avg75",
              "formId": "w48PJr",
              "formName": "Descadastro de Voluntárias",
              "createdAt": "2024-09-25T20:15:09.000Z",
              "fields": [
                {
                  "key": "question_vX4q98_cdbd7ca0-1bf2-4ae1-8729-509c836c6871",
                  "label": "email",
                  "type": "HIDDEN_FIELDS",
                  "value": ""
                },
                {
                  "key": "question_dbjpDA",
                  "label": "email",
                  "type": "INPUT_TEXT",
                  "value": "Luana.bonassi@hotmail.com"
                },
                {
                  "key": "question_YjYgMd",
                  "label": "unsubscribe_reason",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "19a95c2a-2449-404b-8d16-85eeab76f033"
                  ],
                  "options": [
                    {
                      "id": "19a95c2a-2449-404b-8d16-85eeab76f033",
                      "text": "Estou sem tempo no momento"
                    },
                    {
                      "id": "fd4d1db2-9b8a-4d28-ac30-e1b67e7f147e",
                      "text": "Não me identifico mais com o projeto"
                    },
                    {
                      "id": "5f4284c3-c3dc-4eff-8874-f5a9afbca416",
                      "text": "O voluntariado não atendeu às minhas expectativas"
                    },
                    {
                      "id": "e28829fc-a06f-4ee9-9fbf-fe73c9ed004a",
                      "text": "Nunca recebi um atendimento pelo Mapa do Acolhimento"
                    },
                    {
                      "id": "731d6bee-0f75-4b4e-9e97-d741c4be0543",
                      "text": "Não tive uma boa experiência"
                    },
                    {
                      "id": "f32e8953-37c0-4ce8-bae7-a76c34d22c1d",
                      "text": "Os casos recebidos pelo Mapa do Acolhimento são muito complexos e não me sinto preparada para atendê-los"
                    }
                  ]
                },
                {
                  "key": "question_rDEWxl",
                  "label": "describe_unsubscribe_reason",
                  "type": "TEXTAREA",
                  "value": null
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/volunteer-unsubscribe",
          "executionMode": "production"
        }
      }
    ],
    "MSR ou Voluntária preencheu o formulário": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1516",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "baggage": "sentry-environment=production,sentry-public_key=6af4b6673f1648edaa8fef3f2ca43405,sentry-trace_id=84dedc05f22749df8f3245bc9c2e622b",
            "cdn-loop": "cloudflare; subreqs=1",
            "cf-connecting-ip": "34.96.41.102",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "8b432a5b24406521-LHR",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sentry-trace": "84dedc05f22749df8f3245bc9c2e622b-9a70331e3a3c91f3",
            "x-forwarded-for": "34.96.41.102, 172.69.195.15",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-fb6d78f9-2dzfn",
            "x-is-trusted": "yes",
            "x-real-ip": "34.96.41.102"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "15193db2-c99e-40c6-b3a3-a03c422c6a2d",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2024-08-16T17:32:44.509Z",
            "data": {
              "responseId": "pM9pyy",
              "submissionId": "pM9pyy",
              "respondentId": "OjkjNA",
              "formId": "nPAj6V",
              "formName": "[MSR] Atualização de Status do Acolhimento",
              "createdAt": "2024-08-16T17:32:44.000Z",
              "fields": [
                {
                  "key": "question_ArWrjk_d4ec2659-b661-43e5-8634-f188c7b4c111",
                  "label": "msr_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Elenir"
                },
                {
                  "key": "question_ArWrjk_0b8984ff-7e28-45f0-9ba1-01325248a52a",
                  "label": "match_id",
                  "type": "HIDDEN_FIELDS",
                  "value": "25678"
                },
                {
                  "key": "question_ArWrjk_542a2b93-9104-41a3-a710-a57ed33b4f72",
                  "label": "volunteer_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Marina"
                },
                {
                  "key": "question_ArWrjk_a017cb2c-1570-4d42-a72f-ba870e2f7513",
                  "label": "volunteer_type",
                  "type": "HIDDEN_FIELDS",
                  "value": "advogada"
                },
                {
                  "key": "question_ArWrjk_9be5437b-c620-439e-9985-1b158ed54f26",
                  "label": "match_status",
                  "type": "HIDDEN_FIELDS",
                  "value": "Escolho não seguir com o atendimento"
                },
                {
                  "key": "question_Nq8qaO",
                  "label": "match_status",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "a39aca20-6f0f-4784-82a2-0fa89519673c"
                  ],
                  "options": [
                    {
                      "id": "cd3a850f-8151-4db1-8112-cd98ca95d5e5",
                      "text": "Já iniciamos o atendimento"
                    },
                    {
                      "id": "128e22d9-4812-4f59-a389-568909eac9f6",
                      "text": "A voluntária não me respondeu"
                    },
                    {
                      "id": "132e2d65-6135-4d0c-8f8e-a79b77ec0f07",
                      "text": "A voluntária me respondeu, mas não está disponível para me atender"
                    },
                    {
                      "id": "a39aca20-6f0f-4784-82a2-0fa89519673c",
                      "text": "Escolho não seguir com o atendimento"
                    }
                  ]
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/volunteer-update-match-status",
          "executionMode": "production"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "shared": [
    {
      "createdAt": "2025-01-28T19:50:27.715Z",
      "updatedAt": "2025-01-28T19:50:27.715Z",
      "role": "workflow:owner",
      "workflowId": "ggcP3CaiYkl8FxUH",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "role": "project:personalOwner",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2024-12-10T20:48:45.029Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996,
                "npsSurvey": {
                  "responded": true,
                  "lastShownAt": 1733863720858
                }
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": true
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 4,
  "updatedAt": "2025-01-28T21:52:05.000Z",
  "versionId": "10510e27-5819-4a57-9da3-bacbdd0f5cc5"
}