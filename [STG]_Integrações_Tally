{
  "active": false,
  "connections": {
    "Possui match?": {
      "main": [
        [
          {
            "node": "Envia e-mail pedindo que ela entre em contato",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Descadastra a voluntária no BD",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da voluntária no Zendesk",
            "type": "main",
            "index": 0
          },
          {
            "node": "Envia e-mail confirmando o descadastro",
            "type": "main",
            "index": 0
          },
          {
            "node": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca voluntária no BD": {
      "main": [
        [
          {
            "node": "Possui match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam": {
      "main": [
        [
          {
            "node": "Busca voluntária no BD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca match": {
      "main": [
        [
          {
            "node": "Encontrou o match?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o match?": {
      "main": [
        [
          {
            "node": "O status atual é waiting_contact?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Obtém o transactionaId da Voluntária": {
      "main": [
        [
          {
            "node": "email Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ticket MSR - encaminhamento interrompido": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "ticket MSR - aguardando match sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca support_request_id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária": {
      "main": [
        [
          {
            "node": "email MSR - nova voluntária sem prioridade",
            "type": "main",
            "index": 0
          },
          {
            "node": "email Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status da Mulher = Indisponivel - Agenda",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Busca current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - encaminhamento interrompido",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - encaminhamento interrompido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária1": {
      "main": [
        [
          {
            "node": "email MSR - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "Obtém o transactionaId da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - atendimento iniciado",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - atendimento iniciado2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam1": {
      "main": [
        [
          {
            "node": "Deve seguir?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "O status atual é waiting_contact?": {
      "main": [
        [
          {
            "node": "Devemos atualizar o status?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Devemos atualizar o status?": {
      "main": [
        [
          {
            "node": "Qual o novo status?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca infos da MSR e da Voluntária2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária2": {
      "main": [
        [
          {
            "node": "email MSR - Voluntária não respondeu",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - Voluntária não respondeu",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - observação interna",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket MSR - observação interna",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request_id": {
      "main": [
        [
          {
            "node": "Atualiza support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Voluntária deseja se descadastrar": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca current_matches": {
      "main": [
        [
          {
            "node": "Deve atualizar o current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o current_matches?": {
      "main": [
        [
          {
            "node": "Atualiza current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve seguir?": {
      "main": [
        [
          {
            "node": "Busca match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR jurídico": {
      "main": [
        [
          {
            "node": "ainda quer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Tem SR psicológico": {
      "main": [
        [
          {
            "node": "ainda quer1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Verifica se precisa de atendimento e qual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ainda quer1": {
      "main": [
        [
          {
            "node": "Atualiza status para waiting_for_match4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza support_request para closed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza status para waiting_for_match4": {
      "main": [
        [
          {
            "node": "status: Aguardando Match: Sem Prioridade4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza support_request para closed8": {
      "main": [
        [
          {
            "node": "Atualizar ticket para solicitação encerrada8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Busca support_request_id1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request_id1": {
      "main": [
        [
          {
            "node": "Atualiza support_request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ticket MSR - MSR desistiu do atendimento": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca infos da MSR e da Voluntária3": {
      "main": [
        [
          {
            "node": "Busca current_matches1",
            "type": "main",
            "index": 0
          },
          {
            "node": "ticket Voluntária - msr desistiu",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca current_matches1": {
      "main": [
        [
          {
            "node": "Deve atualizar o current_matches?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deve atualizar o current_matches?1": {
      "main": [
        [
          {
            "node": "Atualiza current_matches1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o status da voluntária?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza o status da voluntária?": {
      "main": [
        [
          {
            "node": "Atualiza status da Voluntária1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Status da Mulher = Disponivel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "Busca infos da MSR e da Voluntária3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Qual o novo status?": {
      "main": [
        [
          {
            "node": "Busca infos da MSR e da Voluntária1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status do match",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca infos da MSR e da Voluntária",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status do match1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "ticket MSR - MSR desistiu do atendimento",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza status do match2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR ou Voluntária preencheu o formulário": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Quer continuar na fila?": {
      "main": [
        [
          {
            "node": "No Operation, do nothing6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca MSR",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o support_request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Atualiza o ticket no Zendesk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca support_request": {
      "main": [
        [
          {
            "node": "Encontrou o support_request?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filtra apenas as infos que importam2": {
      "main": [
        [
          {
            "node": "Busca support_request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou o support_request?": {
      "main": [
        [
          {
            "node": "Quer continuar na fila?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca MSR": {
      "main": [
        [
          {
            "node": "Encontrou a MSR?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou a MSR?": {
      "main": [
        [
          {
            "node": "Envia e-mail de Encaminhamento para Serviço Público",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Stop and Error2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MSR preencheu o formulário": {
      "main": [
        [
          {
            "node": "Filtra apenas as infos que importam2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-05T13:58:34.529Z",
  "id": "XUNdm8ZZX8AG4G0c",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[STG] Integrações Tally",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "8c295d83-7a45-4d59-b875-8756f37f49da",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": 0,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "c40865db-e4e8-4b9b-8714-5e5888a15c54",
      "name": "Possui match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1380,
        340
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers \nSET condition = 'descadastrada', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }};\n\nINSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'descadastrada', NOW());\n\nUPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "af4b2801-faec-4d9b-9427-0de71b4ec14a",
      "name": "Descadastra a voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  id AS volunteer_id,\n  email,\n  first_name,\n  phone,\n  zendesk_user_id,\n  COALESCE(current_matches, 0) AS current_matches,\n  '{{ $json.unsubscription_reason }}' AS unsubscription_reason,\n  '{{ $json.unsubscription_description }}' AS unsubscription_description\nFROM volunteers\nLEFT JOIN volunteer_availability ON id = volunteer_id\nWHERE email = '{{ $json.email }}'",
        "options": {}
      },
      "id": "ca5676fc-f1ae-48f4-a2b3-6d49a9b5bae1",
      "name": "Busca voluntária no BD",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1160,
        340
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "descadastrada"
              }
            ]
          }
        }
      },
      "id": "ee555da4-3f5e-428c-8b22-faec8cc81707",
      "name": "Atualiza status da voluntária no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        1060
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8sn93v003e145jlfb9gf67\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "e5120b2c-ec82-437f-8395-9c026d73d317",
      "name": "Envia e-mail pedindo que ela entre em contato",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2120,
        100
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"clu8up5lj0005iyhgjmq7qtqi\",\n \"dataVariables\": {\n    \"first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "73041378-e55e-444d-bc18-0ecc380420a8",
      "name": "Envia e-mail confirmando o descadastro",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2100,
        840
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C06R9JPDEQN",
          "mode": "list",
          "cachedResultName": "alertas-tech-provisao"
        },
        "text": "=:no_entry_sign: Voluntária Descadastrada automaticamente pelo formulário de descadastro :no_entry_sign:\n\nvolunteer_id: {{ $json.volunteer_id }}\nemail: {{ $json.email }}\ntelefone: {{ $json.phone }}",
        "otherOptions": {
          "mrkdwn": true
        }
      },
      "id": "722a652b-62b4-45e0-bb92-1bc1595e0b8b",
      "name": "Avisa o time de provisão de serviços",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 2.1,
      "position": [
        2100,
        1280
      ],
      "credentials": {
        "slackOAuth2Api": {
          "id": "01G85hUbLT4VlY92",
          "name": "Slack account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_unsubscriptions (volunteer_id, unsubscription_reason, unsubscription_description, created_at, updated_at)\nVALUES ({{ $json.volunteer_id }}, '{{ $json.unsubscription_reason }}', '{{ $json.unsubscription_description }}', NOW(), NOW())",
        "options": {}
      },
      "id": "b40b536f-2493-40ca-93e1-ac79b4c97135",
      "name": "Salva os dados do descadastro na tabela volunteer_unsubscriptions",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2100,
        640
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfor (const item of $input.all()) {\n  const volunteerEmail = item.json.body.data.fields[1].value;\n  const unsubscriptionReasonValue = item.json.body.data.fields[2].value;\n\n  const unsubscriptionReasonLabel = item.json.body.data.fields[2].options.find((element) => element.id == unsubscriptionReasonValue).text;\n\n  const unsubscriptionDescription = item.json.body.data.fields[3].value;\n  \n  output.push(\n    {\n      \"email\": volunteerEmail,\n      \"unsubscription_reason\": unsubscriptionReasonLabel,\n      \"unsubscription_description\": unsubscriptionDescription\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "4ef952b7-0336-4dd1-bd12-461883616aff",
      "name": "Filtra apenas as infos que importam",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        920,
        340
      ]
    },
    {
      "parameters": {
        "content": "## Atualizações do pedido de acolhimento",
        "height": 125.37595776585795,
        "width": 340.2325169896819
      },
      "id": "8993b828-11f6-4ef1-ae0f-31cd01f60a0d",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        660,
        2460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = '{{ $json.new_status }}', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, '{{ $json.new_status }}', NOW());",
        "options": {}
      },
      "id": "02497d1e-7209-4cde-be8d-10abbd9ff1f9",
      "name": "Atualiza status do match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3180,
        2020
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  match_id,\n  support_request_id,\n  support_type,\n  msr_id,\n  volunteer_id,\n  first_name AS volunteer_first_name,\n  zendesk_user_id AS volunteer_zendesk_user_id,\n  email AS volunteer_email,\n  msr_zendesk_ticket_id,\n  volunteer_zendesk_ticket_id,\n  status AS current_status,\n  '{{ $json.match_status }}' AS new_status,\n  '{{ $json.who_answered }}' AS who_answered,\n  SUBSTRING(m.created_at::VARCHAR, 0, 11) AS match_created_at,\n  '{{ $json.form_answer }}' AS form_answer\nFROM match.matches m\nLEFT JOIN volunteers v ON id = volunteer_id\nWHERE match_id = {{ $json.match_id }}",
        "options": {}
      },
      "id": "b9cf9f1f-b79b-4c33-90e0-e9371c440654",
      "name": "Busca match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1220,
        2620
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "dd3678ee-3ca4-4887-8696-ed25abe79551",
              "leftValue": "={{ $json.match_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bca13b60-6ebc-49da-b1bd-b28d88b864fb",
      "name": "Encontrou o match?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        2620
      ]
    },
    {
      "parameters": {
        "errorMessage": "match não encontrado"
      },
      "id": "ee4f6424-67d6-4966-9ba5-a9df92f850a3",
      "name": "Stop and Error",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1700,
        2800
      ]
    },
    {
      "parameters": {},
      "id": "e4fd261d-33f7-42e5-b47a-2736992d2492",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1880,
        2860
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\n{{ $json.who_answered }} informou pelo formulário que o atendimento foi iniciado.\n</br>\n</br>\n<strong>Nome da MSR:</strong> {{ $json.msr_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}\n",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento",
            "instrumental_triagem_1",
            "triagem-1-enviado"
          ]
        }
      },
      "id": "d2afb5d7-cafc-422c-a618-00adc40f9afb",
      "name": "ticket Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3560,
        1840
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "atendimento__iniciado"
              }
            ]
          },
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\n{{ $json.who_answered }} informou pelo formulário que o atendimento foi iniciado.\n</br>\n</br>\n<strong>Nome da voluntária:</strong> {{ $json.volunteer_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}\n",
          "status": "pending",
          "tags": [
            "atualizar-data-atendimento"
          ]
        }
      },
      "id": "146ad2db-e28e-472c-adfd-4d317faf1c3f",
      "name": "ticket MSR - atendimento iniciado2",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3540,
        1620
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clve8mcba01ehw7t4j7z3pswx\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "f4edf44f-b2ae-447e-9b9e-7e625e7e1156",
      "name": "email MSR - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3560,
        2040
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"{{ $json.transactional_id }}\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "b7622dc7-1d72-4731-8bbf-a69d296c6397",
      "name": "email Voluntária - atendimento iniciado",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        3820,
        2280
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of $input.all()) {\n\n  const supportType = item.json.support_type;\n  const transactionalId = supportType === 'legal' ? 'clve91yrh006zn5kbfmaeabcv' : 'clve9g19d00h2lk7s7uh7510h';\n\n  item.json.transactional_id = transactionalId;\n\n}\n\nreturn $input.all();"
      },
      "id": "065e8475-57f2-466b-8dc2-15ba11525298",
      "name": "Obtém o transactionaId da Voluntária",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        3560,
        2280
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\n{{ $json.who_answered }} informou pelo formulário que o encaminhamento foi interrompido.\n</br>\n</br>\n<strong>Nome da voluntária:</strong> {{ $json.volunteer_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}\n",
          "status": "open",
          "tags": [
            "atualizar-data-encaminhamento"
          ]
        }
      },
      "id": "cc284e10-c0df-42f2-9e37-788c8910220a",
      "name": "ticket MSR - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        4200,
        2480
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.volunteer_email }}\",\n \"transactionalId\": \"clvh3x98300621fpkx8is5zyj\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\",\n    \"volunteer_email\": \"{{ $json.volunteer_email }}\"\n  }\n}",
        "options": {}
      },
      "id": "4b4edfc0-04c1-4ab3-9592-b8208f457d4b",
      "name": "email Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4320,
        3300
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {},
      "id": "829a4bfe-5f4f-4298-b0c0-31e601ac7c42",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4460,
        2480
      ],
      "webhookId": "71380159-4d32-4d3e-8b62-ea546183627f"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvjzaan500moauwib4clwqah\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\",\n    \"volunteer_first_name\": \"{{ $json.volunteer_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "13b0a335-89cb-4d87-a20c-6f64b5bd15af",
      "name": "email MSR - nova voluntária sem prioridade",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        4320,
        3060
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    {{ $json.msr_zendesk_ticket_id }} AS msr_zendesk_ticket_id,\n    {{ $json.volunteer_id }} AS volunteer_id,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type,\n    '{{ $json.who_answered }}' AS who_answered,\n    '{{ $json.match_created_at }}' AS match_created_at,\n    '{{ $json.form_answer }}' AS form_answer\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "6f2f6a1c-543b-4604-bf90-190c8f9419f3",
      "name": "Busca infos da MSR e da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3880,
        2900
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    {{ $json.msr_zendesk_ticket_id }} AS msr_zendesk_ticket_id,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type,\n    '{{ $json.who_answered }}' AS who_answered,\n    '{{ $json.match_created_at }}' AS match_created_at,\n    '{{ $json.form_answer }}' AS form_answer\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "6f33e0ab-577d-4265-a7ce-adfc347fd81c",
      "name": "Busca infos da MSR e da Voluntária1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3260,
        2280
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "indisponível_agenda"
              }
            ]
          }
        }
      },
      "id": "b3f14ab9-4ef7-4f59-a907-c6777e7c6e3c",
      "name": "Status da Mulher = Indisponivel - Agenda",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        4320,
        3600
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'indisponível_agenda', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'indisponível_agenda', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = FALSE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "478b662c-d307-4fdf-bd0b-dd95356e1eea",
      "name": "Atualiza status da Voluntária",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        4320,
        3800
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waiting_for_match', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waiting_for_match', NOW());",
        "options": {}
      },
      "id": "fb204a84-caf7-412b-aad2-78d7366c3682",
      "name": "Atualiza support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        4960,
        2520
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\noutput = []\n\nfunction getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getMatchStatus(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n\n  const matchStatusLookUp = {\n    \"Já iniciamos o atendimento\": \"in_contact\",\n    \"A voluntária não me respondeu\": \"waiting_contact\",\n    \"A voluntária me respondeu, mas não está disponível para me atender\": \"interrupted_before_support\",\n    \"Não conseguirei atendê-la\": \"interrupted_before_support\",\n    \"Escolho não seguir com o atendimento\": \"waived\"\n  }\n  \n  const matchStatusText = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return matchStatusLookUp[matchStatusText]\n}\n\nfunction getShouldDoSomething(item){\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n\n  if(!matchStatusField.value) return null\n\n  const matchStatusText = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n\n  return matchStatusText === \"Ela não entrou em contato comigo\" ? false : true\n}\n\nfor (const item of $input.all()) {\n  \n  const matchId = getHiddenFieldValue(item, 'match_id');\n  const matchStatus = getMatchStatus(item);\n  const shouldDoSomething = getShouldDoSomething(item);\n  const whoAnswered = item.json.body.data.formId === 'nrlEq5' ? 'Voluntária' : 'MSR'\n\n  const matchStatusField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'match_status'\n  );\n  const matchStatusText = matchStatusField.options.find(\n    (element) => element.id == matchStatusField.value\n  ).text;\n  \n  output.push(\n    {\n      \"match_id\": matchId,\n      \"match_status\": matchStatus,\n      \"should_do_something\": shouldDoSomething,\n      \"who_answered\": whoAnswered,\n      \"form_answer\": matchStatusText\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "b78c6717-02ea-4cbe-a860-ea2b5f44a333",
      "name": "Filtra apenas as infos que importam1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        2640
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "24c712a9-5da0-47cf-85ab-3b8d6795bb22",
              "leftValue": "={{ $json.current_status }}",
              "rightValue": "=waiting_contact",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9e8e7044-1aba-4202-ade7-ce4303bdc592",
      "name": "O status atual é waiting_contact?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1700,
        2600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "592e5ea7-2949-4db7-b42a-039ded0fd25c",
              "leftValue": "={{ $json.new_status }}",
              "rightValue": "waiting_contact",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "bb6cef76-8c3c-4ae8-85b5-c17ce5cf8ebf",
      "name": "Devemos atualizar o status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2020,
        2580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.msr_email }}\",\n \"transactionalId\": \"clvldhxm001hy7b5dbbi8oprs\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.msr_first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "77872c36-fbb0-4bc4-9858-bd7785ad267b",
      "name": "email MSR - Voluntária não respondeu",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2400,
        3340
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    {{ $json.msr_zendesk_ticket_id }} AS msr_zendesk_ticket_id,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type,\n    '{{ $json.match_created_at }}' AS match_created_at,\n    '{{ $json.form_answer }}' AS form_answer\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "58248b4b-7ad5-4482-ba1c-13bf8ad2e500",
      "name": "Busca infos da MSR e da Voluntária2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2180,
        2780
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  support_request_id\nFROM match.matches\nWHERE msr_zendesk_ticket_id = {{ $json.id }}",
        "options": {}
      },
      "id": "f9ceee42-8efb-45b6-81e1-2eac37281923",
      "name": "Busca support_request_id",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        4740,
        2520
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento_interrompido"
              }
            ]
          },
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\n{{ $json.who_answered }} informou pelo formulário que o encaminhamento foi interrompido.\n\n</br>\n</br>\n<strong>Nome da MSR:</strong> {{ $json.msr_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}\n",
          "status": "pending"
        }
      },
      "id": "8944bca7-0b00-4831-8420-2d5bdc9f1b05",
      "name": "ticket Voluntária - encaminhamento interrompido",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        4200,
        2720
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Descadastro de Voluntárias"
      },
      "id": "009b2a6e-ad9f-4b98-9c67-52a394ffabc5",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        700,
        120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "volunteer-unsubscribe",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "00531a2b-c038-47ee-b8b5-74dc0cd9236c",
      "name": "Voluntária deseja se descadastrar",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        720,
        340
      ],
      "webhookId": "85a30c72-b875-4395-acb8-ca10777baa9b",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "jsonParameters": true,
        "updateFieldsJson": "={\n  \"status\": \"open\",\n  \"comment\": {\n    \"public\": true,\n    \"author_id\": 377511446392,\n    \"body\": \"Olá, {{ $json.volunteer_first_name }}! Como você está?!\\n\\nHá um tempo atrás enviamos o seu contato para **{{ $json.msr_first_name}}** e fomos informadas que a mesma está com dificuldade de contatá-la.\\n\\nDiante disso, estamos entrando em contato para saber se está tudo bem? Você se encontra com algum problema tecnológico? **Caso tenha alterado seus dados de contato, é imprescindível que nos mantenha informadas.**\\n\\nPedimos que nos informe se você continua disponível para o atendimento e se segue conosco no projeto. A não resposta deste e-mail será compreendida pela equipe como inatividade e seu cadastro será suspenso.\\n\\nLembramos que as acolhidas são orientadas a entrar em contato via WhatsApp (mensagem de texto ou voz) e também por meio de ligação telefônica. Esteja atenta a essas formas de contato!\\n\\nÉ muito importante contar com a sua participação na nossa rede de voluntárias, obrigada por poder contar com você <3\\n\\nAbraços,\\nEquipe do Mapa do Acolhimento\"\n  }\n}"
      },
      "id": "f722ce7c-7165-4daa-a30a-d686a01b7391",
      "name": "ticket Voluntária - Voluntária não respondeu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2440,
        3120
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    zendesk_user_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, zendesk_user_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "9bd760e0-6035-498f-b10b-0a1988f646cb",
      "name": "Busca current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4300,
        4100
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "1f5ff049-7d59-4d34-b497-1c8caba3d7f5",
      "name": "Deve atualizar o current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4520,
        4100
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "a83485cc-a73c-4455-b36c-045bf9af85fd",
      "name": "Atualiza current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4760,
        4080
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "5b457790-b9c4-40ad-87fd-f5999ca42211",
              "leftValue": "={{ $json.should_do_something }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3acd769a-3e97-4f98-9f36-2715add32758",
      "name": "Deve seguir?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1000,
        2640
      ]
    },
    {
      "parameters": {},
      "id": "ec3e061d-396f-4655-a256-2bef169c50b4",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1220,
        2820
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nMSR informou pelo formulário que a Voluntária não a respondeu\n</br>\n</br>\n<strong>Nome da MSR:</strong> {{ $json.msr_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.msr_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}"
        }
      },
      "id": "424a2536-7060-4ab1-b878-0755a2e29dff",
      "name": "ticket Voluntária - observação interna",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2420,
        2820
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "internalNote": "=<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nMSR informou pelo formulário que a Voluntária não a respondeu.\n</br>\n</br>\n<strong>Nome da voluntária:</strong> {{ $json.volunteer_first_name }} </br>\n<strong>Contato:</strong> <a href=\"https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}\">https://mapadoacolhimento.zendesk.com/agent/tickets/{{ $json.volunteer_zendesk_ticket_id }}</a></br>\n<strong>Data de encaminhamento:</strong> {{ $json.match_created_at }} </br>\n<strong>Resposta do formulário:</strong> {{ $json.form_answer }}\n"
        }
      },
      "id": "a0ca703b-94b5-4a48-9265-7bb7ad692050",
      "name": "ticket MSR - observação interna",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2320,
        3580
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR está aguardando um novo match",
          "status": "open",
          "tags": [
            "nova-voluntaria-sem-prioridade"
          ]
        }
      },
      "id": "26f877cf-dc97-4b34-b73b-0e39ec94027b",
      "name": "ticket MSR - aguardando match sem prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        4680,
        2320
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const body = items[0].json.body;\n// TODO: buscar support_request_id;\nconst fields = body.data.fields;\n\nlet legalSupportRequest = null;\nlet psychologicalSupportRequest = null;\nlet legalSupportResponseText = '';\nlet psychologicalSupportResponseText = '';\nlet supportRequestId = items[0].json.support_request_id;\nlet psychological_support_request_id = items[0].json.body.data.fields[1].value;\nlet legal_support_request_id = items[0].json.body.data.fields[2].value;\n\n\nfields.forEach(field => {\n  if (field.label === 'legal_support_request' && field.value) {\n    legalSupportRequest = field.value[0];\n    const legalSupportOptions = field.options;\n    const legalSupportOption = legalSupportOptions.find(option => option.id === legalSupportRequest);\n    if (legalSupportOption) {\n      legalSupportResponseText = legalSupportOption.text;\n    }\n  }\n  if (field.label === 'psychological_support_request' && field.value) {\n    psychologicalSupportRequest = field.value[0];\n    const psychologicalSupportOptions = field.options;\n    const psychologicalSupportOption = psychologicalSupportOptions.find(option => option.id === psychologicalSupportRequest);\n    if (psychologicalSupportOption) {\n      psychologicalSupportResponseText = psychologicalSupportOption.text;\n    }\n  }\n});\n\nreturn [\n  {\n    json: {\n      legal_support_request_id,\n      psychological_support_request_id,\n      legalSupportRequest,\n      legalSupportResponseText,\n      psychologicalSupportRequest,\n      psychologicalSupportResponseText,\n      supportRequestId,\n    },\n  },\n];\n"
      },
      "id": "b0dd902c-c03f-49ae-a3db-5652c2033665",
      "name": "Verifica se precisa de atendimento e qual",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1080,
        5000
      ]
    },
    {
      "parameters": {
        "content": "## Verifica quais MSRs de 2022/2021 irão para fila do Match Diário\n",
        "height": 124.36523996505218,
        "width": 340.2325169896819
      },
      "id": "4a7a4024-9599-4650-8dd0-8db92d21c2a2",
      "name": "Sticky Note29",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        860,
        4760
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas juridico",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "295647df-d779-4c4c-8769-4481eb240b1e",
      "name": "Sticky Note32",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5620
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um juridico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "eff36371-f34f-4ee2-8ee2-e7afaa8ef18a",
      "name": "Sticky Note33",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5320
      ]
    },
    {
      "parameters": {
        "content": "\n\nCasos de testes",
        "height": 80,
        "width": 340.2325169896819,
        "color": 6
      },
      "id": "73036a5f-76b3-4bb0-969c-339925108dc7",
      "name": "Sticky Note34",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5200
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer apenas psi",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "753e8e64-12e2-428f-8551-b192d1035075",
      "name": "Sticky Note35",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5720
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer nenhum",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "a04f0e03-d1e1-4751-bece-2ab3d91bca35",
      "name": "Sticky Note36",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5820
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.legal_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "16824af3-72b7-430e-91ea-58dc08133ebf",
      "name": "Tem SR jurídico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1300,
        4900
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "afc4c174-958f-4dc7-b1c0-02b4e274ad56",
              "leftValue": "={{ $json.psychological_support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "5574f17b-21c1-45e0-9b41-78c024221e87",
      "name": "Tem SR psicológico",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1320,
        5200
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "6c236e14-2adb-4e84-8e18-ab9a5313c52a",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "7e3047c9-dbbd-4389-b7fc-cc36dc975228",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        880,
        5000
      ],
      "webhookId": "a1a5d8d3-ed0f-4e09-a1f8-6020c900577e",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.legalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "daa42b5f-64af-4c4c-a7e5-1c466e2b25a6",
      "name": "ainda quer",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1540,
        4740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "39b74e30-dfde-4f60-9007-c8bca3b4da55",
              "leftValue": "={{ $json.psychologicalSupportResponseText }}",
              "rightValue": "Sim, ainda preciso",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "08038679-0e39-4640-8d77-c851cc129dfa",
      "name": "ainda quer1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1560,
        5160
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.legal_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.legal_support_request_id}};\n\n",
        "options": {}
      },
      "id": "3a163812-f5f6-48e3-a314-c58280897014",
      "name": "Atualiza status para waiting_for_match",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1900,
        4580
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "6feffbe2-e209-4453-a08f-55c2154ac5f6",
      "name": "status: Aguardando Match: Sem Prioridade",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2080,
        4580
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\nUPDATE match.support_requests\nSET status = 'waiting_for_match'\nWHERE support_request_id = {{$json.psychological_support_request_id}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'waiting_for_match', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json.psychological_support_request_id}};\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "d6c7758d-fd0a-4a79-8f50-d05c39c5e858",
      "name": "Atualiza status para waiting_for_match4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1900,
        5140
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "aguardando_match__sem_prioridade"
              }
            ]
          },
          "internalNote": "MSR sinalizou que quer entrar na fila do match diário"
        }
      },
      "id": "6febc49c-e295-4302-8fd1-b695caf6a1d7",
      "name": "status: Aguardando Match: Sem Prioridade4",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        5140
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento psicológico",
          "status": "solved"
        }
      },
      "id": "051d8453-7527-49d3-b8f6-426bac508e5d",
      "name": "Atualizar ticket para solicitação encerrada",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        5360
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.psychological_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"psychological_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "6cf38fa5-82d2-4bdf-9611-fdc16d844932",
      "name": "Atualiza support_request para closed",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1920,
        5360
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "solicitação_encerrada"
              }
            ]
          },
          "internalNote": "MSR sinalizou que não quer mais acolhimento jurídico",
          "status": "solved"
        }
      },
      "id": "bc054823-009b-4441-b4f0-d4ba9f7fcebc",
      "name": "Atualizar ticket para solicitação encerrada8",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2100,
        4780
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE \n  match.support_requests\nSET \n  status = 'closed'\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json.legal_support_request_id}}, 'closed', NOW());  \nSELECT \n  zendesk_ticket_id\nFROM \n  match.support_requests\nWHERE \n  support_request_id = {{$json[\"legal_support_request_id\"]}};\n\n",
        "options": {
          "queryReplacement": ""
        }
      },
      "id": "bee5f6f1-ad25-4bc7-ae6a-e159d3d109fd",
      "name": "Atualiza support_request para closed8",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1900,
        4780
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "\nPsicológico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "614eb6f0-360c-41d1-b49e-600a0cc88ed4",
      "name": "Sticky Note25",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2440,
        5280
      ]
    },
    {
      "parameters": {
        "content": "\n\nSó tem um psicológico e vai querer\n",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "62cb18fe-cbcd-4564-8dc6-4a74035b5b22",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5420
      ]
    },
    {
      "parameters": {},
      "id": "ef5e3935-ba0b-43cb-81bc-1025e7528be6",
      "name": "No Operation, do nothing2",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1600,
        4920
      ]
    },
    {
      "parameters": {},
      "id": "474ae0ba-097b-4176-adfa-361c23e0beaa",
      "name": "No Operation, do nothing3",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1580,
        5420
      ]
    },
    {
      "parameters": {
        "content": "\nJurídico",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "df3e377b-2a4a-4149-ac75-e8a5eef42078",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2420,
        4680
      ]
    },
    {
      "parameters": {
        "content": "\n\nTem psi e juridico e vai querer os dois",
        "height": 80,
        "width": 340.2325169896819,
        "color": 4
      },
      "id": "414c5dfe-b4b1-4f4c-a0f5-a1dd8bb4a605",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        840,
        5520
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = '{{ $json.new_status }}', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, '{{ $json.new_status }}', NOW());",
        "options": {}
      },
      "id": "892ce276-097b-4e3b-88c0-d20149369b00",
      "name": "Atualiza status do match1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3420,
        2480
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.matches\nSET status = 'interrupted_before_support', updated_at = NOW()\nWHERE match_id = {{ $json.match_id }};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{ $json.match_id }}, 'interrupted_before_support', NOW());",
        "options": {}
      },
      "id": "4da0f50a-c568-43f9-851d-f0d707188e31",
      "name": "Atualiza status do match2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2960,
        3300
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "749bf310-784f-4afd-9fdd-06157c4f9648",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        3120,
        3020
      ],
      "webhookId": "477e459b-967a-4102-834a-0e52954b7c24"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n  support_request_id\nFROM match.matches\nWHERE msr_zendesk_ticket_id = {{ $json.id }}",
        "options": {}
      },
      "id": "b2637b22-f605-45d0-ba24-7e320412295a",
      "name": "Busca support_request_id1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3280,
        3020
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = 'waived', updated_at = NOW()\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'waived', NOW());",
        "options": {}
      },
      "id": "5458b54b-92f5-41c8-afe5-55cae053e5d5",
      "name": "Atualiza support_request1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3460,
        3020
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.volunteer_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "internalNote": "<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nFomos informadas pelo formulário que a MSR desistiu do atendimento",
          "publicReply": "=Olá {{ $json.volunteer_first_name }}​, espero que esteja bem na medida do possível!\n\nEstamos entrando em contato para informar que a acolhida {{ $json.msr_first_name }} encaminhada a você optou, neste momento, por não seguir nos atendimentos com o Mapa.\n\nInfelizmente, não é raro que haja desistência, pois o caminho para romper o ciclo da violência muitas vezes acontece a passos lentos. Esperamos que ela se cadastre novamente em breve ou que já tenha encontrado outra forma de se fortalecer.\n\nDesta forma, estamos liberando esta vaga para outra mulher que está aguardando na fila de pedidos de ajuda. Voltaremos a entrar em contato caso haja outro encaminhamento. Agradecemos pela participação e disponibilidade!\n\nForte abraço,\nEquipe do Mapa do Acolhimento <3",
          "status": "pending"
        }
      },
      "id": "1a229ab7-7cf5-4d51-8184-0ab5ad53bae5",
      "name": "ticket Voluntária - msr desistiu",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3080,
        3820
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.msr_zendesk_ticket_id }}",
        "updateFields": {
          "assigneeEmail": "marcia@nossas.org",
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "desistencia"
              }
            ]
          },
          "internalNote": "<strong>Formulário de Atualização do Status do Acolhimento</strong>\n</br>\n</br>\nFomos informadas pelo formulário que a MSR desistiu do atendimento",
          "status": "pending"
        }
      },
      "id": "1c318f3c-258a-4433-a52b-cdabf5febe99",
      "name": "ticket MSR - MSR desistiu do atendimento",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2940,
        3020
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n    email AS msr_email,\n    (STRING_TO_ARRAY(INITCAP(name), ' '))[1] AS msr_first_name,\n    '{{ $json.volunteer_email }}' AS volunteer_email,  \n    {{ $json.volunteer_id }} AS volunteer_id,\n    '{{ $json.volunteer_first_name }}' AS volunteer_first_name,\n    {{ $json.volunteer_zendesk_user_id }} AS volunteer_zendesk_user_id,\n    {{ $json.volunteer_zendesk_ticket_id }} AS volunteer_zendesk_ticket_id,\n    '{{ $json.support_type }}' AS support_type\nFROM solidarity_users\nWHERE user_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "bd162e7d-b634-459c-8513-3692af2685b7",
      "name": "Busca infos da MSR e da Voluntária3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2880,
        3480
      ],
      "credentials": {
        "postgres": {
          "id": "GPnWI2OL5IjBv3zm",
          "name": "[PROD] Bonde"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    zendesk_user_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id)::INT AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, zendesk_user_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "51b186f7-de66-467e-a58b-4a4f82d21b53",
      "name": "Busca current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3080,
        3480
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "75dc0cd2-151f-43de-85fa-dc0cca2de0ad",
      "name": "Deve atualizar o current_matches?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3260,
        3480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "e8b40441-a879-417f-9c86-314955a44af2",
      "name": "Atualiza current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3540,
        3380
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "bcfcd581-16f2-477b-8351-61a218c56805",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "indisponivel_sem_vagas",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            },
            {
              "id": "3ef0e89a-2cc6-4fbd-b6fc-8b7dc638dc68",
              "leftValue": "={{ $json.calculated_current_matches }}",
              "rightValue": "={{ $json.max_matches }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "7c154c67-fad3-4f58-9f6a-1bf7b16f43c8",
      "name": "Atualiza o status da voluntária?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3560,
        3560
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "options": {}
      },
      "id": "3019ef4e-b723-4da3-9934-2b0942cfe9d2",
      "name": "Atualiza status da Voluntária1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        3780,
        3540
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "Atualiza status do ticket",
        "height": 80,
        "width": 150
      },
      "id": "b4945a14-f3b8-408e-88be-a2c944261e30",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3240,
        3980
      ]
    },
    {
      "parameters": {
        "content": "Atualiza status do ticket e support_request ",
        "height": 80,
        "width": 310.0031552352676
      },
      "id": "6fa65f86-883f-4a96-850d-7c91e6bcaa6c",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3600,
        3120
      ]
    },
    {
      "parameters": {
        "content": "Atualiza status do match",
        "height": 80,
        "width": 150
      },
      "id": "be6112f9-7de9-49dc-a5e5-852b356ab8df",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3200,
        3300
      ]
    },
    {
      "parameters": {
        "content": "Atualiza quantidade de matches ",
        "height": 80,
        "width": 150
      },
      "id": "2ceca594-b3c5-4a11-8e43-6b95da994330",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3760,
        3380
      ]
    },
    {
      "parameters": {
        "content": "Se o status da voluntária for indiponide_sem)vagas e quantidade de matches for 1 ou mais a passa pra disponível",
        "height": 80,
        "width": 304.92368998970363
      },
      "id": "7d53a379-5ef6-4e06-aacb-00864a89c342",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3720,
        3940
      ]
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{ $json.zendesk_user_id }}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "disponivel"
              }
            ]
          }
        }
      },
      "id": "e9306292-b465-48ea-a2ee-2d7db50e134e",
      "name": "Status da Mulher = Disponivel",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3760,
        3740
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {},
      "id": "df7a0d88-b3e8-4c5e-a84e-3f64d16863f4",
      "name": "No Operation, do nothing4",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3700,
        4040
      ]
    },
    {
      "parameters": {},
      "id": "9372831b-de54-4bd7-b70f-391b463c6b79",
      "name": "Wait2",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2720,
        3480
      ],
      "webhookId": "edc3a91f-4944-4bd3-b6eb-0498f7d70ded"
    },
    {
      "parameters": {},
      "id": "0d28e6fe-01bd-47b6-a387-f6e71bf51adf",
      "name": "No Operation, do nothing5",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        3400,
        3740
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.new_status }}",
                    "rightValue": "in_contact",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "atendimento iniciado"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "4f3fd665-2742-4831-b7d0-d005e78b34e5",
                    "leftValue": "={{ $json.new_status }}",
                    "rightValue": "interrupted_before_support",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "encaminhamento interrompido"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict"
                },
                "conditions": [
                  {
                    "id": "e5b7eb66-f482-42f0-acd1-b39f3fa869f3",
                    "leftValue": "={{ $json.new_status }}",
                    "rightValue": "waived",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "msr_desistiu"
            }
          ]
        },
        "options": {}
      },
      "id": "1727f4ac-953d-4086-b945-beb35383393a",
      "name": "Qual o novo status?",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        2560,
        2560
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "volunteer-update-match-status",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "6a753c23-c2dd-416b-bc66-3b6f936ec820",
      "name": "MSR ou Voluntária preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        640,
        2640
      ],
      "webhookId": "1a5604df-b004-431d-be1c-86da1e58b3f7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfunction getHiddenFieldValue(item, fieldLabel){\n  return item.json.body.data.fields.find(\n    (element) => element.label === fieldLabel\n  ).value;\n}\n\nfunction getContinueInQueue(item){\n  const continueInQueueField = item.json.body.data.fields.find(\n    (element) => element.type === 'MULTIPLE_CHOICE' && element.label === 'continue_in_queue'\n  );\n\n  if(!continueInQueueField.value) return null\n  \n  const continueInQueueText = continueInQueueField.options.find(\n    (element) => element.id == continueInQueueField.value\n  ).text;\n\n  const shouldContinueInQueue = continueInQueueText === \"Não, prefiro não seguir com o atendimento\" ? false : true\n\n  return shouldContinueInQueue\n}\n\nfor (const item of $input.all()) {\n  \n  const supportResquestId = getHiddenFieldValue(item, 'support_request_id');\n  const shouldContinueInQueue = getContinueInQueue(item);\n  \n  output.push(\n    {\n      \"support_request_id\": supportResquestId,\n      \"should_continue_in_queue\": shouldContinueInQueue,\n    }\n  )\n}\n\nreturn output;"
      },
      "id": "68e4ff63-94b5-43fb-966e-639ec121a365",
      "name": "Filtra apenas as infos que importam2",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1160,
        6880
      ]
    },
    {
      "parameters": {
        "content": "## Formulário para MSRs indicarem se querem continuar na fila",
        "width": 415.2146730852694
      },
      "id": "d3504380-8274-4bd3-bb58-250e612c5b11",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        920,
        6660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "e6b63e14-7e39-444b-a44a-68a042efa1a8",
              "leftValue": "={{ $json.should_continue_in_queue }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "02aeb34f-b5aa-4c9e-af0d-120f8a8867cb",
      "name": "Quer continuar na fila?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1800,
        6860
      ]
    },
    {
      "parameters": {},
      "id": "b37f300e-21a9-4609-b5c2-856a3f1b516e",
      "name": "No Operation, do nothing6",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2120,
        6600
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "0f96e552-d3ed-48e2-90f3-ed6b021d69ad",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "46e0aee8-c2e2-44a4-b6c8-ef4afa04a91a",
      "name": "Encontrou a MSR?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2320,
        6880
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  support_request_id,\n  msr_id,\n  zendesk_ticket_id,\n  {{ $json.should_continue_in_queue }} AS should_continue_in_queue\nFROM match.support_requests\nWHERE support_request_id = {{ $json.support_request_id }}",
        "options": {}
      },
      "id": "eb8b60df-3e37-4247-8bae-b5fdd0251a38",
      "name": "Busca support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        1380,
        6880
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "f7f74bcf-9b9f-444b-8838-fd09b810b055",
              "leftValue": "={{ $json.support_request_id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "54c2bb4a-d6f3-4291-853a-d2e587baf9ac",
      "name": "Encontrou o support_request?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1580,
        6880
      ]
    },
    {
      "parameters": {
        "errorMessage": "support_request não encontrado"
      },
      "id": "28b90e7b-1356-40c8-bed9-3a93937898c5",
      "name": "Stop and Error1",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        1800,
        7220
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  first_name,\n  email\nFROM pii_sec.msr_pii\nWHERE msr_id = {{ $json.msr_id }}",
        "options": {}
      },
      "id": "efe0c96c-8f90-404b-81d6-d92245f788f2",
      "name": "Busca MSR",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2120,
        6880
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://app.loops.so/api/v1/transactional",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n \"email\": \"{{ $json.email }}\",\n \"transactionalId\": \"cm0pd0w0y00xdz6kfjbbd7cfn\",\n \"dataVariables\": {\n    \"msr_first_name\": \"{{ $json.first_name }}\"\n  }\n}",
        "options": {}
      },
      "id": "b701a431-bae9-49e7-bc94-cb56eaa53a02",
      "name": "Envia e-mail de Encaminhamento para Serviço Público",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        2620,
        6860
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "XrvtxHAVgwwJ3r6q",
          "name": "Loops API"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE match.support_requests\nSET status = 'public_service'\nWHERE support_request_id = {{ $json.support_request_id }};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{ $json.support_request_id }}, 'public_service', NOW())",
        "options": {}
      },
      "id": "d77004b6-28eb-4fd2-b56c-5ae9fe20af10",
      "name": "Atualiza o support_request",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        2120,
        7120
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{ $json.zendesk_ticket_id }}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__realizado_para_serviço_público"
              }
            ]
          },
          "internalNote": "<strong>Formulário \"Você quer continuar na fila?\"</strong>\n</br>\n</br>\nMSR sinalizou pelo formulário que não quer continuar na fila e foi encaminhada para Serviço Público."
        }
      },
      "id": "a1c9ef5e-7eca-4a1a-8478-9c4d08e37f73",
      "name": "Atualiza o ticket no Zendesk",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        2120,
        7360
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "errorMessage": "MSR não encontrada"
      },
      "id": "84a5cd8d-9dd2-403c-a1a8-55f61534474e",
      "name": "Stop and Error2",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [
        2620,
        7100
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "msr-daily-match-queue",
        "authentication": "headerAuth",
        "options": {}
      },
      "id": "3aff8586-fcd5-4108-a1ae-0ba9df27308d",
      "name": "MSR preencheu o formulário",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        940,
        6880
      ],
      "webhookId": "85a30c72-b875-4395-acb8-ca10777baa9b",
      "credentials": {
        "httpHeaderAuth": {
          "id": "BhcubpnINJanuVaZ",
          "name": "Tally API"
        }
      }
    }
  ],
  "pinData": {
    "MSR ou Voluntária preencheu o formulário": [
      {
        "json": {
          "headers": {
            "host": "mapadoacolhimento.app.n8n.cloud",
            "user-agent": "Tally Webhooks",
            "content-length": "1507",
            "accept": "application/json, text/plain, */*",
            "accept-encoding": "gzip, br",
            "authorization": "uoqQUEpq&&C5$AL22k3PWN4j3dMd&&",
            "baggage": "sentry-environment=production,sentry-public_key=6af4b6673f1648edaa8fef3f2ca43405,sentry-trace_id=47d37d9df7f646af92e394f27d8afd3b",
            "cdn-loop": "cloudflare; subreqs=1",
            "cf-connecting-ip": "34.96.41.35",
            "cf-ew-via": "15",
            "cf-ipcountry": "US",
            "cf-ray": "8abf852141d3bd74-LHR",
            "cf-visitor": "{\"scheme\":\"https\"}",
            "cf-worker": "n8n.cloud",
            "content-type": "application/json",
            "sentry-trace": "47d37d9df7f646af92e394f27d8afd3b-947d5b04abc6a155",
            "x-forwarded-for": "34.96.41.35, 172.70.85.5",
            "x-forwarded-host": "mapadoacolhimento.app.n8n.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "traefik-fb6d78f9-vtwd5",
            "x-is-trusted": "yes",
            "x-real-ip": "34.96.41.35"
          },
          "params": {},
          "query": {},
          "body": {
            "eventId": "8a76a4b9-cebb-4acc-9ec8-4a9c2f4a4c9e",
            "eventType": "FORM_RESPONSE",
            "createdAt": "2024-07-31T18:06:02.292Z",
            "data": {
              "responseId": "9x4jEV",
              "submissionId": "9x4jEV",
              "respondentId": "QABR6A",
              "formId": "nPAj6V",
              "formName": "[MSR] Atualização de Status do Acolhimento",
              "createdAt": "2024-07-31T18:06:02.000Z",
              "fields": [
                {
                  "key": "question_ArWrjk_d4ec2659-b661-43e5-8634-f188c7b4c111",
                  "label": "msr_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Camila"
                },
                {
                  "key": "question_ArWrjk_0b8984ff-7e28-45f0-9ba1-01325248a52a",
                  "label": "match_id",
                  "type": "HIDDEN_FIELDS",
                  "value": "16191"
                },
                {
                  "key": "question_ArWrjk_542a2b93-9104-41a3-a710-a57ed33b4f72",
                  "label": "volunteer_first_name",
                  "type": "HIDDEN_FIELDS",
                  "value": "Maria"
                },
                {
                  "key": "question_ArWrjk_a017cb2c-1570-4d42-a72f-ba870e2f7513",
                  "label": "volunteer_type",
                  "type": "HIDDEN_FIELDS",
                  "value": "psicóloga"
                },
                {
                  "key": "question_ArWrjk_9be5437b-c620-439e-9985-1b158ed54f26",
                  "label": "match_status",
                  "type": "HIDDEN_FIELDS",
                  "value": "Já iniciamos o atendimento"
                },
                {
                  "key": "question_Nq8qaO",
                  "label": "match_status",
                  "type": "MULTIPLE_CHOICE",
                  "value": [
                    "cd3a850f-8151-4db1-8112-cd98ca95d5e5"
                  ],
                  "options": [
                    {
                      "id": "cd3a850f-8151-4db1-8112-cd98ca95d5e5",
                      "text": "Já iniciamos o atendimento"
                    },
                    {
                      "id": "128e22d9-4812-4f59-a389-568909eac9f6",
                      "text": "A voluntária não me respondeu"
                    },
                    {
                      "id": "132e2d65-6135-4d0c-8f8e-a79b77ec0f07",
                      "text": "A voluntária me respondeu, mas não está disponível para me atender"
                    },
                    {
                      "id": "a39aca20-6f0f-4784-82a2-0fa89519673c",
                      "text": "Escolho não seguir com o atendimento"
                    }
                  ]
                }
              ]
            }
          },
          "webhookUrl": "https://mapadoacolhimento.app.n8n.cloud/webhook/volunteer-update-match-status",
          "executionMode": "production"
        }
      }
    ],
    "Busca match": [
      {
        "json": {
          "match_id": 16191,
          "support_request_id": 57694,
          "support_type": "legal",
          "msr_id": "22858077211028",
          "volunteer_id": 27042,
          "volunteer_first_name": "Advogada",
          "volunteer_zendesk_user_id": "423092711812",
          "volunteer_email": "dev.adv.mapa@gmail.com",
          "msr_zendesk_ticket_id": "82262",
          "volunteer_zendesk_ticket_id": "86222",
          "current_status": "waiting_contact",
          "new_status": "waiting_contact",
          "who_answered": "MSR",
          "match_created_at": "2024-01-16",
          "form_answer": "Já iniciamos o atendimento"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "shared": [
    {
      "createdAt": "2024-08-05T13:58:34.534Z",
      "updatedAt": "2024-08-05T13:58:34.534Z",
      "role": "workflow:owner",
      "workflowId": "XUNdm8ZZX8AG4G0c",
      "projectId": "rfgBK87HsySgxYKT",
      "project": {
        "createdAt": "2024-11-15T08:07:36.637Z",
        "updatedAt": "2024-11-15T08:07:36.637Z",
        "id": "rfgBK87HsySgxYKT",
        "name": "Desenvolvimento Mapa <dev@mapa.org.br>",
        "type": "personal",
        "projectRelations": [
          {
            "createdAt": "2024-11-15T08:07:36.637Z",
            "updatedAt": "2024-11-15T08:07:36.637Z",
            "role": "project:personalOwner",
            "userId": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
            "projectId": "rfgBK87HsySgxYKT",
            "user": {
              "createdAt": "2024-01-09T22:21:28.810Z",
              "updatedAt": "2024-01-25T12:51:56.000Z",
              "id": "6e437c36-d4e0-42f4-bbc3-d9b5ac96e474",
              "email": "dev@mapa.org.br",
              "firstName": "Desenvolvimento",
              "lastName": "Mapa",
              "personalizationAnswers": null,
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "sMoToF9HauyKvsFJ",
                "isOnboarded": true,
                "userActivatedAt": 1731658062996
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": true
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 3,
  "updatedAt": "2024-09-05T14:18:53.000Z",
  "versionId": "c7aca611-0f29-42cd-a494-5390f06150dd"
}