{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and support_request_status": {
      "main": [
        [
          {
            "node": "Fetch support_request_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch support_request_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?": {
      "main": [
        [
          {
            "node": "Update support_request status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Fetch matches that should be expired today",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch matches that should be expired today": {
      "main": [
        [
          {
            "node": "Update MSR Zendesk ticket",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update Volunteer Zendesk ticket",
            "type": "main",
            "index": 0
          },
          {
            "node": "Fetch previous volunteer_availability and volunteer_status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Expire matches in database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch previous volunteer_availability and volunteer_status": {
      "main": [
        [
          {
            "node": "Should update volunteer status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer status?": {
      "main": [
        [
          {
            "node": "Update volunteer_availability and volunteer status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update zendesk Status da Mulher",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check current_matches": {
      "main": [
        [
          {
            "node": "Should update current_matches?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update current_matches?": {
      "main": [
        [
          {
            "node": "Update current_matches1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Expire matches in database": {
      "main": [
        [
          {
            "node": "Check current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update is_available?": {
      "main": [
        [
          {
            "node": "Update is_available",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should update volunteer condition?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update is_available": {
      "main": [
        [
          {
            "node": "Should update volunteer condition?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer condition?": {
      "main": [
        [
          {
            "node": "Update volunteer condition",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert into volunteer_status_history",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch match_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is match interrupted or completed?": {
      "main": [
        [
          {
            "node": "Fetch previous volunteer_availability and volunteer_status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and support_request_status1": {
      "main": [
        [
          {
            "node": "Fetch match_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?1": {
      "main": [
        [
          {
            "node": "Is match interrupted or completed?",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update match status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check current_matches1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer status?1": {
      "main": [
        [
          {
            "node": "Update volunteer_availability and volunteer status1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update zendesk Status da Mulher1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch previous volunteer_availability and volunteer_status1": {
      "main": [
        [
          {
            "node": "Should update volunteer status?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check current_matches1": {
      "main": [
        [
          {
            "node": "Should update current_matches?1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update current_matches?1": {
      "main": [
        [
          {
            "node": "Update current_matches",
            "type": "main",
            "index": 0
          },
          {
            "node": "Should update is_available?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-04-10T15:28:34.873Z",
  "id": "JFBKQmdlt0XAzjId",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[STG] [Zendesk Integration] Atualizações pedido de acolhimento",
  "nodes": [
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-support-request",
        "options": {}
      },
      "id": "fdc59282-a0bb-42b2-9a3c-4999f63f15a5",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        300,
        260
      ],
      "webhookId": "e75a3673-697e-4507-a895-74cf6b7db0b4",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const zendesk_ticket_id = item.json.body.id;\n  let status;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  const tags = item.json.body.tags\n  \n\n  if(item.json.body.status_acolhimento === \"solicitação_recebida\" && tags.includes(\"nova-voluntaria-com-prioridade\")){\n     \n    status = \"special_case\";\n  \n  }\n  else {\n    const status_lookup = {\n      \"solicitação_recebida\": \"open\",\n      \"encaminhamento__realizado_para_serviço_público\": \"public_service\",\n      \"encaminhamento__realizado\": \"matched\",\n      \"encaminhamento__assistente_social\": \"social_worker\",\n      \"encaminhamento__servico_publico_com_assistente_social\": \"public_service_with_social_worker\"\n    }\n\n    status = status_lookup[status_acolhimento]\n    \n  }\n\n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "8d849222-7fb3-4ff3-abd0-3b2db2526786",
      "name": "Extracts zendesk_ticket_id and support_request_status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        520,
        260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tsupport_request_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status\nFROM match.support_requests\nWHERE zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "5628d0f7-0f0d-4a96-b8a6-562873369249",
      "name": "Fetch support_request_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        760,
        260
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "6b717e19-6e86-4845-8b2e-bb82553478e3",
      "name": "Is it a new status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        980,
        260
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE support_request_id = {{$json[\"support_request_id\"]}};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json[\"support_request_id\"]}}, '{{$json[\"new_status\"]}}', NOW());",
        "additionalFields": {}
      },
      "id": "05e2a4f2-78f8-4615-b5bb-355252c131dc",
      "name": "Update support_request status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1280,
        240
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "8e2195d7-5e7c-4f8a-80d2-9198c6d5b992",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1280,
        480
      ]
    },
    {
      "parameters": {
        "content": "updates support_request",
        "height": 80,
        "width": 200.46763117115643
      },
      "id": "dd656853-5659-4264-9f2b-782ecd522a10",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        300,
        160
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "id": "afd327c8-e28a-4e25-8035-36401929ff2c",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [
        280,
        1420
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT\n   match_id,\n   msr_id,\n   msr_zendesk_ticket_id,\n   volunteer_id,\n   volunteer_zendesk_ticket_id\nFROM match.matches\nWHERE\n   status = 'waiting_contact'\n   AND created_at >= '2024-01-25'\n   AND created_at < CURRENT_DATE - INTERVAL '30 DAY'",
        "additionalFields": {}
      },
      "id": "c8ab4d08-76fd-4a74-a8cf-18222485dbed",
      "name": "Fetch matches that should be expired today",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        640,
        1420
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"msr_zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__expirado"
              }
            ]
          },
          "publicReply": "Olá, {{ticket.requester.first_name}}!\n\nEspero que esteja bem na medida do possível.\n\nEstamos aqui para informá-la que hoje completam 30 dias do seu encaminhamento. Dessa forma, como não recebemos uma devolutiva acerca do início do atendimento entre você e a profissional indicada, sua vaga será liberada para uma outra mulher que necessite de ajuda.\n\nCaso, em algum outro momento, você deseje novamente receber nossa ajuda, é só escrever para o atendimento@mapadoacolhimento.org que te encaminharemos o contato de uma outra profissional disponível ou do serviço público mais próximo.\n\nConte conosco e nos escreva em caso de dúvidas. Estamos aqui para ajudá-la no que for possível <3.\n\nForte abraço,\nEquipe do Mapa do Acolhimento"
        }
      },
      "id": "740ca395-1ed3-407b-bdfe-3db6f5d7d992",
      "name": "Update MSR Zendesk ticket",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        960,
        1680
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "id": "={{$json[\"volunteer_zendesk_ticket_id\"]}}",
        "updateFields": {
          "customFieldsUi": {
            "customFieldsValues": [
              {
                "id": 360014379412,
                "value": "encaminhamento__expirado"
              }
            ]
          },
          "publicReply": "Olá, {{ticket.requester.first_name}}! Esperamos que você esteja bem! \n\nEstamos aqui para informá-la que hoje completam 30 dias desde o encaminhamento da {{ticket.ticket_field_360016681971}} mulher que precisa de ajuda. Dessa forma, como não recebemos uma devolutiva acerca do início do atendimento entre você e ela, estamos liberando sua vaga para um novo pedido de ajuda.\n\nNo entanto, se a {{ticket.ticket_field_360016681971}} te contactar, mesmo depois do tempo previsto, pedimos por favor que nos avise por e-mail ou por WhatsApp. Assim, poderemos garantir que ela receba o apoio que precisa e atualizar a sua disponibilidade no nosso sistema.\n\nVocê é parte essencial da nossa rede de apoio <3. Qualquer dúvida nos escreva.\n\nAbraços,\nEquipe do Mapa do Acolhimento"
        }
      },
      "id": "cfc9f2d3-5e61-4cc7-8072-8d5e68a19c1e",
      "name": "Update Volunteer Zendesk ticket",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        960,
        1940
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   volunteer_id,\n   zendesk_user_id, \n   current_matches,\n   max_matches,  \n   is_available,\n   condition\nFROM public.volunteer_availability\nLEFT JOIN public.volunteers ON volunteer_id = id\nWHERE volunteer_id = \t{{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "24df1812-7f16-4ca4-8072-f20976b1e83e",
      "name": "Fetch previous volunteer_availability and volunteer_status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        980,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"condition\"]}}",
              "value2": "indisponivel_sem_vagas"
            }
          ]
        }
      },
      "id": "a23a7ad8-c077-4a77-8314-2e9960fba171",
      "name": "Should update volunteer status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1420,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET  is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "4d7551b2-a68b-4e0b-be61-07edcce469c9",
      "name": "Update volunteer_availability and volunteer status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        1680,
        1160
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{$json[\"zendesk_user_id\"]}}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "Disponível"
              }
            ]
          }
        }
      },
      "id": "3d32900f-25c0-40d9-bb55-8d502e829a2d",
      "name": "Update zendesk Status da Mulher",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        1700,
        940
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "7456f317-b873-4287-ba7e-be628a77e310",
      "name": "Check current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1220,
        1460
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "c8295ebf-4615-471f-b32a-124760a4cd16",
      "name": "Should update current_matches?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1420,
        1460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "6d0c3795-be02-4973-b557-5a0934a41b20",
      "name": "Update current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        1660,
        1440
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.matches\nSET status = 'expired', updated_at = NOW()\nWHERE match_id = {{$json[\"match_id\"]}};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{$json[\"match_id\"]}}, 'expired', NOW());\n\nSELECT volunteer_id\nFROM match.matches\nWHERE match_id = {{$json[\"match_id\"]}};",
        "options": {}
      },
      "id": "5e3693b2-b371-4489-b1a2-b7c946f48d27",
      "name": "Expire matches in database",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        980,
        1460
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "expires matches",
        "height": 80,
        "width": 233.26349637113265
      },
      "id": "4b5a1eb1-11a2-419b-bcbc-ffd302343f44",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        280,
        1300
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.matches\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE match_id = {{$json[\"match_id\"]}};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{$json[\"match_id\"]}}, '{{$json[\"new_status\"]}}', NOW());\n\n\n",
        "additionalFields": {}
      },
      "id": "9678d673-7c66-438e-aef0-b517ab53c603",
      "name": "Update match status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3080,
        -100
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "53a6dfc0-564c-46c6-ba31-a373e2b718ac",
              "leftValue": "={{ $json.calculated_current_matches }}",
              "rightValue": "={{ $json.max_matches }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "4ebb3e92-6fbc-44ce-b977-6e07d2bdcda6",
      "name": "Should update is_available?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4200,
        880
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET is_available = FALSE\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "5118c3d0-6ade-47b0-a5f9-92ee59209ee2",
      "name": "Update is_available",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4540,
        860
      ],
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "fa143aea-49de-479a-9acd-2a188df0b168",
              "leftValue": "={{ $json.condition }}",
              "rightValue": "disponivel",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "1a453625-26d6-44d8-8d86-c8a5abac571c",
      "name": "Should update volunteer condition?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        4820,
        1120
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteers\nSET condition = 'indisponivel_sem_vagas', updated_at = NOW()\nWHERE id = {{ $json.volunteer_id }}\n",
        "options": {}
      },
      "id": "4d57cac7-4b33-43fe-be1e-e8405010094c",
      "name": "Update volunteer condition",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5320,
        940
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{ $json.volunteer_id }}, 'indisponivel_sem_vagas', NOW())",
        "options": {}
      },
      "id": "8a696fba-13f7-4153-9a0d-a8f14fefa174",
      "name": "Insert into volunteer_status_history",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        5300,
        1140
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tmatch_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status,\n    volunteer_id \nFROM match.matches\nWHERE volunteer_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT \nOR msr_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nORDER BY created_at DESC\nLIMIT 1",
        "options": {}
      },
      "id": "831820b8-4221-4abf-b0dc-01db061cb36a",
      "name": "Fetch match_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        2580,
        500
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_before_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_after_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "completed"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "388dd156-6fd9-470b-be5b-2823b1aa30fd",
      "name": "Is match interrupted or completed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3080,
        420
      ]
    },
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-match",
        "options": {}
      },
      "id": "a336946b-0c62-4bf9-8040-8677955ed38c",
      "name": "Webhook1",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        2120,
        500
      ],
      "webhookId": "2b6519a4-e57a-49a2-84bc-0911988dbe40",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const status_lookup = {\n      \"encaminhamento__realizado\": \"waiting_contact\",\n      \"encaminhamento_interrompido\": \"interrupted_before_support\",\n      \"atendimento__iniciado\": \"in_contact\",\n      \"atendimento__concluído\": \"completed\",\n      \"atendimento__interrompido\": \"interrupted_after_support\" \n  }\n \n  const zendesk_ticket_id = item.json.body.id;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  \n  const status = status_lookup[status_acolhimento]\n    \n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "9cabb717-e2c8-4223-8708-9d4e9d7f0abe",
      "name": "Extracts zendesk_ticket_id and support_request_status1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        2360,
        500
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "e834e8c2-563c-472f-8bba-69012473a626",
      "name": "Is it a new status?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2800,
        500
      ]
    },
    {
      "parameters": {},
      "id": "ff9fb8fd-dfb5-4a32-aad4-ffa2a8ca8085",
      "name": "NoOp1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2960,
        740
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"condition\"]}}",
              "value2": "indisponivel_sem_vagas"
            }
          ]
        }
      },
      "id": "c8d4fd74-bf0f-49ea-a0ab-7a2776840d47",
      "name": "Should update volunteer status?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3580,
        400
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   volunteer_id,\n   zendesk_user_id, \n   current_matches,\n    max_matches,  \n   is_available,\n   condition\nFROM public.volunteer_availability\nLEFT JOIN public.volunteers ON volunteer_id = id\nWHERE volunteer_id = \t{{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "e047c947-ec7e-4a2a-9aa2-ab20922b9262",
      "name": "Fetch previous volunteer_availability and volunteer_status1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3360,
        400
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "be6585e8-ed67-4598-98ee-ebed18d04ba7",
      "name": "Update volunteer_availability and volunteer status1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        3820,
        320
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{$json[\"zendesk_user_id\"]}}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "Disponível"
              }
            ]
          }
        }
      },
      "id": "9931f01a-defe-46f9-832e-23d23dd8f26f",
      "name": "Update zendesk Status da Mulher1",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        3820,
        120
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "WITH matches_from_volunteer AS (\n    SELECT \n        volunteer_id,\n        match_id\n    FROM match.matches\n    WHERE \n        volunteer_id = {{ $json.volunteer_id }}\n        AND status IN ('waiting_contact', 'in_contact')\n)\nSELECT\n    volunteer_id,\n    current_matches,\n    max_matches,\n    condition,\n    COUNT(DISTINCT match_id) AS calculated_current_matches\nFROM volunteer_availability a\nLEFT JOIN matches_from_volunteer m USING(volunteer_id)\nLEFT JOIN volunteers v ON v.id = a.volunteer_id\nWHERE \n    volunteer_id =  {{ $json.volunteer_id }}\nGROUP BY volunteer_id, current_matches, max_matches, condition",
        "options": {}
      },
      "id": "a3508278-7750-4796-8df9-ffd3af18170b",
      "name": "Check current_matches1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        3460,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "40361bb8-ee27-4874-8c13-bbaa181aaece",
              "leftValue": "={{ $json.current_matches }}",
              "rightValue": "={{ $json.calculated_current_matches }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "301fdf15-6ed8-4a2b-8327-352422aadd56",
      "name": "Should update current_matches?1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        3700,
        820
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE volunteer_availability\nSET current_matches = {{ $json.calculated_current_matches }}, updated_at = NOW()\nWHERE volunteer_id = {{ $json.volunteer_id }}",
        "options": {}
      },
      "id": "81dd724e-4f97-48b7-ac65-c6207dc60977",
      "name": "Update current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.3,
      "position": [
        4200,
        660
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Mapa"
        }
      }
    },
    {
      "parameters": {
        "content": "updates match",
        "height": 80,
        "width": 238.13661201650135
      },
      "id": "1df017cf-b41e-49ab-9939-9f968b2e0ba3",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2140,
        300
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [
    {
      "createdAt": "2024-01-09T22:32:23.916Z",
      "updatedAt": "2024-01-09T22:32:23.916Z",
      "id": "JnlufCPRnot361zL",
      "name": "zendesk integration"
    }
  ],
  "triggerCount": 3,
  "updatedAt": "2024-04-10T15:42:15.000Z",
  "versionId": "6d16cd57-0bc8-46a2-a492-e41ff79f4f6b"
}