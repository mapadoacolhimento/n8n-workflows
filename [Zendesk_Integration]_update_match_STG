{
  "active": false,
  "connections": {
    "Extracts zendesk_ticket_id and support_request_status": {
      "main": [
        [
          {
            "node": "Fetch match_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?": {
      "main": [
        [
          {
            "node": "Is match interrupted, expired or completed?",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch match_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch previous volunteer_availability and volunteer_status": {
      "main": [
        [
          {
            "node": "Should update volunteer status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should update volunteer status?": {
      "main": [
        [
          {
            "node": "Update volunteer_availability and volunteer status",
            "type": "main",
            "index": 0
          },
          {
            "node": "Update zendesk Status da Mulher",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update current_matches",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is match interrupted, expired or completed?": {
      "main": [
        [
          {
            "node": "Fetch previous volunteer_availability and volunteer_status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update match status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-16T20:59:43.188Z",
  "id": "Bw91NpjH2Vw5p427",
  "meta": null,
  "name": "[Zendesk Integration] update match STG",
  "nodes": [
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-match",
        "options": {}
      },
      "id": "a4d1f8d7-23f5-4359-b24b-484ed9afd6c7",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1240,
        840
      ],
      "webhookId": "8d21e22f-a2b9-4cdc-be05-719b68c861b7",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const status_lookup = {\n      \"encaminhamento__realizado\": \"waiting_contact\",\n      \"encaminhamento_interrompido\": \"interrupted_before_support\",\n      \"encaminhamento__expirado\": \"expired\",\n      \"atendimento__iniciado\": \"in_contact\",\n      \"atendimento__concluído\": \"completed\",\n      \"atendimento__interrompido\": \"interrupted_after_support\" \n  }\n \n  const zendesk_ticket_id = item.json.body.id;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  \n  const status = status_lookup[status_acolhimento]\n    \n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "33a84e80-e3dc-4dc5-bb9a-f37470220beb",
      "name": "Extracts zendesk_ticket_id and support_request_status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -1000,
        840
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "2c32da00-3b7a-4cac-b9a6-61a16a5ea862",
      "name": "Is it a new status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -560,
        840
      ]
    },
    {
      "parameters": {},
      "id": "0390aa58-d137-4880-9416-630edff3f914",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -260,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tmatch_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status,\n    volunteer_id \nFROM match.matches\nWHERE volunteer_zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "473f01ac-b0eb-4351-93b5-37db0cfc5116",
      "name": "Fetch match_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -780,
        840
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.matches\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE match_id = {{$json[\"match_id\"]}};\n\nINSERT INTO match.match_status_history (match_id, status, created_at)\nVALUES ({{$json[\"match_id\"]}}, '{{$json[\"new_status\"]}}', NOW());",
        "additionalFields": {}
      },
      "id": "44acab9d-b7ac-4f4c-989b-8c64fa3de349",
      "name": "Update match status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        0,
        900
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"condition\"]}}",
              "value2": "indisponivel_sem_vagas"
            }
          ]
        }
      },
      "id": "3afff3b9-893e-4229-aaef-86ba381897c5",
      "name": "Should update volunteer status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        220,
        680
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT\n   volunteer_id,\n   zendesk_user_id, \n   current_matches,\n    max_matches,  \n   is_available,\n   condition\nFROM public.volunteer_availability\nLEFT JOIN public.volunteers ON volunteer_id = id\nWHERE volunteer_id = \t{{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "6c021324-9b2e-481d-8c33-09f570172b2c",
      "name": "Fetch previous volunteer_availability and volunteer_status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        0,
        680
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteers\nSET condition = 'disponivel', updated_at = NOW()\nWHERE id = {{$json[\"volunteer_id\"]}};\n\nINSERT INTO public.volunteer_status_history (volunteer_id, status, created_at)\nVALUES ({{$json[\"volunteer_id\"]}}, 'disponivel', NOW());\n\nUPDATE public.volunteer_availability\nSET current_matches = GREATEST({{$json[\"current_matches\"]}} - 1, 0), is_available = TRUE, updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "6d8d6e8f-ad33-433c-92dd-c7933954cc7b",
      "name": "Update volunteer_availability and volunteer status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        660
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE public.volunteer_availability\nSET current_matches = GREATEST({{$json[\"current_matches\"]}} - 1, 0), updated_at = NOW()\nWHERE volunteer_id = {{$json[\"volunteer_id\"]}}",
        "additionalFields": {}
      },
      "id": "0ea0fb86-afcf-4b1f-9186-d45fec5eb0d7",
      "name": "Update current_matches",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        900
      ],
      "credentials": {
        "postgres": {
          "id": "lveNjRL3anzREWd8",
          "name": "[STG] Postgres account"
        }
      }
    },
    {
      "parameters": {
        "resource": "user",
        "operation": "update",
        "id": "={{$json[\"zendesk_user_id\"]}}",
        "updateFields": {
          "userFieldsUi": {
            "userFieldValues": [
              {
                "field": "condition",
                "value": "Disponível"
              }
            ]
          }
        }
      },
      "id": "bc6da394-1e4a-4c9e-ad90-e60ef8000459",
      "name": "Update zendesk Status da Mulher",
      "type": "n8n-nodes-base.zendesk",
      "typeVersion": 1,
      "position": [
        460,
        460
      ],
      "credentials": {
        "zendeskApi": {
          "id": "MYAFeR51noxrxEC7",
          "name": "Zendesk account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_before_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "interrupted_after_support"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "completed"
            },
            {
              "value1": "={{$json[\"new_status\"]}}",
              "value2": "expired"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "1f466d16-9548-4915-89d0-31ec6845d10f",
      "name": "Is match interrupted, expired or completed?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -280,
        760
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-09T22:32:23.916Z",
      "updatedAt": "2024-01-09T22:32:23.916Z",
      "id": "JnlufCPRnot361zL",
      "name": "zendesk integration"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-01-24T02:06:21.000Z",
  "versionId": "4ca8d0f5-c303-4c74-92c7-793dc4ad2a14"
}