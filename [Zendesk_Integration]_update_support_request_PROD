{
  "active": true,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extracts zendesk_ticket_id and support_request_status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extracts zendesk_ticket_id and support_request_status": {
      "main": [
        [
          {
            "node": "Fetch support_request_id and status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch support_request_id and status": {
      "main": [
        [
          {
            "node": "Is it a new status?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Is it a new status?": {
      "main": [
        [
          {
            "node": "Update support_request status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "NoOp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-01-16T20:56:18.812Z",
  "id": "qft2iaTtaPC1yHv2",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "[Zendesk Integration] update support_request PROD",
  "nodes": [
    {
      "parameters": {
        "authentication": "basicAuth",
        "httpMethod": "POST",
        "path": "update-support-request",
        "options": {}
      },
      "id": "b3c75cff-3f83-44d4-bed2-9fe41619136b",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -520,
        480
      ],
      "webhookId": "79aa3f88-502d-4171-aca9-040b24e9b319",
      "credentials": {
        "httpBasicAuth": {
          "id": "cw6WdIc7c9HRGleo",
          "name": "Zendesk auth"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "output = []\n\nfor (const item of $input.all()) {\n  const zendesk_ticket_id = item.json.body.id;\n  let status;\n  const status_acolhimento = item.json.body.status_acolhimento;\n  const tags = item.json.body.tags\n  \n\n  if(item.json.body.status_acolhimento === \"solicitação_recebida\" && tags.includes(\"nova-voluntaria-com-prioridade\")){\n     \n    status = \"special_case\";\n  \n  }\n  else {\n    const status_lookup = {\n      \"solicitação_recebida\": \"open\",\n      \"encaminhamento__realizado_para_serviço_público\": \"public_service\",\n      \"encaminhamento__realizado\": \"matched\",\n      \"encaminhamento__assistente_social\": \"social_worker\",\n      \"encaminhamento__servico_publico_com_assistente_social\": \"public_service_with_social_worker\"\n    }\n\n    status = status_lookup[status_acolhimento]\n    \n  }\n\n  const newItem = {\n    \"zendesk_ticket_id\": zendesk_ticket_id,\n    \"status\": status\n  }\n  output.push(newItem)\n}\n\nreturn output;"
      },
      "id": "f7435282-4a55-4611-8570-8b50e068994b",
      "name": "Extracts zendesk_ticket_id and support_request_status",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -300,
        480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=SELECT \n\tsupport_request_id, \n\tstatus AS current_status,\n    '{{$json[\"status\"]}}' AS new_status\nFROM match.support_requests\nWHERE zendesk_ticket_id = {{$json[\"zendesk_ticket_id\"]}}::BIGINT\nLIMIT 1",
        "additionalFields": {}
      },
      "id": "b6956cda-4c10-4b65-9bc1-0d88c9714b89",
      "name": "Fetch support_request_id and status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        -60,
        480
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"current_status\"]}}",
              "operation": "notEqual",
              "value2": "={{$json[\"new_status\"]}}"
            }
          ]
        }
      },
      "id": "36b12d8d-e9c0-436a-8f29-46bfe9054efc",
      "name": "Is it a new status?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        160,
        480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "=UPDATE match.support_requests\nSET status = '{{$json[\"new_status\"]}}', updated_at = NOW()\nWHERE support_request_id = {{$json[\"support_request_id\"]}};\n\nINSERT INTO match.support_request_status_history (support_request_id, status, created_at)\nVALUES ({{$json[\"support_request_id\"]}}, '{{$json[\"new_status\"]}}', NOW());",
        "additionalFields": {}
      },
      "id": "5dafbdec-1249-45b8-91fe-42d363de20f7",
      "name": "Update support_request status",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [
        460,
        460
      ],
      "credentials": {
        "postgres": {
          "id": "c5mNsjWNXx3mw1Fh",
          "name": "[PROD] Mapa"
        }
      }
    },
    {
      "parameters": {},
      "id": "aa9d02d9-7b05-44c1-ad3c-552f4133b67a",
      "name": "NoOp",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        460,
        700
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "HYstwqyTrzYsvJ2P"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-01-09T22:32:23.916Z",
      "updatedAt": "2024-01-09T22:32:23.916Z",
      "id": "JnlufCPRnot361zL",
      "name": "zendesk integration"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-02-08T13:46:53.000Z",
  "versionId": "5c4be5bc-4118-4939-980c-4a2e03c4c961"
}